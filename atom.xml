<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CY</title>
  
  
  <link href="https://yao-chen-ecnu.github.io/atom.xml" rel="self"/>
  
  <link href="https://yao-chen-ecnu.github.io/"/>
  <updated>2021-06-22T03:01:09.907Z</updated>
  <id>https://yao-chen-ecnu.github.io/</id>
  
  <author>
    <name>CY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Distilling the Knowledge in a Neural Network</title>
    <link href="https://yao-chen-ecnu.github.io/2021/06/22/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/"/>
    <id>https://yao-chen-ecnu.github.io/2021/06/22/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/</id>
    <published>2021-06-22T02:47:54.194Z</published>
    <updated>2021-06-22T03:01:09.907Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/image-20210505100530230-1624330743279.png" alt></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>提高机器学习算法表现的一个简单方法就是，训练不同模型然后对预测结果取平均。<br>但是要训练多个模型会带来过高的计算复杂度和部署难度。<br><strong>可以将集成的知识压缩在单一的模型中。</strong><br>论文使用这种方法在MNIST上做实验，发现取得了不错的效果。<br>论文还介绍了一种新型的集成，包括一个或多个完整模型和专用模型，能够学习区分完整模型容易混淆的细粒度的类别。</p><h2 id="1-introduction"><a class="markdownIt-Anchor" href="#1-introduction"></a> 1 Introduction</h2><p>昆虫有幼虫期和成虫期，幼虫期主要行为是吸收养分，成虫期主要行为是生长繁殖。<br>类似地，大规模机器学习应用可以分为训练阶段和部署阶段，训练阶段不要求实时操作，允许训练一个复杂缓慢的模型，这个模型可以是分别训练多个模型的集成，也可以是单独的一个很大的带有强正则比如dropout的模型。<br>一旦模型训练好，可以用不同的训练，这里称为“蒸馏”，去把知识转移到更适合部署的小模型上。</p><p>复杂模型学习区分大量的类，通常的训练目标是最大化正确答案的平均log概率，这么做有一个副作用就是训练模型同时也会给所有的错误答案分配概率，即使这个概率很小，而有一些概率会比其它的大很多。错误答案的相对概率体现了复杂模型的泛化能力。举个例子，宝马的图像被错认为垃圾箱的概率很低，但是这被个错认为垃圾桶的概率相比于被错认为胡萝卜的概率来说，是很大的。<strong>（可以认为模型不止学到了训练集中的宝马图像特征，还学到了一些别的特征，比如和垃圾桶共有的一些特征，这样就可能捕捉到在新的测试集上的宝马出现这些的特征，这就是泛化能力的体现）</strong></p><p>将复杂模型转为小模型需要保留模型的泛化能力，一个方法就是用复杂模型产生的分类概率作为“软目标”来训练小模型。<br>当软目标的熵值较高时，相对于硬目标，每个训练样本提供更多的信息，训练样本之间会有更小的梯度方差。<br>所以小模型经常可以被训练在小数据集上，而且可以使用更高的学习率。</p><p>像MNIST这种分类任务，复杂模型可以产生很好的表现，大部分信息分布在小概率的软目标中。<br>为了规避这个问题，Caruana和他的合作者们使用softmax输出前的units值，而不是softmax后的概率，最小化复杂模型和简单模型的units的平方误差来训练小模型。<br><strong>而更通用的方法，蒸馏法，先提高softmax的温度参数直到模型能产生合适的软目标。然后在训练小模型匹配软目标的时候使用相同的温度T。</strong></p><p>被用于训练小模型的转移训练集可以包括未打标签的数据（<strong>可以没有原始的实际标签，因为可以通过复杂模型获取一个软目标作为标签</strong>），或者使用原始的数据集，使用原始数据集可以得到更好的表现。</p><h2 id="2-distillation"><a class="markdownIt-Anchor" href="#2-distillation"></a> 2 Distillation</h2><p>原始softmax公式：</p><p><img src="/images/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/image-20210506200536063.png" alt></p><p>但要是直接使用softmax层的输出值作为soft target, 这又会带来一个问题: 当softmax输出的概率分布熵相对较小时，负标签的值都很接近0，对损失函数的贡献非常小，小到可以忽略不计。因此**“温度”**这个变量就派上了用场。</p><p>下面的公式时加了温度这个变量之后的softmax函数:</p><p><img src="/images/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/image-20210505104750487.png" alt>T越大可以得到更&quot;软&quot;的概率分布。<br>（<strong>T越大，不同激活值的概率差异越小，所有激活值的概率趋于相同；T越小，不同激活值的概率差异越大</strong>)</p><p><img src="/images/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/v2-a120cc4bbb70b96968210b995b2e39d1_r.jpg" alt></p><p>（<strong>在蒸馏训练的时候使用较大的T的原因是，较小的T对于那些远小于平均激活值的单元会给予更少的关注，而这些单元是有用的，使用较高的T能够捕捉这些信息</strong>）</p><p><img src="https://img-blog.csdnimg.cn/20210420154449334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hdHVyZTU1Mzg2Mw==,size_16,color_FFFFFF,t_70" alt="img"></p><p>如上图所示，教师网络（左侧）的预测输出除以温度参数（Temperature）之后、再做softmax变换，可以获得软化的概率分布（软目标或软标签），数值介于0~1之间，取值分布较为缓和。</p><p>Temperature数值越大，分布越缓和；而Temperature数值减小，容易放大错误分类的概率，引入不必要的噪声。针对较困难的分类或检测任务，Temperature通常取1，确保教师网络中正确预测的贡献。</p><p>硬目标则是样本的真实标注，可以用one-hot矢量表示。</p><p>total loss设计为软目标与硬目标所对应的交叉熵的加权平均（表示为KD loss与CE loss），其中软目标交叉熵的加权系数越大，表明迁移诱导越依赖教师网络的贡献，这对训练初期阶段是很有必要的，有助于让学生网络更轻松的鉴别简单样本，但训练后期需要适当减小软目标的比重，让真实标注帮助鉴别困难样本。</p><p>另外，教师网络的推理性能通常要优于学生网络，而模型容量则无具体限制，且教师网络推理精度越高，越有利于学生网络的学习。</p><h2 id="3-preliminary-experiments-on-mnist"><a class="markdownIt-Anchor" href="#3-preliminary-experiments-on-mnist"></a> 3 Preliminary experiments on MNIST</h2><table><thead><tr><th style="text-align:center">net</th><th style="text-align:center">layers</th><th style="text-align:center">units of each layer</th><th style="text-align:center">activation</th><th style="text-align:center">regularization</th><th style="text-align:center">test errors</th></tr></thead><tbody><tr><td style="text-align:center">single net1</td><td style="text-align:center">2</td><td style="text-align:center">1600</td><td style="text-align:center">relu</td><td style="text-align:center">dropout</td><td style="text-align:center">67</td></tr><tr><td style="text-align:center">single net2</td><td style="text-align:center">2</td><td style="text-align:center">800</td><td style="text-align:center">relu</td><td style="text-align:center">no</td><td style="text-align:center">146</td></tr></tbody></table><table><thead><tr><th style="text-align:center">net</th><th style="text-align:center">large net</th><th style="text-align:center">small net</th><th style="text-align:center">temperature</th><th style="text-align:center">test errors</th></tr></thead><tbody><tr><td style="text-align:center">distilled net</td><td style="text-align:center">single net1</td><td style="text-align:center">single net2</td><td style="text-align:center">20</td><td style="text-align:center">74</td></tr></tbody></table><p><strong>在MNIST这个数据集上，先使用大的网络进行训练，测试集错误67个，小网络训练，测试集错误146个。加入soft targets到目标函数中，相当于正则项，测试集的错误降低到了74个。这证明了teacher网络确实把知识转移到了student网络，使得结果变好了。</strong></p><h2 id="4-experiments-on-speech-recognition"><a class="markdownIt-Anchor" href="#4-experiments-on-speech-recognition"></a> 4 Experiments on speech recognition</h2><p>研究了用于自动语音识别的深度神经网络(DNN)声学模型的集成效果。我们表明，我们在本文中提出的提取策略实现了将一组模型提取到单个模型中的预期效果，该模型比直接从相同训练数据中学习的相同大小的模型工作得更好。</p><table><thead><tr><th style="text-align:center">system</th><th style="text-align:center">Test Frame Accuracy</th><th style="text-align:center">Word Error Rate on dev set</th></tr></thead><tbody><tr><td style="text-align:center">baseline</td><td style="text-align:center">58.9%</td><td style="text-align:center">10.9%</td></tr><tr><td style="text-align:center">10XEnsemble</td><td style="text-align:center">61.1%</td><td style="text-align:center">10.7%</td></tr><tr><td style="text-align:center">Distilled model</td><td style="text-align:center">60.8%</td><td style="text-align:center">10.7%</td></tr></tbody></table><p>其中basline的配置为</p><ul><li>8 层，每层2560个relu单元</li><li>softmax层的单元数为14000</li><li>训练样本大小约为 700M，2000个小时的语音文本数据</li></ul><p>10XEnsemble是对baseline训练10次（随机初始化为不同参数）然后取平均</p><p>蒸馏模型的配置为</p><ul><li>使用的候选温度为{1, 2, 5, 10}, 其中T为2时表现最好</li><li>hard target 的目标函数给予0.5的相对权重</li></ul><p><strong>使用不同的参数训练了10个DNN，对这10个模型的预测结果求平均作为emsemble的结果，相比于单个模型有一定的提升。然后将这10个模型作为teacher网络，训练student网络。得到的Distilled Single model相比于直接的单个网络，也有一定的提升</strong></p><h2 id="5-training-ensembles-of-specialists-on-very-big-datasets"><a class="markdownIt-Anchor" href="#5-training-ensembles-of-specialists-on-very-big-datasets"></a> 5 Training ensembles of specialists on very big datasets</h2><p>训练一个大的集成模型可以利用并行计算来训练，训练完成后把大模型蒸馏成小模型，但是另一个问题就是，训练本身就要花费大量的时间，这一节介绍的是如何学习专用模型集合，集合中的每个模型集中于不同的容易混淆的子类集合，这样可以减小计算需求。专用模型的主要问题是容易集中于区分细粒度特征而导致过拟合，可以使用软目标来防止过拟合。</p><h3 id="51-jft数据集"><a class="markdownIt-Anchor" href="#51-jft数据集"></a> 5.1 JFT数据集</h3><p>JFT是一个谷歌的内部数据集，有1亿的图像，15000个标签。google用一个深度卷积神经网络，训练了将近6个月。<br>我们需要更快的方法来提升baseline模型。</p><h3 id="52-专用模型"><a class="markdownIt-Anchor" href="#52-专用模型"></a> 5.2 专用模型</h3><p>将一个复杂模型分为两部分，一部分是一个用于训练所有数据的通用模型，另一部分是很多个专用模型，每个专用模型训练的数据集是一个容易混淆的子类集合。这些专用模型的softmax结合所有不关心的类为一类来使模型更小。</p><p>为了减少过拟合，共享学习到的低水平特征，每个专用模型用通用模型的权重进行初始化。另外，专用模型的训练样本一半来自专用子类集合，另一半从剩余训练集中随机抽取。</p><h3 id="53-将子类分配到专用模型"><a class="markdownIt-Anchor" href="#53-将子类分配到专用模型"></a> 5.3 将子类分配到专用模型</h3><p>专用模型的子类分组集中于容易混淆的那些类别，虽然计算出了混淆矩阵来寻找聚类，但是可以使用一种更简单的办法，不需要使用真实标签来构建聚类。对通用模型的预测结果计算协方差，根据协方差把经常一起预测的类作为其中一个专用模型的要预测的类别。几个简单的例子如下。</p><blockquote><p>JFT 1: Tea party; Easter; Bridal shower; Baby shower; Easter Bunny; …<br>JFT 2: Bridge; Cable-stayed bridge; Suspension bridge; Viaduct; Chimney; …<br>JFT 3: Toyota Corolla E100; Opel Signum; Opel Astra; Mazda Familia; …</p></blockquote><h3 id="54-实验表现"><a class="markdownIt-Anchor" href="#54-实验表现"></a> 5.4 实验表现</h3><table><thead><tr><th style="text-align:center">system</th><th style="text-align:center">Conditional Test Accuracy</th><th style="text-align:center">Test Accuracy</th></tr></thead><tbody><tr><td style="text-align:center">baseline</td><td style="text-align:center">43.1%</td><td style="text-align:center">25.0%</td></tr><tr><td style="text-align:center">61 specialist models</td><td style="text-align:center">45.9%</td><td style="text-align:center">26.1%</td></tr></tbody></table><h2 id="6-soft-targets-as-regularizers"><a class="markdownIt-Anchor" href="#6-soft-targets-as-regularizers"></a> 6 Soft Targets as Regularizers</h2><p>我们关于使用软目标而不是硬目标的主要主张之一是，许多有用的信息可以在软目标中携带，而这些信息不可能用单个硬目标编码。表5显示，只有3%的数据(约20M个例子)，用硬目标训练基线模型会导致严重的过度拟合(我提前停止了训练，因为精度在达到44.5%后急剧下降)，而用软目标训练的相同模型能够恢复完整训练集中的几乎所有信息(约2%)。更值得注意的是，我们不需要提前停止:具有软目标的系统简单地“收敛”到57%。这表明，软目标是一种非常有效的方式，可以将模型在所有数据上发现的规律传递给另一个模型。。</p><table><thead><tr><th style="text-align:center">system &amp; training set</th><th style="text-align:center">Train Frame Accuracy</th><th style="text-align:center">Test Frame Accuracy</th></tr></thead><tbody><tr><td style="text-align:center">baseline(100% training set)</td><td style="text-align:center">63.4%</td><td style="text-align:center">58.9%</td></tr><tr><td style="text-align:center">baseline(3% training set)</td><td style="text-align:center">67.3%</td><td style="text-align:center">44.5%</td></tr><tr><td style="text-align:center">soft targets(3% training set)</td><td style="text-align:center">65.4%</td><td style="text-align:center">57.0%</td></tr></tbody></table><h2 id="简要总结"><a class="markdownIt-Anchor" href="#简要总结"></a> 简要总结</h2><p><strong>主要工作</strong></p><ol><li>“蒸馏”（<strong>distillation</strong>）：把大网络的知识压缩成小网络的一种方法</li><li>“专用模型”（<strong>specialist models</strong>）：对于一个大网络，可以训练多个专用网络来提升大网络的模型表现</li></ol><p><strong>具体做法</strong></p><ol><li><strong>蒸馏</strong>：先训练好一个大网络，在最后的softmax层使用合适的温度参数T，最后训练得到的概率称为“软目标”。以这个软目标和真实标签作为目标，去训练一个比较小的网络，训练的时候也使用在大模型中确定的温度参数T</li><li><strong>专用模型</strong>：对于一个已经训练好的大网络，可以训练一系列的专用模型，每个专用模型只训练一部分专用的类以及一个“不属于这些专用类的其它类”，比如专用模型1训练的类包括“显示器”，“鼠标”，“键盘”，…，“其它”；专用模型2训练的类包括“玻璃杯”，“保温杯”，“塑料杯”，“其它“。最后以专用模型和大网络的预测输出作为目标，训练一个最终的网络来拟合这个目标。</li></ol><p><strong>意义</strong></p><ol><li>蒸馏<strong>把大网络压成小网络</strong>，这样就可以先在训练阶段花费大精力训练一个大网络，然后<strong>在部署阶段以较小的计算代价来产生一个较小的网络</strong>，同时保持一定的网络预测表现。</li><li>对于一个已经训练好的大网络，如果要去做集成的话计算开销是很大的，可以在这个基础上<strong>训练一系列专用模型</strong>，因为这些模型通常比较小，所以训练会快很多，而且有了这些专用模型的输出可以得到一个软目标，实验证明使用软目标训练可以减小过拟合。最后根据这个大网络和一系列专用模型的输出作为目标，训练一个最终的网络，可以得到不错的表现，而且<strong>不需要对大网络做大量的集成计算</strong>。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/Distilling%20the%20Knowledge%20in%20a%20Neural%20Network/image-20210505100530230-1624330743279.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;ab</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="知识蒸馏" scheme="https://yao-chen-ecnu.github.io/tags/%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F/"/>
    
  </entry>
  
  <entry>
    <title>DistillE</title>
    <link href="https://yao-chen-ecnu.github.io/2021/06/22/DistilE/"/>
    <id>https://yao-chen-ecnu.github.io/2021/06/22/DistilE/</id>
    <published>2021-06-22T02:47:54.190Z</published>
    <updated>2021-06-22T03:05:50.270Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/DistilE/image-20210516151340437.png" alt></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>知识图嵌入(KGE)是一种流行的KG推理方法，通常高维度的知识图嵌入可以保证更好的推理能力。然而，高维数据对存储和计算资源提出了巨大的挑战，不适合资源受限或时间受限的应用，因此需要更快、更便宜的推理。**为了解决这个问题，我们提出了蒸馏法，一种从预先训练好的高维老师KGE那里建立低维学生KGE的知识蒸馏方法。**我们将原始的KGE损耗作为硬标签损失，针对蒸馏过程中不同类型的KGE设计了特定的软标签损失。<strong>我们还提出了一个两阶段的提炼方法，使学生和老师相互适应，进一步提高学生的推理能力</strong>。</p><p>相关预测实验结果表明，<strong>该方法成功蒸馏得到一个好学生，其性能优于直接训练的同维学生，有时甚至优于教师</strong>，并且在性能损失较小的情况下，可以达到2倍至8倍的嵌入压缩率，推理速度比教师快10倍以上。我们还通过消融研究实验证明了我们的两阶段训练方案的有效性。</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>为了获得更好的性能，通常首选训练更高维数的KGE。而模型的大小，即参数的数量和推理时间的成本通常随着嵌入维数的增加而快速增加。如图1所示，<strong>随着嵌入维数变大，模型(MRR)的性能增长越来越慢，而模型大小和推理成本增长仍然很快</strong>。</p><p><img src="/images/DistilE/image-20210516154002495.png" alt></p><p>然而，高维嵌入在许多现实生活场景中是不切实际的。例如，一个预先训练的十亿规模的知识图谱被期望被微调以解决下游任务，并以更低的成本频繁部署。对于计算资源有限的应用程序，如在边缘计算或移动设备上部署KG，或者推理时间有限的应用程序，如在线财务预测，较低维度的嵌入提供了明显甚至不可或缺的便利。虽然低维度能够实现更快的部署和更便宜的推理，但是直接用小嵌入量进行训练通常表现不佳，如图1所示。因此，<strong>我们提出了一个新的研究问题:是否有可能从预先训练好的高维数据中提取低维的kge，以便只要更快和更便宜的推理就能获得好的性能？</strong></p><p>知识蒸馏是一种从大模型(教师)中提取知识以构建小模型(学生)的技术，已在计算机视觉和自然语言处理领域得到广泛研究。学生从硬标签(事实标签)和老师的软标签中学习。在这项工作中，我们提出了一种新的大规模知识图谱训练蒸馏方法，称为DistilE，它能够从高维KGE将知识提取到一个更小的嵌入中去，而不会损失太多的准确性，同时表现要比直接用相同小的嵌入直接去训练好的多。</p><p>我们还提出了一种两阶段蒸馏方法来进一步改善蒸馏结果。基本的想法是，虽然受过训练的老师已经很强了，但如果老师也能向学生学习，而不是一直固定不变，就可以取得更好的成绩。<strong>因此，除了一个标准的蒸馏阶段，在这个阶段中，老师总是静止的，我们设计了第二个蒸馏阶段，在这个阶段中，老师被解冻，并试图调整自己从而变得更容易被学生接受。</strong></p><p>实验结果证明了该方法的有效性，结果表明:</p><ul><li>(1)蒸馏得到的低维嵌入比直接训练相同大小的嵌入要好得多</li><li>(2)蒸馏得到的低维嵌入比原始的高维嵌入要快得多</li><li>(3)两阶段蒸馏方法效果良好，可以进一步提高蒸馏结果。</li></ul><p>主要贡献：</p><ul><li>我们提出了一个新的框架来从高维KGE中提取低维的KGE。这是第一次将知识蒸馏应用于知识图嵌入。</li><li>我们为不同种类的KGE设计不同的软标签，并采用两阶段蒸馏来提高蒸馏效果。</li><li>我们通过实验证明，我们可以将KGE的参数数量减少8倍，并将推理速度提高10倍以上，同时保持良好的性能。</li></ul><h2 id="method"><a class="markdownIt-Anchor" href="#method"></a> Method</h2><p>首先，我们为不同类型的KGE设计不同的蒸馏目标。然后，我们介绍我们的两阶段蒸馏方法，以不断调整教师更好的蒸馏结果。</p><h3 id="蒸馏目标"><a class="markdownIt-Anchor" href="#蒸馏目标"></a> 蒸馏目标</h3><p>给定一个KG <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">K</mi><mo>=</mo><mo stretchy="false">{</mo><mi>E</mi><mo separator="true">,</mo><mi>R</mi><mo separator="true">,</mo><mi>T</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\mathcal{K}=\{E, R, T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">}</span></span></span></span>，其中E，R，T分别是实体，关系，三元组的集合。具体来说，对于三元组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h,r,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>，KGE模型可以通过分数函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{r}(h, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>得到嵌入的分数，以表示嵌入的效果。不同评分函数的KGE有不同的训练目标和相应的损失函数。两种最常用的KGE损失包括<strong>边界损失</strong>和<strong>交叉熵损失</strong>。对于不同类型的损失，需要不同类型的蒸馏目标。</p><h4 id="objective-for-kges-with-marginal-loss"><a class="markdownIt-Anchor" href="#objective-for-kges-with-marginal-loss"></a> Objective for KGEs with Marginal Loss</h4><p>边界损失通常适用于基于翻译的KGE，包括TransE,TransH, TransR, and TransD等。</p><p>评分函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{r}(h, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>是基于距离指标来评价一个嵌入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h,r,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></p><p>训练目标是使<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{r}(h, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>对正三元组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h,r,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>较小，对负三元组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h,r,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>较大，并迫使正、负三元组分数之间的差值大于一个差值。</p><p><strong>教师的损失</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>L</mi><mtext>hard </mtext><mi>T</mi></msubsup><mo>=</mo><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi></mrow></msub><msub><mrow><mo fence="true">[</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mrow><mo fence="true">(</mo><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><mo fence="true">]</mo></mrow><mo>+</mo></msub></mrow><annotation encoding="application/x-tex">L_{\text {hard }}^{T}=\sum_{(h, r, t) \in G}\left[f_{r}^{T}(h, t)-f_{r}^{T}\left(h^{\prime}, t^{\prime}\right)+\gamma\right]_{+}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.32471em;vertical-align:-0.47471em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.00862099999999999em;"><span style="top:-2.30029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45804100000000003em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{r}^{T}(h, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>是正样本<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h,r,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>的评分，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mrow><mo fence="true">(</mo><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">f_{r}^{T}\left(h^{\prime}, t^{\prime}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>是负样本<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(h^{\prime}, r, t^{\prime}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>的评分</p><p><strong>学生的硬标签损失</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>L</mi><mtext>hard </mtext><mi>S</mi></msubsup><mo>=</mo><msub><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi></mrow></msub><msub><mrow><mo fence="true">[</mo><msubsup><mi>f</mi><mi>r</mi><mi>S</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>f</mi><mi>r</mi><mi>S</mi></msubsup><mrow><mo fence="true">(</mo><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo fence="true">)</mo></mrow><mo>+</mo><mi>γ</mi><mo fence="true">]</mo></mrow><mo>+</mo></msub></mrow><annotation encoding="application/x-tex">L_{\text {hard }}^{S}=\sum_{(h, r, t) \in G}\left[f_{r}^{S}(h, t)-f_{r}^{S}\left(h^{\prime}, t^{\prime}\right)+\gamma\right]_{+}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.32471em;vertical-align:-0.47471em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.00862099999999999em;"><span style="top:-2.30029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45804100000000003em;"><span></span></span></span></span></span></span></span></span></span></p><p><strong>学生的软标签损失</strong>：</p><p>由于这些KGE像传统的知识蒸馏方法一样缺乏必要的概率输出层，拟合概率分布在这里不适用。一个自然的选择是使用老师的嵌入评分作为学生的软标签，因为分数包含了关于三元组真实性的更丰富的信息。然后，我们让学生通过最小化这两个分数之间的差异来适应老师。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mtext>soft </mtext><mi>S</mi></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi></mrow></munder><mo stretchy="false">(</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo fence="true">∣</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>f</mi><mi>r</mi><mi>S</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">∣</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mrow><mo fence="true">∣</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mrow><mo fence="true">(</mo><msubsup><mi>h</mi><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>t</mi><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo fence="true">)</mo></mrow><mo>−</mo><msubsup><mi>f</mi><mi>r</mi><mi>S</mi></msubsup><mrow><mo fence="true">(</mo><msubsup><mi>h</mi><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>t</mi><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo fence="true">)</mo></mrow><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{\text {soft }}^{S}=\sum_{(h, r, t) \in G}(&amp;\left|f_{r}^{T}(h, t)-f_{r}^{S}(h, t)\right| \\&amp;\left.+\sum_{i=1}^{k}\left|f_{r}^{T}\left(h_{i}^{\prime}, t_{i}^{\prime}\right)-f_{r}^{S}\left(h_{i}^{\prime}, t_{i}^{\prime}\right)\right|\right)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.2797920000000005em;vertical-align:-2.8898960000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3898960000000002em;"><span style="top:-6.176004000000001em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mopen">(</span></span></span><span style="top:-2.523886em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8898960000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3898960000000002em;"><span style="top:-6.176004000000001em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.523886em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8898960000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>最终损失</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mi>α</mi><msubsup><mi>L</mi><mtext>soft </mtext><mi>S</mi></msubsup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msubsup><mi>L</mi><mtext>hard </mtext><mi>S</mi></msubsup></mrow><annotation encoding="application/x-tex">L=\alpha L_{\text {soft }}^{S}+(1-\alpha) L_{\text {hard }}^{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="objective-for-kges-with-cross-entropy-loss"><a class="markdownIt-Anchor" href="#objective-for-kges-with-cross-entropy-loss"></a> Objective for KGEs with Cross Entropy Loss.</h4><p>交叉熵损失通常用于输出具有概率解释的模型，例如，双线性模型(如ComplEx)、旋转模型(如RotatE)和基于神经网络的模型。</p><p><strong>教师损失</strong>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mtext>hard </mtext><mi>T</mi></msubsup><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi><mo>∪</mo><msup><mi>G</mi><mo>−</mo></msup></mrow></munder><mrow><mo fence="true">(</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{\text {hard }}^{T}=&amp;-\sum_{(h, r, t) \in G \cup G^{-}}\left(y \log p_{(h, r, t)}^{T}\right.\\&amp;\left.+(1-y) \log \left(1-p_{(h, r, t)}^{T}\right)\right),\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.066025em;vertical-align:-2.2830125em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span><span class="mbin mtight">∪</span><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">p_{(h, r, t)}^{T}=\frac{\exp f_{r}^{T}(h, t)}{1+\exp f_{r}^{T}(h, t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3383309999999997em;vertical-align:-0.49699999999999994em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999998em;"><span style="top:-2.378em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7056299999999998em;vertical-align:-0.5520649999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.153565em;"><span style="top:-2.6481350000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.214em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">exp</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.214em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5520649999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><strong>学生的硬标签损失</strong>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mrow><mi>h</mi><mi>a</mi><mi>r</mi><mi>d</mi></mrow><mi>S</mi></msubsup><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi><mo>∪</mo><msup><mi>G</mi><mo>−</mo></msup></mrow></munder><mrow><mo fence="true">(</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>S</mi></msubsup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>S</mi></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo separator="true">,</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{h a r d}^{S}=&amp;-\sum_{(h, r, t) \in G \cup G^{-}}\left(y \log p_{(h, r, t)}^{S}\right.\\&amp;\left.+(1-y) \log \left(1-p_{(h, r, t)}^{S}\right)\right),\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.066025em;vertical-align:-2.2830125em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span><span class="mbin mtight">∪</span><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>学生的软标签损失</strong>：</p><p>由于这些知识的输出具有概率解释，学生的软标签损失可以定义为学生和教师输出的概率分布的交叉熵，如传统的知识提取方法:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mtext>soft </mtext><mi>S</mi></msubsup><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi><mo>∪</mo><msup><mi>G</mi><mo>−</mo></msup></mrow></munder><mrow><mo fence="true">(</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mi>log</mi><mo>⁡</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>S</mi></msubsup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mo fence="true">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>S</mi></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{\text {soft }}^{S}=&amp;-\sum_{(h, r, t) \in G \cup G^{-}}\left(p_{(h, r, t)}^{T} \log p_{(h, r, t)}^{S}\right.\\&amp;\left.+\left(1-p_{(h, r, t)}^{T}\right) \log \left(1-p_{(h, r, t)}^{S}\right)\right)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.066025em;vertical-align:-2.2830125em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span><span class="mbin mtight">∪</span><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>最终损失</strong>：同上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mi>α</mi><msubsup><mi>L</mi><mtext>soft </mtext><mi>S</mi></msubsup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msubsup><mi>L</mi><mtext>hard </mtext><mi>S</mi></msubsup></mrow><annotation encoding="application/x-tex">L=\alpha L_{\text {soft }}^{S}+(1-\alpha) L_{\text {hard }}^{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1244389999999997em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span></span></span></p><p><img src="/images/DistilE/image-20210518185304396.png" alt></p><h3 id="两阶段蒸馏"><a class="markdownIt-Anchor" href="#两阶段蒸馏"></a> 两阶段蒸馏</h3><p>在前面的部分中，我们介绍了如何让学生从KGE老师那里获取知识，其中学生使用固定老师生成的硬标签和软标签进行培训。为了获得一个更好的学生，我们提出了一个两阶段的提炼方法，通过解冻老师并让老师在提炼的第二阶段向学生学习来提高学生对老师的接受度。</p><h4 id="第一阶段"><a class="markdownIt-Anchor" href="#第一阶段"></a> 第一阶段</h4><p>第一阶段类似于传统的知识提炼方法，在这一阶段中，教师被冻结，在培训学生时保持不变，如前一节所述。</p><h4 id="第二阶段"><a class="markdownIt-Anchor" href="#第二阶段"></a> 第二阶段</h4><p>在这个阶段，老师解冻，并努力调整自己，以提高对学生的接受度。基本思想是我们不仅要培训老师用一个硬标签来保证它的性能，但也要使它适合学生生成的软标签。本质上，这可以被认为是一个教师也学习转化学生的过程。因此，教师将变得更加适应学生，从而提高蒸馏效果。</p><p><strong>For KGEs with Marginal Loss</strong></p><p>优化老师的硬标签损失和之前一样，教师的软标签表示为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mtext>soft </mtext><mi>T</mi></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi></mrow></munder><mo stretchy="false">(</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo fence="true">∣</mo><msubsup><mi>f</mi><mi>r</mi><mi>S</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo fence="true">∣</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mrow><mo fence="true">∣</mo><msubsup><mi>f</mi><mi>r</mi><mi>S</mi></msubsup><mrow><mo fence="true">(</mo><msub><mi>h</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msubsup><mi>f</mi><mi>r</mi><mi>T</mi></msubsup><mrow><mo fence="true">(</mo><msub><mi>h</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{\text {soft }}^{T}=\sum_{(h, r, t) \in G}(&amp;\left|f_{r}^{S}(h, t)-f_{r}^{T}(h, t)\right| \\&amp;\left.+\sum_{i=1}^{k}\left|f_{r}^{S}\left(h_{i}, t_{i}\right)-f_{r}^{T}\left(h_{i}, t_{i}\right)\right|\right)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.2797920000000005em;vertical-align:-2.8898960000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3898960000000002em;"><span style="top:-6.176004000000001em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mopen">(</span></span></span><span style="top:-2.523886em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8898960000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3898960000000002em;"><span style="top:-6.176004000000001em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.523886em;"><span class="pstrut" style="height:3.836113em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8898960000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>和之前学生的软标签是相同的，因为两个数之差的绝对值具有可交换性。</p><p><strong>For KGEs with Cross Entropy Loss.</strong></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mtext>soft </mtext><mi>T</mi></msubsup><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>G</mi><mo>∪</mo><msup><mi>G</mi><mo>−</mo></msup></mrow></munder><mrow><mo fence="true">(</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>S</mi></msubsup><mi>log</mi><mo>⁡</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>S</mi></msubsup><mo fence="true">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mi mathvariant="normal">.</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{\text {soft }}^{T}=&amp;-\sum_{(h, r, t) \in G \cup G^{-}}\left(p_{(h, r, t)}^{S} \log p_{(h, r, t)}^{T}\right.\\&amp;\left.+\left(1-p_{(h, r, t)}^{S}\right) \log \left(1-p_{(h, r, t)}^{T}\right)\right) .\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.066025em;vertical-align:-2.2830125em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7830125em;"><span style="top:-4.7830125em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">G</span><span class="mbin mtight">∪</span><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8170075em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2830125em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>Final Loss</strong></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mi>α</mi><msubsup><mi>L</mi><mtext>soft </mtext><mi>S</mi></msubsup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><msubsup><mi>L</mi><mtext>hard </mtext><mi>S</mi></msubsup><mo>+</mo><mi>β</mi><msubsup><mi>L</mi><mtext>soft </mtext><mi>T</mi></msubsup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><msubsup><mi>L</mi><mtext>hard </mtext><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">L=\alpha L_{\text {soft }}^{S}+(1-\alpha) L_{\text {hard }}^{S}+\beta L_{\text {soft }}^{T}+(1-\beta) L_{\text {hard }}^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">soft </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">hard </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="experiments"><a class="markdownIt-Anchor" href="#experiments"></a> Experiments</h2><p>主要回答以下问题：</p><ul><li>是否能够从老师身上提炼出一个好学生，并且比一个从无到有训练出来的同维度模型表现更好；</li><li>经过一个蒸馏程序后，推理时间提高了多少；</li><li>两阶段蒸馏方法是否以及在多大程度上有助于我们的提议</li></ul><h3 id="数据集和实施细节"><a class="markdownIt-Anchor" href="#数据集和实施细节"></a> 数据集和实施细节</h3><p><img src="/images/DistilE/image-20210518195655097.png" alt></p><p>评估指标：MR, MRR, Hit@k</p><p>baselines：TransE and TransH     ComplEx and RoratE</p><h4 id="q1-whether-our-method-successfully-distills-a-good-student"><a class="markdownIt-Anchor" href="#q1-whether-our-method-successfully-distills-a-good-student"></a> Q1: Whether our method successfully distills a good student ?</h4><p>我们首先训练一个有更高维度老师的学生，标记为‘DS’，然后训练一个只有硬标签丢失的同维学生，标记为‘no-DS’，这和训练同维原始KGE模型是一样的。然后我们比较它们在链路预测上的性能。表3和表4分别显示了WN18RR和FB15k-237在不同学生尺寸设置下的结果。</p><p><img src="/images/DistilE/image-20210518200100095.png" alt></p><p>Higher Dimensional Teachers.</p><p>由于教师的维度可能很重要，我们还用TerE对128和256维度的教师进行了实验，以评估教师维度的影响。</p><p><img src="/images/DistilE/image-20210518200717256.png" alt></p><p>结果表明:(1)对于32维的学生，高维度的教师取得的成绩稍好；(2)对于16维的学生，高维度的教师没有取得更好的成绩；(3)对于8维的学生，高维度的教师取得的成绩较差。这表明我们的方法的压缩能力大约是8倍。因此，并不总是需要从一个更大的老师那里提炼。一种直觉是，虽然更大的老师更有表现力，但过高的压缩比可能会阻止学生从老师那里吸收重要信息。</p><p><strong>结论：如果一个要求的维度是d，那么教师的维度要求小于等于8倍的d</strong></p><p><strong>训练速度</strong></p><h4 id="q2-whether-the-distilled-student-successfully-accelerates-training-and-inference-speed"><a class="markdownIt-Anchor" href="#q2-whether-the-distilled-student-successfully-accelerates-training-and-inference-speed"></a> Q2: Whether the distilled student successfully accelerates training and inference speed?</h4><p><img src="/images/DistilE/image-20210518201000513.png" alt></p><p>图3显示了有或没有蒸馏的32维学生的收敛。我们观察到，通过蒸馏，我们的方法从一开始就比“无直接序列”收敛得更快、更稳定，并最终获得更好的结果。</p><p>在第二阶段蒸馏(S2，由黑色虚线分隔的红线的右半部分)开始后，MRR略微波动，并迅速收敛到更好的结果。波动的原因是在S2之初，老师开始根据学生的软标签进行调整。</p><p><strong>推理速度</strong></p><p>我们重复实验3次，并报告平均时间。表5显示了时间成本以及参数数量。</p><p><img src="/images/DistilE/image-20210518201306206.png" alt></p><p>结果表明，参数个数的减少与压缩率成正比，因此，与64维相比，用于保存32维、16维和8维学生的机器内存将分别节省2倍、4倍和8倍。这也表明，我们的蒸馏方法实现了几乎线性的推理加速。64维老师的推理时间大约是16维学生的5倍，接近甚至超过8维学生的10倍。</p><h4 id="q3-whether-and-how-much-does-the-two-stage-distillation-approach-contribute-to-the-result"><a class="markdownIt-Anchor" href="#q3-whether-and-how-much-does-the-two-stage-distillation-approach-contribute-to-the-result"></a> Q3: Whether and how much does the two-stage distillation approach contribute to the result?</h4><p>为了研究两级蒸馏方法的影响，我们进行了一项消融实验，以比较我们的方法在去除第一级(-S1)和去除第二级(-S2)时的两级性能。表6总结了WN18RR的MRR和Hit@10结果。</p><p><img src="/images/DistilE/image-20210518201501726.png" alt></p><p>去掉S1后只保留了S2(参考-S1)，整体性能低于DS。大概是因为在S2，老师和学生都会互相适应。对于一个随机初始化的学生，学生向老师传达了大部分无用的信息，这些信息可能会误导老师，使老师崩溃。</p><p>去掉S2后，只保留了S1(参考S2)，几乎所有设置的性能都会下降。以TeeE为例，与DS相比，‘S2’的32维、16维和8维学生的MRR分别下降了4%、5%和10%，表明第二阶段确实可以使师生相互适应，进一步提高成绩。</p><p>这些结果支持了我们的两阶段蒸馏的有效性，首先训练S1的学生收敛到某个性能，然后在S2共同优化教师和学生。</p><h2 id="conclusion-and-future-work"><a class="markdownIt-Anchor" href="#conclusion-and-future-work"></a> Conclusion and Future Work</h2><p>知识图的嵌入参数过多会给实际应用场景带来巨大的存储和计算挑战。在这项工作中，我们提出了一种新的KGE蒸馏方法来压缩到低维空间。为了成功地将知识提取技术应用于特殊结构的KGE，我们针对不同的KGE设计了特定的软标签损失。为了让学生充分接受老师丰富的信息，我们的方法通过两阶段蒸馏的方法鼓励老师和学生相互适应。我们已经通过在几个不同的kge和基准数据集上的链接预测任务评估了我们的方法。实验结果表明，该方法能有效减少模型参数，大大提高推理速度，与教师相比没有太大的性能损失，推理能力也优于直接训练的同维数方法。</p><p>在这项工作中，我们只考虑了通过KGEs的最终输出来传递知识。在未来，我们将首先从其他网络探索多层蒸馏，其次，研究在更复杂的环境下，如对抗式学习和集成学习中的知识蒸馏。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/DistilE/image-20210516151340437.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#abstract&quot;&gt;&lt;/a&gt; Abst</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="知识蒸馏" scheme="https://yao-chen-ecnu.github.io/tags/%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F/"/>
    
  </entry>
  
  <entry>
    <title>FedGKT</title>
    <link href="https://yao-chen-ecnu.github.io/2021/06/22/FedGKT/"/>
    <id>https://yao-chen-ecnu.github.io/2021/06/22/FedGKT/</id>
    <published>2021-06-22T02:47:54.185Z</published>
    <updated>2021-06-22T03:07:53.641Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/FedGKT/image-20210601180626891.png" alt></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>重新定义联邦学习为群组知识迁移训练算法（ group knowledge transfer，FedGKT）。设计了一种交替最小化方法的变体，在边缘节点上训练小的神经网络，并通过知识蒸馏定期将它们的知识转移到大型服务器端的神经网络。</p><p>优点：减少边缘计算、降低CNNs通信带宽、异步训练、精度不减</p><p>结合FedAvg和SL（模型并行分割学习model parallelism-based split learning），交替优化边缘模型和服务器模型。将计算负担从边缘设备转移到强大的服务器上。</p><p>使用三个不同的数据集(CIFAR-10、CIFAR-100和CINIC-10)及其非独立同分布变体来训练基于ResNet-56和ResNet-110设计的CNN。结果表明FedGKT可以获得与FedAvg相当甚至略高的精度。与使用FedAvg的边缘训练相比，FedGKT对边缘设备的计算能力要求低9到17倍，对边缘CNN的参数要求低54到105倍。我们的源代码在FedML发布(<a href="https://fedml.ai">https://fedml.ai</a>).</p><p><img src="/2021/06/22/FedGKT/Users/lenovo/AppData/Roaming/Typora/typora-user-images/image-20210603161858580.png" alt="image-20210603161858580"></p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p><img src="/images/FedGKT/image-20210603184900347.png" alt></p><p>1、local training：边缘设备使用轻量级的CNN训练其私有数据，提取器extractor提取特征图，分类器classifier得到预测</p><p>2、periodic transfer：服务器server，输入边缘设备模型提取到的特征，输出预测，匹配边缘设备的预测（使用软标签和KD）</p><p>3、transfer back：服务器将预测回传给边缘设备，边缘设备再进行预测，匹配服务器的预测（使用软标签和KD）</p><p>4、edge-sided model：服务器是由边缘设备传递的知识训练提升，而边缘设备同样因为服务器而提升，最终模型是本地特征提取器+共享服务器模型</p><h2 id="group-knowledge-transfer"><a class="markdownIt-Anchor" href="#group-knowledge-transfer"></a> Group Knowledge Transfer</h2><h3 id="preliminary"><a class="markdownIt-Anchor" href="#preliminary"></a> Preliminary</h3><p>目标是在许多资源受限的设备上协同训练大型卷积神经网络(如ResNet)，这些设备没有配备GPU加速器，并且不需要将每个设备的数据集集中到服务器端。</p><p>考虑在数据集上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">D</mi></mrow><annotation encoding="application/x-tex">\mathcal{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span></span></span></span>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">C</mi></mrow><annotation encoding="application/x-tex">\mathcal{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.05834em;">C</span></span></span></span></span>个类进行监督学习，假设网络中有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>个客户端（边缘设备），第k个节点的私有数据集可以表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">D</mi><mi>k</mi></msup><mo>:</mo><mo>=</mo><msubsup><mrow><mo fence="true">{</mo><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold-italic">X</mi><mi>i</mi><mi>k</mi></msubsup><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">}</mo></mrow><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msup><mi>N</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></msubsup></mrow><annotation encoding="application/x-tex">\mathcal{D}^{k}:=\left\{\left(\boldsymbol{X}_{i}^{k}, y_{i}\right)\right\}_{i=1}^{N^{(k)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2793200000000002em;vertical-align:-0.69972em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">}</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5796000000000001em;"><span style="top:-2.00028em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142857em;"><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.69972em;"><span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="bold-italic">X</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol{X}_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.07778em;">X</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为第i个训练样本，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是对应的标签，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y_{i} \in\{1,2, \ldots, C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">}</span></span></span></span>是个多分类任务。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>N</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">N^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">D</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{D}^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span>中的样本数量。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">D</mi><mo>=</mo><mrow><mo fence="true">{</mo><msub><mi mathvariant="script">D</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi mathvariant="script">D</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi mathvariant="script">D</mi><mi>k</mi></msub><mo fence="true">}</mo></mrow><mo separator="true">,</mo><mi>N</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></msubsup><msup><mi>N</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{D}=\left\{\mathcal{D}_{1}, \mathcal{D}_{2}, \ldots, \mathcal{D}_{k}\right\}, N=\sum_{k=1}^{K} N^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p><p>一般来说，我们可以将基于CNN的联合学习表述为一个分布式优化问题:</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 282: …}, y_{i}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(1)}">\min _{W} F(\boldsymbol{W}) \stackrel{\text { def }}{=} \min _{\boldsymbol{W}} \sum_{k=1}^{K} \frac{N^{(k)}}{N} \cdot f^{(k)}(\boldsymbol{W}), \text { where } f^{(k)}(\boldsymbol{W})=\frac{1}{N^{(k)}} \sum_{i=1}^{N^{(k)}} \ell\left(\boldsymbol{W} ; \boldsymbol{X}_{i}, y_{i}\right)\eqalignno{(1)}</p><p>w代表global CNN在每个客户端的网络权重，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><mi mathvariant="bold-italic">W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f^{(k)}(\boldsymbol{W})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="mclose">)</span></span></span></span>代表第k个客户端的本地目标函数，用于衡量异构数据集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">D</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{D}^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span>上的本地经验风险。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span>是loss function</p><p>如图2(a)所示，主要缺点是由于缺乏GPU加速器和足够的内存，这些方法无法在资源受限的边缘设备上训练大型CNN。</p><p><img src="/images/FedGKT/image-20210603102952143.png" alt></p><p>如图2(b)所示，并行的分割学习模型，试图通过将W分割成两部分，并将更大的部分放到服务器端来打破计算约束，但是单个小批量迭代需要远程正向传播和反向传播。对于边缘计算，如此频繁的同步机制可能会导致严重的掉队问题，从而显著降低训练过程的速度。</p><p><img src="/images/FedGKT/image-20210603103153350.png" alt></p><h3 id="reformulation"><a class="markdownIt-Anchor" href="#reformulation"></a> Reformulation</h3><p><strong>Non-convex Optimization.</strong></p><p><img src="/images/FedGKT/image-20210603103359816.png" alt></p><p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>划分成两个部分：一个小的特征提取模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">W_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，一个大规模的服务器端模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">W_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，分别将他们放到边缘和服务器端。同时为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">W_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>添加一个分类器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">W_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，构成一个小的可训练的模型放在客户端。我们将单个全局模型优化重新表述为一个非凸优化问题，要求我们同时求解服务器模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和边缘模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">F_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 301: …i}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(2)} ">\underset{\boldsymbol{W}_{s}}{\operatorname{argmin}} F_{s}\left(\boldsymbol{W}_{s}, \boldsymbol{W}_{e}^{*}\right)=\underset{\boldsymbol{W}_{s}}{\operatorname{argmin}} \sum_{k=1}^{K} \sum_{i=1}^{N^{(k)}} \ell_{s}\left(f_{s}\left(\boldsymbol{W}_{s} ; \boldsymbol{H}_{i}^{(k)}\right), y_{i}^{(k)}\right)\eqalignno{(2)} </p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 123: …i}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(3)}">\text { subject to: } \boldsymbol{H}_{i}^{(k)}=f_{e}^{(k)}\left(\boldsymbol{W}_{e}^{(k)} ; \boldsymbol{X}_{i}^{(k)}\right)\eqalignno{(3)}</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 418: …i}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(4)}">\underset{\left(W_{e}^{(k)}, \boldsymbol{W}_{c}^{(k)}\right)}{\operatorname{argmin}} F_{c}\left(\boldsymbol{W}_{e}^{(k)}, \boldsymbol{W}_{c}^{(k)}\right)=\underset{\left(\boldsymbol{W}_{e}^{(k)}, \boldsymbol{W}_{c}^{(k)}\right)}{\operatorname{argmin}} \sum_{i=1}^{N^{(k)}} \ell_{c}\left(f^{(k)}\left(\left(\boldsymbol{W}_{e}^{(k)}, \boldsymbol{W}_{c}^{(k)}\right) ; \boldsymbol{X}_{i}^{(k)}\right), y_{i}^{(k)}\right)\eqalignno{(4)}</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 323: …i}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(5)} ">\left.=\underset{\left(\boldsymbol{W}_{e}^{(k)}, \boldsymbol{W}_{c}^{(k)}\right)}{\operatorname{argmin}} \sum_{i=1}^{N^{(k)}} \ell_{c}\left(f_{c}^{(k)}(\boldsymbol{W}_{c}^{(k)} ; \underbrace{f_{e}^{(k)}\left(\boldsymbol{W}_{e}^{(k)} ; \boldsymbol{X}_{i}^{(k)}\right.}_{\boldsymbol{H}_{i}^{(k)}})\right), y_{i}^{(k)}\right)\eqalignno{(5)} </p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\ell_{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\ell_{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别是客户端和服务器端的损失函数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是服务器端模型，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>是客户端的边缘模型，包括一个特征提取器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{e}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>和分类器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{c}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">W_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>W</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">W_e^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161392em;vertical-align:-0.11659199999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>W</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">W_c^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161392em;vertical-align:-0.11659199999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>分别是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{e}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{c}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>的网络权重。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>H</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">H_i^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>是第i个样本的特征提取器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{e}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>feature map输出。客户端k在本地独立训练<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，服务器端使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>H</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">H_i^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>作为输入训练<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>在推理阶段，客户端k的最终训练模型体系结构由特征提取器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{e}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>的结构和服务器模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的结构堆叠。实际上，客户端可以通过下载服务器模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并在本地使用它来运行离线推理，也可以通过与服务器的网络连接执行在线推理。</p><p>**Advantages and Challenges. **</p><p>上述Reformulation的核心优势是，当我们假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>的模型规模比<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的模型规模小多个数量级时，边缘训练是可以承受的。此外，对于大型CNN训练，将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>H</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">H_i^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>传输到服务器的通信带宽大大小于传统联邦学习中通信所有模型参数的带宽。</p><p>挑战：</p><p>首先，期望每个客户机充分解决内部优化问题（等式（5））。也就是说，每个客户机都应该很好地训练其特征提取器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{e}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>，以确保等式（3）能够准确地为任何给定的输入图像生成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>H</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">H_i^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>。然而，在FL设置中，每个边缘设备上的数据集很小，因此可能不足以训练仅基于本地数据集的基于CNN的特征提取器。此外，外部优化公式（2）和内部优化公式（5）相互关联：公式（2）依赖于由公式（5）优化的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>H</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">H_i^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.27686399999999994em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span></span></span></span>的质量。如果单个客户端特征提取器<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>f</mi><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">f_{e}^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.23924em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>没有得到充分训练，则这种相关性进一步使得外部优化等式（2）难以收敛。</p><h3 id="group-knowledge-transfer-fedgkt"><a class="markdownIt-Anchor" href="#group-knowledge-transfer-fedgkt"></a> Group Knowledge Transfer (FedGKT)</h3><p>鉴于上述挑战，我们将知识蒸馏损失纳入优化方程以规避优化困难。</p><p>直觉是，从服务器模型转移的知识可以促进边缘优化（等式（5））。因此，我们建议双向转移群体知识。服务器CNN从多个边缘吸收知识，单个边缘CNN从服务器CNN获得增强的知识。更具体地说，在式（2）和式（5）中，我们设计了如下损失函数：</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 190: …l{p}_{s}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(6)} ">\ell_{s}=\ell_{C E}+\sum_{k=1}^{K} \ell_{K D}\left(\boldsymbol{z}_{s}, \boldsymbol{z}_{c}^{(k)}\right)=\ell_{C E}+\sum_{k=1}^{K} D_{K L}\left(\boldsymbol{p}_{k} \| \boldsymbol{p}_{s}\right)\eqalignno{(6)} </p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 166: …l{p}_{k}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(7)} ">\ell_{c}^{(k)}=\ell_{C E}+\ell_{K D}\left(\boldsymbol{z}_{s}, \boldsymbol{z}_{c}^{(k)}\right)=\ell_{C E}+D_{K L}\left(\boldsymbol{p}_{s} \| \boldsymbol{p}_{k}\right)\eqalignno{(7)} </p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>C</mi><mi>E</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\ell_{CE}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是预测值与真实标签的加插上损失。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{KL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是KL散度。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi mathvariant="bold-italic">p</mi><mi>k</mi><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>z</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">/</mi><mi>T</mi><mo fence="true">)</mo></mrow></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>z</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">/</mi><mi>T</mi><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\boldsymbol{p}_{k}^{i}=\frac{\exp \left(z_{c}^{(k, i)} / T\right)}{\sum_{i=1}^{C} \exp \left(z_{c}^{(k, i)} / T\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1077719999999998em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4168920000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.32001em;vertical-align:-1.0100099999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.31em;"><span style="top:-2.3925em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852357142857143em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight">exp</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="delimsizing size1 mtight"><span class="mtight">(</span></span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0590857142857142em;"><span style="top:-2.3769714285714283em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-3.059085714285714em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15874285714285716em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="delimsizing size1 mtight"><span class="mtight">)</span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6125em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">exp</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9667142857142856em;"><span style="top:-2.2497142857142856em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-2.966714285714285em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0100099999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi mathvariant="bold-italic">p</mi><mi>s</mi><mi>i</mi></msubsup><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>z</mi><mi>s</mi><mi>i</mi></msubsup><mi mathvariant="normal">/</mi><mi>T</mi><mo fence="true">)</mo></mrow></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>z</mi><mi>s</mi><mi>i</mi></msubsup><mi mathvariant="normal">/</mi><mi>T</mi><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">\boldsymbol{p}_{s}^{i}=\frac{\exp \left(z_{s}^{i} / T\right)}{\sum_{i=1}^{C} \exp \left(z_{s}^{i} / T\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.9646720000000002em;vertical-align:-0.654672em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.31em;"><span style="top:-2.570335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852357142857143em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight">exp</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.214em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6125em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">exp</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9020857142857143em;"><span style="top:-2.214em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.07500000000000001em;"><span class="mtight">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.654672em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>它们分别是边缘模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>和服务器模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的概率预测。对logit<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>计算softmax值。logit<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">z_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>z</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">z_c^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161392em;vertical-align:-0.11659199999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.5834080000000004em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11659199999999997em;"><span></span></span></span></span></span></span></span></span></span>分别是服务器模型和客户机模型中最后一个全连接层的输出。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>是softmax函数的蒸馏温度超参数。</p><p>这样，服务器模型吸收了从每个边缘模型获得的知识。类似地，边缘模型试图使其预测更接近服务器模型的预测，从而吸收服务器模型知识以提高其特征提取能力。</p><p><strong>Improved Alternating Minimization</strong></p><p>在将式（6）和（7）带入我们的重新公式（式（2）和（5））之后，我们提出了一种交替最小化（AM）的变体来解决重新公式化的优化问题，如下所示：</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 474: …l{z}_{s}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(8)} ">\underset{\boldsymbol{W}_{s}}{\operatorname{argmin}} F_{s}\left(\boldsymbol{W}_{s}, \boldsymbol{W}_{e}^{(k) *}\right)=\underset{\boldsymbol{W}_{s}}{\operatorname{argmin}} \sum_{k=1}^{K} \sum_{i=1}^{N^{(k)}} \ell_{C E}\left(f_{s}(\boldsymbol{W}_{s} ; \underbrace{f_{e}^{(k)}\left(\boldsymbol{W}_{e}^{(k) *} ; \boldsymbol{X}_{i}^{(k)}\right.}_{\boldsymbol{H}_{i}^{(k)}}), y_{i}^{(k)}\right)+\sum_{k=1}^{K} \ell_{K D}\left(\boldsymbol{z}_{c}^{(k) *}, \boldsymbol{z}_{s}\right)\eqalignno{(8)} </p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 312: …i}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(9)} ">\text { where } \left.\boldsymbol{z}_{c}^{(k) *}=f_{c}^{(k)}(\boldsymbol{W}_{c}^{(k)} ; \underbrace{f_{e}^{(k)}\left(\boldsymbol{W}_{e}^{(k) *} ; \boldsymbol{X}_{i}^{(k)}\right.}_{\boldsymbol{H}_{i}^{(k)}})\right), \text { and } \boldsymbol{z}_{s}=f_{s}\left(\boldsymbol{W}_{s} ; \boldsymbol{H}_{i}^{(k)}\right)\eqalignno{(9)} </p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 471: …c}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(10)} ">\left.\underset{\boldsymbol{W}^{(k)}}{\operatorname{argmin}} F_{c}\left(\boldsymbol{W}_{s}^{*}, \boldsymbol{W}^{(k)}\right)=\underset{\boldsymbol{W}^{(k)}}{\operatorname{argmin}} \sum_{i=1}^{N^{(k)}} \ell_{C E}\left(f_{c}^{(k)}(\boldsymbol{W}_{c}^{(k)} ; \underbrace{f_{e}^{(k)}\left(\boldsymbol{W}_{e}^{(k)} ; \boldsymbol{X}_{i}^{(k)}\right.}_{\boldsymbol{H}_{i}^{(k)}})\right), y_{i}^{(k)}\right)+\ell_{K D}\left(\boldsymbol{z}_{s}^{*}, \boldsymbol{z}_{c}^{(k)}\right)\eqalignno{(10)} </p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \eqalignno at position 316: …i}^{(k)}\right)\̲e̲q̲a̲l̲i̲g̲n̲n̲o̲{(11)} ">\text { where } \left.\boldsymbol{z}_{c}^{(k)}=f_{c}^{(k)}(\boldsymbol{W}_{c}^{(k)} ; \underbrace{f_{e}^{(k)}\left(\boldsymbol{W}_{e}^{(k)} ; \boldsymbol{X}_{i}^{(k)}\right.}_{\boldsymbol{H}_{i}^{(k)}})\right), \text { and } \boldsymbol{z}_{s}^{*}=f_{s}\left(\boldsymbol{W}_{s}^{*} ; \boldsymbol{H}_{i}^{(k)}\right)\eqalignno{(11)} </p><p>在式（8）中，我们为几个epoch固定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">W^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>并优化（训练）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">W_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后我们切换到（10）为几个epoch固定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">W_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并优化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">W^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>。这种优化在等式（8）和（10）之间的进行多轮，直到达到收敛状态。</p><p><strong>Training Algorithm</strong></p><p><img src="/images/FedGKT/image-20210603142505264.png" alt></p><p>在每一轮训练中，客户机使用本地SGD训练多个epoch，然后将提取的feature map和logit信息发送给服务器。当服务器从每个客户机接收提取的feature map和logit信息，用于训练更大的服务器端CNN。然后服务器将其全局logit信息发送回每个客户机。这个过程在多个回合中迭代，在每一回合中，所有客户机的知识都被传递到服务器模型，反之亦然。为了评估FedGKT的有效性，我们设计了基于ResNet[1]的CNN架构，如图1（b）所示。</p><p><img src="/images/FedGKT/image-20210603144757211.png" alt></p><h2 id="experiments"><a class="markdownIt-Anchor" href="#experiments"></a> Experiments</h2><h3 id="experimental-setup"><a class="markdownIt-Anchor" href="#experimental-setup"></a> Experimental Setup</h3><h4 id="implementation"><a class="markdownIt-Anchor" href="#implementation"></a> Implementation</h4><p>我们基于FedML开发了FedGKT训练框架，FedML是一个开源的联邦学习研究库，简化了新算法的开发，并将其部署在分布式计算环境中。我们的服务器节点有4个NVIDIA RTX 2080Ti GPU，有足够的GPU内存用于大型模型训练。我们使用几个基于CPU的节点作为客户机来训练小型CNN。</p><h4 id="task-and-dataset"><a class="markdownIt-Anchor" href="#task-and-dataset"></a> Task and Dataset</h4><p>我们的训练任务是在CIFAR-10、CIFAR-100和CINIC-10上进行图像分类。我们还通过将训练样本分成K个不平衡分区使得客户端的数据为非独立同分布。</p><h4 id="baselines"><a class="markdownIt-Anchor" href="#baselines"></a> Baselines</h4><p>我们将FedGKT与最新的FL方法FedAvg和集中训练方法进行了比较。基于分裂学习的方法用于比较通信成本。</p><h4 id="model-architectures"><a class="markdownIt-Anchor" href="#model-architectures"></a> Model Architectures</h4><p>评估了两种现代CNN架构：ResNet-56和ResNet-110。baseline FedAvg要求所有边缘节点使用这两个CNN进行训练。对于FedGKT，设计了基于这两个CNN的边缘和服务器端模型。在边缘，我们设计了一个称为ResNet-8的小型CNN结构，包含8个卷积层。服务器端模型体系结构是ResNet-55和ResNet-109，它们具有相同的输入维度，以匹配边缘特征提取器的输出。对于分割学习，我们使用ResNet-8中的提取器作为CNN的边缘部分，而CNN的服务器端部分也是ResNet-55和ResNet-109。</p><h3 id="result-of-model-accuracy"><a class="markdownIt-Anchor" href="#result-of-model-accuracy"></a> Result of Model Accuracy</h3><p><img src="/images/FedGKT/image-20210603150251688.png" alt></p><p><img src="/images/FedGKT/image-20210603150346425.png" alt></p><p>对于标准实验，我们在16个客户机和一个GPU服务器上运行所有数据集和模型。图3显示了在3个数据集的ResNet-56模型上训练时的测试精度曲线。它包括集中培训、FedAvg和FedGKT的结果。我们还将ResNet-56和ResNet-110的所有数值结果总结在表1中。在I.I.D.和非I.I.D.设置中，FedGKT获得了与FedAvg相当甚至更好的精度。</p><h3 id="efficiency-evaluation"><a class="markdownIt-Anchor" href="#efficiency-evaluation"></a> Efficiency Evaluation</h3><p><img src="/images/FedGKT/image-20210603150802569.png" alt></p><p>为了比较训练的计算需求，我们使用先前的方法计算了在边缘执行的浮点运算的次数[70,71]。我们在CIFAR-100上的结果如图4所示。与FedAvg基线相比，我们的FedGKT（ResNet-8）边缘的计算成本是ResNet-56的1/9，是ResNet-110的17/1（内存成本比较可以通过模型参数数粗略比较：ResNet-8有11K个参数，它比ResNet-56少54倍，比ResNet-110少105倍。我们还测试了inteli7 cpu上每小批（批大小为64）的CPU运行时间（它比现有的边缘设备有更高的性能）。结果表明，ResNet-8只需要ResNet-110训练时间的3%（30ms  vs.950ms）。</p><p>为了比较通信成本，我们使用SL（分割学习）作为基线，它还交换隐藏的特征映射，而不是整个模型。在不使用数据压缩技术的情况下，计算通信成本。结果如图5所示（X轴单位：GB）。FedGKT与服务器之间的特征映射交换比SL少。</p><h3 id="不同条件下fedgkt的消融实验"><a class="markdownIt-Anchor" href="#不同条件下fedgkt的消融实验"></a> 不同条件下FedGKT的消融实验</h3><h4 id="the-effectiveness-of-knowledge-transfer"><a class="markdownIt-Anchor" href="#the-effectiveness-of-knowledge-transfer"></a> The Effectiveness of Knowledge Transfer</h4><p><img src="/images/FedGKT/image-20210603153926409.png" alt></p><p>我们观察到，从服务器到边缘的传输总是有帮助的，而随着数据集变得越来越困难，双向传输（S&lt;–&gt;E）更加有效（CIFAR-100）。</p><h4 id="asynchronous-training"><a class="markdownIt-Anchor" href="#asynchronous-training"></a> Asynchronous Training</h4><p><img src="/images/FedGKT/image-20210603154200369.png" alt></p><p>由于服务器不需要等待来自所有客户机的更新来开始训练，FedGKT自然支持异步训练。实验结果如表3所示。结果表明，异步训练对模型精度没有负面影响。这说明了我们的方法比SL的优势，在SL中，每个边都需要对每个小批量迭代进行多次同步。</p><h4 id="fedgkt-with-different-edge-number"><a class="markdownIt-Anchor" href="#fedgkt-with-different-edge-number"></a> FedGKT with Different Edge Number</h4><p><img src="/images/FedGKT/image-20210603154225383.png" alt></p><p>为了了解FedGKT的可扩展性，我们评估了它在不同边缘节点下的性能。测试精度结果如表4所示。一般来说，增加更多的边缘节点不会对精度产生负面影响。</p><h4 id="smaller-architectures"><a class="markdownIt-Anchor" href="#smaller-architectures"></a> Smaller Architectures</h4><p><img src="/images/FedGKT/image-20210603154304735.png" alt></p><p>我们使用更小的边缘模型测试了FedGKT的性能：CIFAR-10上的ResNet-4和ResNet-6。ResNet-4和ResNet-6分别使用一个和两个基本块组件（包括两个卷积层）。结果如表5所示。虽然将边缘模型尺寸减小到ResNet-8并没有降低精度，但当模型尺寸减小得更大时，它确实会降低整体精度。</p><h2 id="discussion"><a class="markdownIt-Anchor" href="#discussion"></a> Discussion</h2><p>方法的局限性</p><ol><li>隐私安全：但基于以前的差分隐私和多方计算，交换隐藏的特征图比交换模型或梯度更安全。在训练阶段隐藏映射交换。模型或梯度交换可能泄露隐私，缺乏分析</li><li>通信成本：隐藏向量比权重或梯度小，每个数据点的隐藏向量可以独立传输，FedGKT比梯度或模型交换要求更小的带宽，通信代价取决于数据点的数量，在样本数量非常大，图像分辨率非常高的情况下，方法和分割学习总的来说都有很高的通信成本。</li><li>标签缺陷：只能用于监督学习，缺乏足够的标签</li><li>可伸缩性：在跨设备设置中，我们需要使用大量的智能手机协同训练模型(如客户端数量高达100万)。</li></ol><h2 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h2><p>在这项工作中，为了解决资源受限的现实，我们将FL重新构造为一个群体知识转移（FedGKT）训练算法。FedGKT可以有效地训练边缘上的小CNN，并通过知识提取将其知识周期性地传递给大容量的服务器端CNN。</p><p>FedGKT在一个框架中实现了几个优点：<strong>减少了对边缘计算的需求，降低了大型cnn的通信成本，以及异步训练，同时保持了与FL相当的模型精度</strong>。</p><p>为了简化边缘训练，我们还开发了一个基于FedGKT的分布式训练系统。我们通过在三个不同的数据集（CIFAR-10、CIFAR-100和CINIC-10）及其非独立同分布变体上训练CNN架构（ResNet-56和ResNet-110）来评估FedGKT。我们的结果表明，FedGKT可以获得相当甚至略高的精度。<strong>与使用FedAvg的边缘训练相比，FedGKT的计算能力（FLOPs）降低了9到17倍，所需的参数也减少了54到105倍。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/FedGKT/image-20210601180626891.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#abstract&quot;&gt;&lt;/a&gt; Abstr</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>FitNets</title>
    <link href="https://yao-chen-ecnu.github.io/2021/06/22/FITNETS/"/>
    <id>https://yao-chen-ecnu.github.io/2021/06/22/FITNETS/</id>
    <published>2021-06-22T02:47:54.180Z</published>
    <updated>2021-06-22T03:08:52.823Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/FITNETS/image-20210608134637108.png" alt></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>论文主要针对Hinton提出的知识蒸馏法进行扩展，允许Student网络可以比Teacher网络更深更窄，使用teacher网络的输出和中间层的特征作为提示，改进训练过程和student网络的性能。CIFAR10上的深的student网络参数比先进teacher网络的少10.4倍。</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>所有之前的工作都是专注于压缩teacher网络到更浅更宽的网络，没有充分利用深度。深度是特征学习的基本层面，鼓励特征重用。</p><p>论文通过利用深度解决网络压缩的问题，提出新方法训练thin and deep网络FitNets。 方法是对Hinton的知识蒸馏进行的扩展。</p><h2 id="method"><a class="markdownIt-Anchor" href="#method"></a> Method</h2><p>老师网络是一个wide网络，学生网络是thin and deep网络</p><p><img src="https://img-blog.csdnimg.cn/2019122709444963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RoYWl1ZGE=,size_16,color_FFFFFF,t_70" alt="img"></p><p>具体步骤如下：</p><ul><li><p>一、选择teacher模型特征提取器的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>层输出作为<strong>hint</strong>，从第一层到第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>层的参数对应图(a)中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mrow><mi>H</mi><mi>i</mi><mi>n</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{Hint}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>二、选择student模型特征提取器的第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>层输出作为<strong>guided</strong>，从第一层到第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>层的参数对应图(a)中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mrow><mi>G</mi><mi>u</mi><mi>i</mi><mi>d</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{Guided}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>三、步骤一与步骤二的特征图维度可能不匹配，因此引入卷积层调整器，记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，对<strong>guided</strong>的维度进行调整</p></li><li><p>四、进入阶段一训练，最小化如下损失函数：</p><p><img src="https://img-blog.csdnimg.cn/20191227153211928.png" alt="img"></p></li></ul><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">u_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示teacher模型从第一层到第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>层对应的函数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">u_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示student模型从第一层到第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>层对应的函数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>表示卷积层调整器，对应的参数记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">W_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>五、因为阶段一没有label信息，蒸馏粒度不够细，因此论文引入阶段二的训练，利用hinton提出的KD对student模型进行蒸馏，如图©，将小网络学习到的guided层参数作为初始权重，然后按照正常的蒸馏学习方法，跟大网络学习soft labels，损失函数如下：</p><p><img src="https://img-blog.csdnimg.cn/20190331211309889.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/20190331211340895.png" alt="img"></p><p>整体训练过程如下图算法所示：</p><p><img src="https://img-blog.csdnimg.cn/2019122715483691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RoYWl1ZGE=,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="experiments"><a class="markdownIt-Anchor" href="#experiments"></a> Experiments</h2><h3 id="在四个数据集上进行实验"><a class="markdownIt-Anchor" href="#在四个数据集上进行实验"></a> 在四个数据集上进行实验</h3><p><img src="/images/FITNETS/image-20210608150721814.png" alt></p><p><img src="/images/FITNETS/image-20210608150845512.png" alt></p><p>实验结果上，student比teacher参数少，效果比teacher还要好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/FITNETS/image-20210608134637108.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#abstract&quot;&gt;&lt;/a&gt; Abst</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="知识蒸馏" scheme="https://yao-chen-ecnu.github.io/tags/%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F/"/>
    
  </entry>
  
  <entry>
    <title>A gift from KD</title>
    <link href="https://yao-chen-ecnu.github.io/2021/06/22/A%20Gift%20from%20Knowledge%20Distillation/"/>
    <id>https://yao-chen-ecnu.github.io/2021/06/22/A%20Gift%20from%20Knowledge%20Distillation/</id>
    <published>2021-06-22T02:47:54.176Z</published>
    <updated>2021-06-22T03:11:55.897Z</updated>
    
    <content type="html"><![CDATA[<p>1、Knowledge Distillation 先是 Hinton 提出来的，大意是说：小模型在分类的时候，光用训练集里的 one-hot label 不好，因为这种标注把类别间的关系割裂开了。而如果让小模型跟着大模型输出的概率分布去学的话，就相当于给出了类别之间的相似性信息，提供了额外的监督信号，因此学起来更容易。比如说识别手写数字，同时标签为 3 的图片，可能有的比较像 8，有的比较像 2，one-hot labels 区分不出来这个信息，但是一个 well-trained 大模型可以给出。因此，<strong>修改一下损失函数，让小模型在拟合训练数据的 ground truth labels 的同时，也要拟合大模型输出的概率分布。这个方法叫做 KD Training (Knowledge Distillation Training)。</strong></p><p>2、然后 Romero 又提出了 FitNet，大意是说：直接让小模型在输出端模仿大模型，这个对于小模型来说太难了（模型越深越难训，最后一层的监督信号要传到前面去还是挺累的）。解决方案就是说，不如在中间加一些监督信号。于是训练的方法就是所谓的 <strong>hint training，把网络中间的输出也拿出来，让大模型和小模型中间层的输出也要尽量接近，让小模型去学习大模型做预测时的中间步骤。</strong></p><p>实际做的时候是用**两阶段法：先用 hint training 去 pretrain 小模型前半部分的参数，再用 KD Training 去训练全体参数。**这感觉就好像是，我们的目的是让学生做高考题，那么就先把初中的题目给他教会了（先让小模型用前半个模型学会提取图像底层特征），然后再回到本来的目的、去学高考题（用 KD 调整小模型的全部参数）。</p><p>3、之前的文章都是把大模型的输出当成小模型要去拟合的目标，后来又有文章提出了新的方法，不拟合大模型的输出，而是去拟合大模型层与层之间的关系，这才是转移和蒸馏的知识。这个关系是用层与层之间的内积来定义的。</p><p>![](file://C:/Users/lenovo/source/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210608161654918.png?lastModify=1624331444)</p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>提出了将蒸馏的知识看作成一种解决问题的流，它是在不同层之间的feature通过内积计算得到的</p><p>这个方法有三个好处：</p><ol><li>student网络可以学的更快</li><li>student网络可以超过teacher网路的性能</li><li>可以适用于迁移学习（teacher和student属于不同的任务）</li></ol><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>将知识看作如何解决问题的流，所以将要蒸馏知识看作解决问题的流</p><p>流被定义为在两个不同层上的features上的关系</p><p>Gram matrix是通过计算特征间的内积得到的，可以表示输入图像的纹理信息，本文也是通过计算Gram matrix来得到流，不同点在于原本的Gram matrix是计算一个层的特征间的内积，而本文是结算不同层特征间的内积。</p><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610105533306.png" alt></p><p><strong>主要贡献：</strong></p><p>提出了一种好的知识蒸馏的方法</p><p>这种方法对快速优化有帮助</p><p>这种方法可以显著提升student网络的性能</p><p>这种方法适用于迁移学习</p><h2 id="method"><a class="markdownIt-Anchor" href="#method"></a> Method</h2><h3 id="提出观点"><a class="markdownIt-Anchor" href="#提出观点"></a> 提出观点</h3><p>将输入和输出看作是问题和答案，中间层看作是解决问题的一个步骤，按照Fitnets的思路，会学习中间这个步骤，然而解决这个问题可以有很多路径，中间这个步骤的状态不一定是一种，所以Fitnets给了太多的限制，作者提出学习输入和输出的关系，而不是直接学习中间的步骤的状态</p><h3 id="数学表达式"><a class="markdownIt-Anchor" href="#数学表达式"></a> 数学表达式</h3><ul><li><strong>表达式</strong></li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>W</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><mi>h</mi></munderover><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>w</mi></munderover><mfrac><mrow><msubsup><mi>F</mi><mrow><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow><mn>1</mn></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>W</mi><mo stretchy="false">)</mo><mo>×</mo><msubsup><mi>F</mi><mrow><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi>j</mi></mrow><mn>2</mn></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><mrow><mi>h</mi><mo>×</mo><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">G_{i, j}(x ; W)=\sum_{s=1}^{h} \sum_{t=1}^{w} \frac{F_{s, t, i}^{1}(x ; W) \times F_{s, t, j}^{2}(x ; W)}{h \times w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1032260000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5988799999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>FSP矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>m</mi><mo>×</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">G \in \mathbb{R}^{m \times n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>由两层输出的特征来生成，其中一层的feature map为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>F</mi><mn>1</mn></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>h</mi><mo>×</mo><mi>w</mi><mo>×</mo><mi>m</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F^{1} \in \mathbb{R}^{h \times w \times m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.853208em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">×</span><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span></span></span></span>，另外一层的feature map为$$F^{2} \in \mathbb{R}^{h \times w \times n}$$</p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi mathvariant="normal">，</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">i，j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>表示F1与F2的通道号，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>分别代表输入图像和DNN的权重</p><p>这个式子其实就是不同通道的特征的相互内积</p><ul><li><strong>计算G的位置</strong></li></ul><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610142150341.png" alt></p><h3 id="fsp-matrix的损失"><a class="markdownIt-Anchor" href="#fsp-matrix的损失"></a> FSP Matrix的损失</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mrow><mi>F</mi><mi>S</mi><mi>P</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>W</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>s</mi></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msub><mo>∑</mo><mi>x</mi></msub><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><mo>×</mo><mi mathvariant="normal">∥</mi><mrow><mo fence="true">(</mo><msubsup><mi>G</mi><mi>i</mi><mi>T</mi></msubsup><mrow><mo fence="true">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>W</mi><mi>t</mi></msub><mo fence="true">)</mo></mrow><mo>−</mo><msubsup><mi>G</mi><mi>i</mi><mi>S</mi></msubsup><mrow><mo fence="true">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>W</mi><mi>s</mi></msub><mo fence="true">)</mo></mrow><msubsup><mi mathvariant="normal">∥</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}L_{F S P}\left(W_{t}, W_{s}\right) \\=\frac{1}{N} \sum_{x} \sum_{i=1}^{n} \lambda_{i} \times \|\left(G_{i}^{T}\left(x ; W_{t}\right)-G_{i}^{S}\left(x ; W_{s}\right) \|_{2}^{2}\right.\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.41em;vertical-align:-0.9550000000000001em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.455em;"><span style="top:-3.6149999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-2.405em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">∥</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9550000000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>n代表在student中选择的层对数</p><p>N表示样本数量</p><p>T，S分别代表teacher和student</p><h3 id="学习步骤"><a class="markdownIt-Anchor" href="#学习步骤"></a> 学习步骤</h3><p>首先，对教师网络进行数据预训练。此数据集可以与学生网络将学习的数据集相同，也可以不同。对于迁移学习任务，教师网络使用不同于学生网络的数据集。其次，教师网络与学生网络相同或更深。</p><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610144757215.png" alt></p><h2 id="experiment"><a class="markdownIt-Anchor" href="#experiment"></a> Experiment</h2><p>实验采用图2中的resnet，对于FSP矩阵的生成，选择每个残差块中的第一层和最后一层的feature map来计算。由于FSP矩阵需要两个feature map的大小相同，因此，在两层特征不同的情况下，引入最大值池化层进行处理，得到两个相同大小的feature map。</p><p>baseline：Fitnet</p><h3 id="fast-optimization"><a class="markdownIt-Anchor" href="#fast-optimization"></a> Fast optimization</h3><p>本文提出的快速优化技术的目标是通过使用比正常训练程序更少的训练时间，使学生网络集成达到与教师网络集成相似的性能。</p><p>在两个数据集上进行训练 CIFAR-10、 CIFAR-100</p><p>使用26层残差网络作为教师网络，得到92%的准确度。本实验中学生网络与教师网络的层数相同。</p><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610150122875.png" alt></p><p>图3表示测试精度和训练损失随时间的变化。学生网络的优化速度快于教师网络。学生网络收敛的速度是教师网络的三倍。由于我们对教师网络采用MSRA初始化技术，这不是一种简单的初始化方法，而是一种高性能的初始化方法，因此我们认为FSP矩阵为初始化学生网络的权值提供了很好的提取知识。</p><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610152500332.png" alt></p><p><strong>关于Student与FitNet的分析</strong><br>由于本文提出的结构是学习一种输入和输出的关系，本文是通过FSP实现的，所以多个FSP之间可以相对独立一些，整个模块可以解耦；</p><p>而对于FitNet，假设加入三个中间层，在第二个中间层和第三个中间层不好去学习，因为要想学习好他们，首先要保证前边的一层中间层学习好，所以FitNet这种直接用特征做监督信息的方式不能解耦多个loss层，这也是为什么三层FitNet没有一层FitNet效果好的原因；</p><p>FSP相比FitNet，赋予了网络更大的自由。如果student与teacher网络有相同的中间层，那么肯定有相同的FSP，但反过来确不成立，FSP的相同并不限制中间层的具体状态。</p><p><strong>关于加强多个Student的不相关性，从而提升集成模型的准确率</strong><br>Table1的倒数第二行：虽然student网络的单体能力已经超过了teacher网络，但是集成的student网络确没有集成的teacher的集成效果好，这是因为多个student网络的FSP矩阵是一致的，导致他们的相关性太大</p><p>Table1的倒数第一行：作者提出了将生成的FSP矩阵的行和列进行重新洗牌，得到新的几个FSP，用新的FSP训练student得到的集成效果要好。其实这相当于将生成FSP的两个不同层的特征的通道打乱而得出的FSP，本质上没有改变信息的内容。</p><p>就训练次数而言，原模型的迭代次数为16 s/100 iterations，而第1阶段的训练次数为35  s/100 iterations。因此，就总学习时间而言，用原方法训练3名教师dnn用8.6h，用本方法训练3名学生dnn用4.84h。后者是后者的1.78倍。</p><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610152832207.png" alt></p><h3 id="performance-improvement-for-the-small-dnn"><a class="markdownIt-Anchor" href="#performance-improvement-for-the-small-dnn"></a> Performance improvement for the small DNN</h3><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610152929410.png" alt></p><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610153004169.png" alt></p><h3 id="transfer-learning"><a class="markdownIt-Anchor" href="#transfer-learning"></a> Transfer Learning</h3><p><img src="/images/A%20Gift%20from%20Knowledge%20Distillation/image-20210610160243570.png" alt></p><p>Teacher-fine tuning是在34层的网络上进行迁移学习得到的结果，Proposed Method是在20层的网络上进行FSP学习得到的结果，可以看出，已经很接近了。</p><h2 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h2><p>提出了一种从DNN中提取知识的新方法。通过将提取的知识确定为用所提出的FSP矩阵计算的求解过程的流程，该方法优于现有的知识迁移方法。我们从三个重要方面验证了所提方法的有效性。该方法优化DNN的速度更快，性能更高。此外，该方法还可用于迁移学习任务。</p><p>打个比方：如果做一道平面几何题，题目要证两线段相等，做法是先要做一条辅助线，再证三角形 X 和 Y 全等，最后证明原题结论。那么前面 <strong>Romero 的方法就是，中间每一步都盯着你做，你必须和我做的一样，我教你这道题的辅助线该怎么连，然后证哪两个三角形全等；而本文的方法是说，你要先学会『辅助线-&gt;三角形全等-&gt;线段相等』这种做题的套路，而不是去学一个具体的题目里辅助线到底怎么连，我把一般的解题方法教给你，具体每一题每一步到底怎么证你自己琢磨琢磨就会了。<strong>最后训练的时候同样也是用</strong>二阶段法：先根据大模型的 FSP 矩阵调整小模型参数，使得小模型层间关系也和大模型的层间关系类似；然后直接用原损失函数（如交叉熵）继续精调小模型参数。<strong>感觉这种学习方法比较高屋建瓴，用人类学知识的过程来比喻的话，就是</strong>先学抽象的道，培养对于问题的宏观认识，培养整体观念，了解这个问题分为需要几大块，各个块之间的关系是什么样的；然后再学具体的术，填充完善知识细节。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、Knowledge Distillation 先是 Hinton 提出来的，大意是说：小模型在分类的时候，光用训练集里的 one-hot label 不好，因为这种标注把类别间的关系割裂开了。而如果让小模型跟着大模型输出的概率分布去学的话，就相当于给出了类别之间的相似性</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="知识蒸馏" scheme="https://yao-chen-ecnu.github.io/tags/%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F/"/>
    
  </entry>
  
  <entry>
    <title>FedMD</title>
    <link href="https://yao-chen-ecnu.github.io/2021/06/22/FedMD-Heterogenous%20Federated%20Learning/"/>
    <id>https://yao-chen-ecnu.github.io/2021/06/22/FedMD-Heterogenous%20Federated%20Learning/</id>
    <published>2021-06-22T02:47:54.170Z</published>
    <updated>2021-06-22T02:55:38.551Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/FedMD-Heterogenous%20Federated%20Learning/image-20210428102616049.png" alt></p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>联邦学习能够创建一个强大的集中式模型，而不会损害多个参与者的数据隐私。虽然成功了，但它没有包含每个参与者独立设计自己的模型的情况。由于知识产权问题以及任务和数据的异构性，这是联合学习应用于医疗保健和人工智能即服务等领域的普遍要求。在这项工作中，我们使用<strong>迁移学习和知识蒸馏</strong>来开发一个通用框架，当每个代理不仅拥有他们的私有数据，而且拥有独特设计的模型时，该框架能够实现联合学习。我们在MNIST/FEMNIST数据集和CIFAR10/CIFAR100数据集上测试了我们的框架，并观察到所有参与模型的快速改进。有10个不同的参与者，每个模型的最终测试精度平均比没有协作的情况下高20%，仅比每个模型在所有私有数据集被汇集并直接提供给所有参与者的情况下获得的性能低几个百分点。</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>联合学习面临许多挑战[5]，其中特别重要的是学习过程各个方面出现的异构性。当每个参与者具有不同的带宽和计算能力时，就存在系统异构性；联邦学习的本地异步方案部分解决了这一问题，该方案得到了进一步完善，例如支持主动采样[6，7]和提高容错能力[8]。还有统计异质性(非i.i.d .问题)，客户有不同数量的数据来自不同的分布[9，10，11，12，13，14]。</p><p>在这项工作中，我们关注不同类型的异质性:局部模型的差异。在最初的联邦框架中，所有用户都必须同意集中式模型的特定架构。当参与者是数以百万计的手机等低容量设备时，这是一个合理的假设。在这项工作中，我们转而探索联邦框架的扩展，这在面向业务的环境中是现实的，其中每个参与者都有能力和愿望来设计他们独特的模型。这出现在医疗保健、金融、供应链和人工智能服务等领域。例如，当几个医疗机构在不共享私有数据的情况下进行合作时，他们可能需要创建自己的模型来满足不同的规范。出于隐私和知识产权的考虑，他们可能不愿意分享他们模型的细节。再比如AI即服务。一个典型的人工智能供应商，例如客户服务聊天机器人，可能有几十个客户公司。每个客户的模型是不同的，并解决不同的任务。标准的做法是只使用客户自己的数据来训练客户的模型。如果能够在不损害隐私或独立性的情况下利用来自其他客户端的数据，将会非常有益。当每个参与者都有一个对其他人来说是黑箱的不同模型时，如何进行联合学习？这是我们在这部作品中要回答的中心问题。</p><p>全模型异构的关键是沟通。特别是，必须有一个翻译协议，使深层网络能够理解他人的知识，而无需共享数据或模型架构。这个问题涉及深度学习的基本问题，例如可解释性和紧急通信协议。原则上，机器应该能够学习适应任何特定用例的最佳通信协议。作为这个方向的第一步，我们采用一个基于知识提炼的更透明的框架来解决这个问题。</p><p>迁移学习是解决私人数据稀缺的另一个主要框架。在这项工作中，我们的私有数据集可以小到每个类几个样本。因此，除了联合学习之外，使用来自大型公共数据集的迁移学习也是势在必行的。我们通过两种方式利用迁移学习的力量。首先，在进入协作之前，每个模型首先在公共数据上，然后在它自己的私有数据上被完全训练。第二，也是更重要的，黑盒模型基于它们在公共数据集样本上的输出类分数进行通信。这是通过知识提炼[15]实现的，知识提炼能够以模型不可知的方式传输学习到的信息。</p><p>贡献:这项工作的主要贡献是FedMD，这是一个新的联邦学习框架，使参与者能够独立设计他们的模型。我们的集中式服务器不控制这些模型的架构，只需要有限的黑盒访问。我们确定这个框架的关键要素是在参与者之间翻译知识的通信模块。我们通过利用转移学习和知识提炼的力量来实现这样的通信协议。</p><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><h3 id="Problem-definition"><a href="#Problem-definition" class="headerlink" title="Problem definition"></a>Problem definition</h3><p>在联邦学习的过程假设有$m$个参与者，每个参与者拥有一个非常小的标记数据集$\mathcal{D}<em>{k}:=\left{\left(x</em>{i}^{k}, y<em>{i}\right)\right}</em>{i=1}^{N_{k}}$，并且它们可能不是来自于同一个分布。</p><p>另外存在一个大的公共数据集$\mathcal{D}<em>{0}:=\left{\left(x</em>{i}^{0}, y<em>{i}^{0}\right)\right}</em>{i=1}^{N_{0}}$，每个参与者都能从中获取数据。</p><p>每个参与方运行一个独立的模型$f_k$，可以是结构不同的模型，模型的超参也不需要在参与方之间进行共享。</p><p>目标是建立一个协作框架，通过本地数据集$\mathcal{D}<em>{k}$和公共数据集$\mathcal{D}</em>{0}$来提升每个参与方单独训练$f_k$的模型性能。</p><p><img src="/images/FedMD-Heterogenous%20Federated%20Learning/image-20210428110139714.png" alt></p><p>异构联合学习的通用框架。每个代理（参与方）都拥有一个私有数据集和一个独立设计的模型。为了在没有数据泄露的情况下进行交流和协作，代理需要将他们所学的知识转换成标准格式。中央服务器收集这些知识，计算分布在网络上的共识。在这项工作中，translator是利用知识蒸馏实现的。</p><h3 id="The-framework-for-heterogeneous-federated-learning"><a href="#The-framework-for-heterogeneous-federated-learning" class="headerlink" title="The framework for heterogeneous federated learning"></a>The framework for heterogeneous federated learning</h3><p><img src="/images/FedMD-Heterogenous%20Federated%20Learning/image-20210428123054976.png" alt></p><p>迁移学习。每个客户端先依次用公共数据集$\mathcal{D}<em>{0}$和自己本地的数据集$\mathcal{D}</em>{k}$来训练自己的模型。<br>重复下面五步<br>  第一步：每个客户端用自己的本地模型$f<em>{k}$来预测共享数据集并将预测结果分数$f</em>{k}\left(x_{i}^{0}\right)$发给服务端。需要注意的是</p><ul><li>并不需要预测全部共享数据集，只需要随意选取一部分。原因是这样可以在不损害性能的前提下加快速度；</li><li>这里的预测预测结果分数是指不经过softmax的结果。</li></ul><p>  第二步：服务中心将客户端传送的分类分数取平均，得到平均分数$\tilde{f}\left(x_{i}^{0}\right)$，即得到各个模型的一个全局共识。需要注意的是权重是可以修改的。CIFAR中，作者稍微抑制了来自两个较弱模型（0和9）的贡献。当有非常不同的模型或数据时，这些权重可能变得更重要。</p><p>  第三步：每个客户端从服务器下载平均分数$\tilde{f}\left(x_{i}^{0}\right)$</p><p>  第四步： 模型蒸馏。 每个客户端用模型蒸馏在共享数据集去拟合这个平均分数，即各个模型去学习全局共识。</p><p>  第五步：每个客户端在本地数据集上训练模型几个epoch。</p><h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><p>我们在两个不同的环境中测试这个框架。在第一种环境中，公共数据是MNIST，私有数据是FEMNIST的一个子集。我们考虑了IID的情况，其中每个私有数据集都是从FEMNIST中随机抽取的，以及非IID的情况，其中每个参与者虽然在培训期间只被给予一个作者写的字母，但在测试时被要求对所有作者写的字母进行分类。</p><p>在第二个环境中，公共数据集是CIFAR10，私有数据集是CIFAR100的子集，CIFAR  100有100个子类，属于20个超类，例如熊、豹、狮子、老虎和狼属于大型食肉动物。在IID案例中，任务是让每个参与者将测试图像分成正确的子类。非IID案例更具挑战性:在培训期间，每个参与者都有来自每个超类的一个子类的数据；在测试时，参与者需要将通用测试数据分类到正确的超类中。例如，一个只在训练中见过狼的参与者被期望将狮子正确地归类为大型食肉动物。因此，它必须依靠其他参与者传达的信息。</p><p>在每个环境中，10名参与者设计独特的卷积网络，这些网络可能因通道数量和层数而异，详见表1、2。首先，它们在公共数据集上进行训练，直到收敛——这些模型在MNIST的测试准确率通常在99%左右，在CIFAR10的测试准确率为76%。其次，每个参与者在自己的小型私有数据集上训练自己的模型。在这些步骤之后，他们经历了合作培训阶段，在此期间，模型获得了强大和快速的全面改进，并迅速超过了迁移学习的基线。我们使用Adam优化器[18]，初始学习率为0.001；在每一轮合作训练中，我们随机选择大小为5000的子集$d<em>j\subset\mathcal{D}</em>{0}$作为交流的基础。</p><p><img src="/images/FedMD-Heterogenous%20Federated%20Learning/image-20210428124157578.png" alt></p><p>FedMD提高了参与模型超出基线的测试精度。虚线(左边)表示用公共数据集和自己的小型私有数据集进行完全转移学习后模型的测试精度。这条基线是我们的起点，与相应学习曲线的起点重叠。如果来自所有参与者的私有数据集被解密并提供给组中的每个参与者，则虚线(右侧)表示模型的潜在性能。</p><h2 id="Discussion-and-conclusion"><a href="#Discussion-and-conclusion" class="headerlink" title="Discussion and conclusion"></a>Discussion and conclusion</h2><p>在这项工作中，我们提出了FedMD，这是一个支持独立设计模型的联合学习的框架。我们的框架是基于知识提炼的，并且经过测试可以在各种任务和数据集上工作。在未来，我们将探索更复杂的通信模块，如功能转换和紧急通信协议，这将进一步提高我们框架的性能。我们的框架也可以应用于涉及自然语言处理和强化学习的任务。我们将把我们的框架扩展到极端的异构情况，包括数据量、模型容量和非常不同的本地任务之间的巨大差异。我们相信，在面向深度学习应用的广泛业务领域，异构联合学习将是未来的一个重要工具。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/FedMD-Heterogenous%20Federated%20Learning/image-20210428102616049.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; c</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Federated Distillation and Augmentation under Non-IID Private Data</title>
    <link href="https://yao-chen-ecnu.github.io/2021/05/13/Communication-Efficient%20On-Device%20Machine%20Learning/"/>
    <id>https://yao-chen-ecnu.github.io/2021/05/13/Communication-Efficient%20On-Device%20Machine%20Learning/</id>
    <published>2021-05-13T09:19:52.685Z</published>
    <updated>2021-06-22T03:04:03.176Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210510125638543.png" alt></p><h2 id="abstract"><a class="markdownIt-Anchor" href="#abstract"></a> Abstract</h2><p>设备上的机器学习(ML)使训练过程能够利用大量用户生成的私有数据样本。为了享受这一好处，设备间的<strong>通信开销应该最小化</strong>。为此，我们提出了一种分布式模型训练算法——<strong>联合蒸馏(FD)</strong>，它的通信有效载荷比基准方案——联邦学习(FL)小得多，特别是当模型较大时。此外，不同设备的用户的数据样本很可能是No-IID，这通常会降低与IID数据集相比的性能。为了解决这个问题，我们提出了<strong>联合增强(FAug)</strong>，其中每个设备共同训练一个生成模型，从而增强其本地数据从而获得IID数据集。实证研究表明，与FL相比，FD+FAug的通信开销减少了约26倍，同时测试精度达到95-98%。</p><h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p>在FL中，在每个设备端执行训练过程需要与模型size成比例的通信开销，从而无法使用很大的模型。此外，用户的训练数据集在不同设备之间可能是No-IID的。与IID数据相比，与IID数据集相比，No-IID 使得MNIST和CIFAR-10的预测精度分别降低了11%和51%。降低的准确性可以通过交换数据样本来部分恢复，但是这可能会导致过多的通信开销和隐私泄露。</p><p>因此，提出一种communication-efficient on-device ML approach under non-IID private data。为了提高通信效率，我们提出了一种分布式在线知识提取方法——联合提取（FD），其通信负载大小不依赖于模型大小，而是依赖于输出维度。在运行联邦蒸馏之前，我们通过联邦增强（FAug）来矫正No-IID训练数据集，这是一种使用GAN的数据增强方案，该网络是在隐私泄露和通信开销之间的权衡下集体训练的。经过训练的GAN使每个设备能够本地复制所有设备的数据样本，从而使训练数据集变的IID。</p><h2 id="federated-distillation"><a class="markdownIt-Anchor" href="#federated-distillation"></a> Federated distillation</h2><p>传统的分布式训练算法每个epoch都交换局部模型参数。在移动设备无线互连的设备上移动通信中，这导致了显著的通信开销。FL通过隔一段时间交换模型参数来降低通信成本[3–9]。在这种周期性通信的基础上，提出的FD不交换模型参数，而是交换模型输出，允许设备上的ML采用size较大的本地模型。</p><p>FD的基本操作程序遵循知识蒸馏的在线版本[10]，也称为共蒸馏(CD)。在CD中，每个设备都把自己当成学生，把所有其他设备的平均模型输出视为老师的输出。每个模型输出是一组通过softmax函数归一化的logit值，称为logit向量，它的大小由标签的数量给出。使用交叉熵周期性地测量师生输出差异，该交叉熵成为学生的损失正则化因子，称为蒸馏正则化因子，从而在分布式训练过程中获得其他设备的知识。</p><p>然而，CD远非通信高效。原因是每个logit向量都与其输入的训练数据样本相关联。因此，为了进行知识提炼，教师和学生的输出都应该使用相同的训练数据样本进行评估。这不允许周期性的模型输出交换。相反，它需要交换与训练数据集大小一样多的模型输出，或者模型参数，以便再现的教师模型可以与学生模型同步地本地生成输出。</p><p>为了纠正这一点，<strong>FD中的每个设备存储每个标签的平均logit向量</strong>，并定期将这些局部平均logit向量上传到服务器。对于每个标签，来自所有设备的上传的局部平均logit向量被平均，得到每个标签的全局平均logit向量。所有标签的全局平均logit向量被下载到每个设备。然后，每个设备根据本地数据的标签，选择对应的教师模型的标签计算正则化项。</p><p><img src="/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210511162725764.png" alt></p><p><img src="/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210513105138683.png" alt></p><p>集合S表示所有设备的整个训练数据集，B表示每个设备的批次。函数F(w，a)是由softmax函数归一化的logit向量，其中w和a是模型的权重和输入。函数φ(p，q)是p和q之间的交叉熵，用于损失函数和蒸馏正则化。项η是常数学习率，γ是蒸馏正则化的权重参数。</p><p><strong>FD：生成模型，保存本地输出–&gt;将本地输出的平均（加权平均）和标签上传至服务器–&gt;聚合后下载全局平均和标签–&gt;正则化局部模型</strong></p><h2 id="federated-augmentation"><a class="markdownIt-Anchor" href="#federated-augmentation"></a> Federated augmentation</h2><p>我们提出FAug，其中每个设备可以使用生成模型生成本地生成缺失的数据样本。</p><p>生成模型是在具有高计算能力和快速互联网连接的服务器上训练的。FAug中的每个设备识别数据样本中缺少的标签，称为目标标签，并通过无线链路将这些目标标签的少量种子数据样本上传到服务器。服务器对上传的种子数据样本进行过采样。最后，下载经过训练的GAN生成器使每个设备能够补充目标标签，直到训练数据集达到IID，这与直接数据样本交换相比显著降低了通信开销。这个过程如图1(b)所示</p><p><img src="/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210511184807035.png" alt></p><p>FAug的运行需要保证用户生成数据的隐私性。事实上，每个设备的数据生成偏差，即目标标签，可以容易地揭示其隐私敏感信息，例如，揭示诊断结果的患者体检项目。为了保持这些目标标签相对于服务器的私密性，设备还从目标标签之外的标签上传冗余数据样本。因此，以额外的上行链路通信开销为代价，减少了从每个设备到服务器的隐私泄露，称为设备-服务器隐私泄露。</p><p>在第I个设备上，它的设备-服务器PL被测量为<img src="/2021/05/13/Communication-Efficient%20On-Device%20Machine%20Learning/Users/lenovo/AppData/Roaming/Typora/typora-user-images/image-20210513151752980.png" alt="image-20210513151752980"></p><p>只要设备的数量足够大，就可以实现最小泄漏，而不管目标和冗余标签的大小如何。</p><h2 id="evaluation"><a class="markdownIt-Anchor" href="#evaluation"></a> Evaluation</h2><p>在本节中，我们在No-IID MNIST训练数据集下评估FD+FAug，该数据集由以下程序构建。在具有55000个样本的MNIST训练数据集中，我们统一随机选择2000个样本，并将它们分配给每个设备。这2000个样本的集合根据标签分成10个子集。然后，在每个设备上，我们均匀地随机选择目标标签，并消除目标标签中大约97.5%的样本，使得每个目标标签包含5个样本。</p><p>每个设备都有一个5层卷积神经网络(CNN)，由2个卷积层、1个最大池层和2个全连接层组成。该设备进行本地训练，批量设置为64。本地迭代250次进行交换，全局迭代16次。</p><p><img src="/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210511185431390.png" alt></p><p><img src="/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210511185532134.png" alt></p><p>a说明了当“2”为目标标签时每个标签的测试准确性。对于目标标签，参考设备在原始非IID数据集下的独立训练产生了3.585%的测试精度，通过FAug结合FD或FL提高了73.44%或92.19%，验证了FAug结合FD和FL的有效性。</p><p>b与独立训练相比，使用FL+FAug实现了大约2倍的测试精度</p><p>c描述了设备-服务器PL随着冗余标签数量的增加而减少，随着目标标签数量的增加而增加。</p><h2 id="concluding-remarks"><a class="markdownIt-Anchor" href="#concluding-remarks"></a> Concluding remarks</h2><ul><li>实证研究表明，与FL相比，FD+FAug的有效性以小得多的通信开销实现了相对较高的准确性。</li></ul><p>在以后的工作中，只要稍加修改，FD的性能还可以进一步提高。</p><p>此外，FD和FL可以结合起来，以平衡通信效率和准确性。例如，可以利用上行链路中的频差和下行链路中的频差，理由是下行链路无线通信链路通常比上行链路快[13]。</p><p>最后，利用差分隐私框架[8]，通过在上传的种子数据样本中插入适量的噪声，可以改善FAug的隐私保障，这是未来研究的一个有趣课题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/Communication-Efficient%20On-Device%20Machine%20Learning/image-20210510125638543.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;&lt;a cla</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>知识蒸馏</title>
    <link href="https://yao-chen-ecnu.github.io/2021/04/21/%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F/"/>
    <id>https://yao-chen-ecnu.github.io/2021/04/21/%E7%9F%A5%E8%AF%86%E8%92%B8%E9%A6%8F/</id>
    <published>2021-04-21T02:54:58.228Z</published>
    <updated>2021-04-22T07:10:42.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知识蒸馏"><a class="markdownIt-Anchor" href="#知识蒸馏"></a> 知识蒸馏</h1><p>知识蒸馏通常用于模型压缩，用一个已经训练好的模型A去“教”另外一个模型B。两个模型称为老师-学生模型。</p><p>通常模型A比模型B更强。在模型A的帮助下，模型B可以突破自我，学的更好。</p><p><img src="/images/image-20210421095342367.png" alt></p><p>Loss_Function_in_PyTorch</p><p>softmax：输出是概率分布，(0,1)</p><p>log_softmax：对sofmax取log，结果为负数</p><p>NLLLoss：输入：log_softmax，target，结果为正</p><p>CrossEntropy（交叉熵）</p><p><img src="/images/image-20210421100958881.png" alt></p><p><img src="https://img-blog.csdnimg.cn/20210420154449334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hdHVyZTU1Mzg2Mw==,size_16,color_FFFFFF,t_70" alt="img"></p><p>如上图所示，教师网络（左侧）的预测输出除以温度参数（Temperature）之后、再做softmax变换，可以获得软化的概率分布（软目标或软标签），数值介于0~1之间，取值分布较为缓和。</p><p>Temperature数值越大，分布越缓和；而Temperature数值减小，容易放大错误分类的概率，引入不必要的噪声。针对较困难的分类或检测任务，Temperature通常取1，确保教师网络中正确预测的贡献。</p><p>硬目标则是样本的真实标注，可以用one-hot矢量表示。</p><p>total loss设计为软目标与硬目标所对应的交叉熵的加权平均（表示为KD loss与CE loss），其中软目标交叉熵的加权系数越大，表明迁移诱导越依赖教师网络的贡献，这对训练初期阶段是很有必要的，有助于让学生网络更轻松的鉴别简单样本，但训练后期需要适当减小软目标的比重，让真实标注帮助鉴别困难样本。</p><p>另外，教师网络的推理性能通常要优于学生网络，而模型容量则无具体限制，且教师网络推理精度越高，越有利于学生网络的学习。</p><p><img src="/images/image-20210421101754188.png" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;知识蒸馏&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#知识蒸馏&quot;&gt;&lt;/a&gt; 知识蒸馏&lt;/h1&gt;
&lt;p&gt;知识蒸馏通常用于模型压缩，用一个已经训练好的模型A去“教”另外一个模型B。两个模型称为老师-学生模型。&lt;/p&gt;
&lt;p&gt;通常模型A比模</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读总结</title>
    <link href="https://yao-chen-ecnu.github.io/2021/04/20/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%80%BB%E7%BB%93/"/>
    <id>https://yao-chen-ecnu.github.io/2021/04/20/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%80%BB%E7%BB%93/</id>
    <published>2021-04-20T02:25:20.737Z</published>
    <updated>2021-04-22T07:15:51.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="论文阅读总结"><a class="markdownIt-Anchor" href="#论文阅读总结"></a> 论文阅读总结</h1><h2 id="1-biscotti-a-blockchain-system-for-private-and-secure-federated-learning"><a class="markdownIt-Anchor" href="#1-biscotti-a-blockchain-system-for-private-and-secure-federated-learning"></a> 1、Biscotti: A Blockchain System for Private and Secure Federated Learning</h2><h3 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h3><p>联合学习是支持安全多方机器学习(ML)的最新技术:数据保存在所有者的设备上，模型的更新通过安全协议进行聚合。然而，这个过程假设一个可信的集中式基础设施来进行协调，并且客户端必须相信中央服务不使用客户端数据的副产品。除此之外，一组恶意客户端还可能通过执行中毒攻击来损害模型的性能。作为回应，我们提出了Biscotti:一种完全分散的对等(P2P)多方消息传递方法，它使用区块链和加密原语来协调对等客户端之间的隐私保护消息传递过程。我们的评估表明，Biscotti是可扩展的、容错的，并且能够抵御已知的攻击。例如，当系统中存在30%的对手时，Biscotti能够保护单个客户端更新的隐私，并保持全局模型的大规模性能。</p><h3 id="关键技术"><a class="markdownIt-Anchor" href="#关键技术"></a> 关键技术</h3><ul><li>运用Multi-Krum进行模型验证，防御毒化攻击</li><li>运用差分隐私保护信息不泄露</li><li>秘密共享进行安全聚合</li><li>随机验证函数和一致性哈希实现POF共识</li><li>多项式承诺</li></ul><h2 id="2-a-blockchain-based-decentralized-federated-learning-framework-with-committee-consensus"><a class="markdownIt-Anchor" href="#2-a-blockchain-based-decentralized-federated-learning-framework-with-committee-consensus"></a> 2、A Blockchain-based Decentralized Federated Learning Framework with Committee Consensus</h2><h3 id="摘要-2"><a class="markdownIt-Anchor" href="#摘要-2"></a> 摘要</h3><p>联邦学习已经被广泛研究并应用于各种场景。在移动计算场景中，联合学习保护用户不暴露他们的私有数据，同时协作地为各种现实世界的应用程序训练全局模型。然而，由于恶意客户端或中央服务器不断攻击全局模型或用户隐私数据，联邦学习的安全性日益受到质疑。为了解决这些安全问题，我们提出了一个基于区块链的分布式联邦学习框架，即一个<strong>基于区块链的具有委员会共识的联邦学习框架</strong>。该框架将区块链用于全局模型存储和本地模型更新交换。为了实现提出的BFLC，我们还设计了一种创新的委员会共识机制，可以有效减少共识计算量，减少恶意攻击。然后我们讨论了BFLC的可扩展性，包括理论安全性、存储优化和激励。最后，我们使用真实数据集进行了实验，以验证BFLC框架的有效性。</p><h2 id="3-poster-a-reliable-and-accountable-privacy-preserving-federated-learning-framework-using-the-blockchain"><a class="markdownIt-Anchor" href="#3-poster-a-reliable-and-accountable-privacy-preserving-federated-learning-framework-using-the-blockchain"></a> 3、Poster: A Reliable and Accountable Privacy-Preserving Federated Learning Framework using the Blockchain</h2><h3 id="摘要-3"><a class="markdownIt-Anchor" href="#摘要-3"></a> 摘要</h3><p>联合学习有望支持涉及大数据集、大规模分布式数据所有者和不可靠网络连接的协作学习应用。为了保护数据隐私，现有的FL方法采用(k，n)-门限秘密共享方案，基于对客户端的半诚实假设，在本地模型更新交换中实现安全多方计算，以增加数据大小为代价处理随机客户端退出。这些方法对客户采用半诚实的假设，因此容易受到恶意客户的攻击。在这项工作中，我们提出了一个基于区块链隐私保护的联合学习框架，该框架利用了区块链的不变性和分散信任属性来提供模型更新的起源。我们基于BC的PPFL的概念验证实现证明了它对于联邦环境中本地模型更新的安全聚合是实用的。</p><h3 id="关键技术-2"><a class="markdownIt-Anchor" href="#关键技术-2"></a> 关键技术</h3><p>代理重加密</p><h2 id="4-gfl-a-decentralized-federated-learning-framework-based-on-blockchain"><a class="markdownIt-Anchor" href="#4-gfl-a-decentralized-federated-learning-framework-based-on-blockchain"></a> 4、GFL: A Decentralized Federated Learning Framework Based On Blockchain</h2><h3 id="摘要-4"><a class="markdownIt-Anchor" href="#摘要-4"></a> 摘要</h3><p>联合学习是一个快速发展的领域，已经提出了许多集中式和分散式的联合学习框架。然而，<u>在恶意节点攻击下，如何提高通信性能、保持安全性和健壮性是当前FL框架面临的巨大挑战</u>。在本文中，我们提出了Galaxy Federated Learning Framework(GFL)，一个基于区块链的分布式学习框架。**GFL引入了一致性哈希算法来提高通信性能，并提出了一种新的环分散算法(RDFL)来提高分布式的FL性能和带宽利用率。此外，GFL引入了星际文件系统(IPFS)和区块链，以进一步提高通信效率和FL安全性。**我们的实验表明，在恶意节点和非独立同分布(非IID)数据集的数据中毒情况下，GFL改进了通信性能和分布式FL性能。</p><h3 id="关键技术-3"><a class="markdownIt-Anchor" href="#关键技术-3"></a> 关键技术</h3><p>一致性哈希、知识蒸馏、环分散算法（RDFL）、IPFS</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;论文阅读总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#论文阅读总结&quot;&gt;&lt;/a&gt; 论文阅读总结&lt;/h1&gt;
&lt;h2 id=&quot;1-biscotti-a-blockchain-system-for-private-and-secure-f</summary>
      
    
    
    
    <category term="区块链+联邦学习论文阅读笔记" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="区块链+联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>A Reliable and Accountable Privacy-Preserving Federated Learning Framework using the Blockchain</title>
    <link href="https://yao-chen-ecnu.github.io/2021/04/19/Poster%20%20A%20Reliable%20and%20Accountable%20Privacy-Preserving%20Federated%20Learning%20Framework%20using%20the%20Blockchain/"/>
    <id>https://yao-chen-ecnu.github.io/2021/04/19/Poster%20%20A%20Reliable%20and%20Accountable%20Privacy-Preserving%20Federated%20Learning%20Framework%20using%20the%20Blockchain/</id>
    <published>2021-04-19T13:00:42.432Z</published>
    <updated>2021-04-22T07:09:09.145Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/image-20210419202316932.png" alt></p><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>联合学习有望支持涉及大数据集、大规模分布式数据所有者和不可靠网络连接的协作学习应用。为了保护数据隐私，现有的FL方法采用(k，n)-门限秘密共享方案，基于对客户端的半诚实假设，在本地模型更新交换中实现安全多方计算，以增加数据大小为代价处理随机客户端退出。这些方法对客户采用半诚实的假设，因此容易受到恶意客户的攻击。在这项工作中，我们提出了一个基于区块链隐私保护的联合学习框架，该框架利用了区块链的不变性和分散信任属性来提供模型更新的起源。我们基于BC的PPFL的概念验证实现证明了它对于联邦环境中本地模型更新的安全聚合是实用的。</p><h2 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h2><p>早期的FL设计假设中间结果，如随机梯度下降的参数更新，包含的信息比原始训练数据少[6]。因此，短暂的更新经常被暴露。然而，这些梯度可能会泄漏本地数据项的重要信息，尤其是当诸如数据结构的元数据可用时。为了解决这个问题，最近已经提出了几种用于FL的安全聚合算法[2，3]，利用<strong>秘密共享和差分隐私</strong>技术。然而，这些方法假设参与客户的松散联盟，这些客户可能加入或不加入学习任务，因此遭受随机客户退出。[3]提出采用(k，n)-门限秘密共享来提高对退出的鲁棒性。事实上，<strong>这些方案的安全保障植根于对客户的半诚实假设</strong>，即假设客户不得提交“假”更新，也不得相互勾结操纵学习过程或结果。。此外，几乎所有关于FL的现有工作都明确或隐含地采用简单的激励模型，该模型假设客户自愿参与协作学习，以他们的本地模型更新和计算资源换取改进的全局模型。这种扁平激励模型忽略了这样一个事实，即具有不同数据大小和计算能力的客户端在全局优化任务中做出不同的贡献，并且应该得到不同的奖励。</p><p>本文的主要贡献：</p><p>在这项工作中，我们提出了一个基于区块链隐私保护的联合学习框架。如图1所示，区块链互连了前端组件，如服务器、客户端和聚合器。它使用分布式交易分类账来记录关于前线任务、参与客户、本地和全球模型更新等的信息流。，在组件中。不可变分类帐通过跟踪每个FL任务中的数据流来支持数据起源，并提供了一个良好的信任基础来构建现有FL方法缺乏的验证机制。有了这样的验证机制，我们可以进一步将半诚实客户端假设扩展到更现实的恶意客户端假设，在这种假设下，一个客户端可以退出，提交虚假的本地更新，或者与其他恶意客户端串通。此外，利用分布式分类帐，服务器以及FL任务中的其他感兴趣的实体(例如，客户端和聚合器)可以跟踪每个客户端对全局优化的学习模型的贡献，这使得基于贡献的激励机制成为可能。在此基础上，我们可以进一步引入改进模型所有权的溢价，并相应地奖励矿工。</p><p><img src="/images/image-20210419204046377.png" alt></p><h2 id="框架设计"><a class="markdownIt-Anchor" href="#框架设计"></a> 框架设计</h2><h3 id="1-联邦学习模型"><a class="markdownIt-Anchor" href="#1-联邦学习模型"></a> 1、联邦学习模型：</h3><p>联邦平均模型</p><p>基于BC的PPFL的主要隐私目标是(a)保护本地数据私有；(b)保护本地数据不受服务器的影响，不将个别本地模型更新泄露给服务器；以及©保护本地和全局模型更新不受无关的内部(即聚合器、矿工)和外部实体的影响。同时，安全目标是确保(a)来自承诺客户的本地模型更新的机密性和完整性，以及(b)模型更新的来源。</p><h3 id="2-架构设计"><a class="markdownIt-Anchor" href="#2-架构设计"></a> 2、架构设计</h3><p>为了实现安全和隐私保护目标，我们提出了一个基于业务连续性的PPFL框架，它由五个组件组成，如图1所示。对于FL任务，服务器首先通告任务规范，例如应用程序的类型(例如，击键或活动预测)、设备的类型、训练数据的类型和格式(例如，陀螺仪或运动传感器数据、浮点格式)、学习模型的类型(例如，CNN)、计算要求(例如，学习速率)和任务设置(例如，聚合器、所需客户端的数量、批量大小等)。)</p><p>在任务事务中。愿意加入任务的客户端向聚合器注册，然后聚合器为所有提交的客户端创建一个提交事务。最后，矿工将所有交易记录到分类账中。</p><p>在FL任务期间，服务器首先与所有提交的客户端共享初始模型。为了模型隐私，这个初始模型在<strong>保护模式</strong>下共享。然后，客户端根据其本地训练数据计算本地模型更新，并将更新后的模型参数上传到聚合器。聚合器在同一批中收到的所有更新将被打包到本地更新事务中，并在矿工的帮助下记录到分类帐中。</p><h3 id="3-出块"><a class="markdownIt-Anchor" href="#3-出块"></a> 3、出块</h3><p>基于BC的PPFL依赖于三个构建块来提供FL中的数据隐私和出处</p><h4 id="同态加密和代理重加密"><a class="markdownIt-Anchor" href="#同态加密和代理重加密"></a> 同态加密和代理重加密</h4><p>现有的大多数隐私保护联合学习方法都采用秘密共享方案来实现安全多方计算，这种方法存在随机客户端退出的问题。为了解决这个问题，我们采用了由克莱姆和肖普[4]提出的具有两个陷门函数的Paillier密码系统的变体，以在模型交换期间保护局部模型</p><p>在我们的设计中，服务器为每个任务生成一对公共和私有任务密钥，并将公共任务密钥包含在任务规范中，而任务中涉及的每个聚合器生成一对公共和私有批处理密钥，并将公共批处理密钥分发到每个提交的客户端。任务密钥和批密钥以这样的形式构造，即批密钥是相应任务密钥的转换密钥，以支持代理重加密。因此，服务器不能直接恢复记录在分类帐中的单个本地更新，而是仅在聚合器聚合更新并用转换密钥重新加密后恢复聚合值。</p><h4 id="区块链"><a class="markdownIt-Anchor" href="#区块链"></a> 区块链</h4><p>值得注意的是，对于大型数据集上的大型模型更新，我们可以将加密的模型更新存储在分布式数据库中，如IPFS [1]，并且只记录区块链的地址。</p><h4 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h4><p>验证器可以批量检索客户端的所有更新，生成排除来自可疑客户端的输入的集合，并且比较验证前后全局模型的性能。在初步实验中，我们实现了基本验证功能，其中服务器充当验证器，在每轮恢复聚合后评估梯度。它使用损失函数比较更新后的全局模型与该轮初始模型的性能。</p><h3 id="4-实现与评估"><a class="markdownIt-Anchor" href="#4-实现与评估"></a> 4、实现与评估</h3><ul><li>在Python中开发了Paillier密码系统的变体，以实现同态加密和代理重加密</li><li>区块链基于以太坊和truffle框架</li><li>使用PyTorch实现深度学习训练</li></ul><p>我们使用简单的两层神经网络构建了二进制分类器，并使用来自UCI机器学习库的乳腺癌数据集作为训练数据。数据集有569个样本和30个特征。对于我们框架中使用的所有三种密码系统，我们生成了默认长度为2048位的公钥和私钥对。</p><p>我们在亚马逊EC2 t2.micro实例上运行了区块链，该实例具有1千兆内存和3.3千兆赫英特尔可扩展处理器。对于服务器、聚合器和客户端节点，我们采用了两种设置:在设置一中，我们在2 GHz英特尔酷睿i5处理器和3 GiB内存的笔记本电脑上运行所有三种类型的节点，它们可以从这里与亚马逊EC2上实现的区块链进行交互；在设置二中，我们也在亚马逊EC2实例上运行它们，这最小化了通信延迟，因为所有实例都在同一个云平台上。未来，我们将通过在多个云平台上部署不同的节点，进一步研究我们框架的可扩展性和通信延迟。</p><h4 id="评估"><a class="markdownIt-Anchor" href="#评估"></a> 评估</h4><p>我们首先在10个客户中随机划分训练数据，每个客户有50个来自IID划分数据的例子。然后，我们测量了不同FL操作的执行时间</p><p>我们重复了四次模型训练，并计算了单次迭代的平均执行时间，如表1所示。显然，在这两种设置下，在所有FL操作中，聚集梯度并将结果写入区块链是计算成本最高的操作。每次迭代的平均执行时间是所有FL操作的总和，在设置一和设置二中分别是1.62和1.27秒。这两种设置之间的差异表明了向区块链读写所引入的通信成本。</p><p><img src="/images/image-20210419205648151.png" alt></p><p>因此，我们将客户机批处理大小增加到20、30和40，并测量了执行时间。平均执行时间从10个客户端的1.62秒分别增加到20、30和40个客户端的1.73、2.36和2.43秒。这表明客户端数量的增加导致协议执行时间的次线性增加。</p><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>在未来，我们将探索联合优化，在客户端的每个训练阶段结合小批量，并增加多客户端并行性，以实现目标测试集的准确性。我们还将考虑非IID分区数据，并根据客户的贡献调查奖励客户的激励计划。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/image-20210419202316932.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;摘要&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#摘要&quot;&gt;&lt;/a&gt; 摘要&lt;/h2&gt;
&lt;p&gt;联合学习有望支持涉及大数据</summary>
      
    
    
    
    <category term="区块链+联邦学习论文阅读笔记" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="区块链+联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>GFL A Decentralized Federated Learning Framework Based On Blockchain</title>
    <link href="https://yao-chen-ecnu.github.io/2021/04/19/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/"/>
    <id>https://yao-chen-ecnu.github.io/2021/04/19/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/</id>
    <published>2021-04-19T12:22:21.792Z</published>
    <updated>2021-04-22T10:04:29.945Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/image-20210419190004383.png" alt></p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>联合学习是一个快速发展的领域，已经提出了许多集中式和分散式的联合学习框架。然而，<u>在恶意节点攻击下，如何提高通信性能、保持安全性和健壮性是当前FL框架面临的巨大挑战</u>。在本文中，我们提出了Galaxy Federated Learning Framework(GFL)，一个基于区块链的分布式学习框架。<strong>GFL引入了一致性哈希算法来提高通信性能，并提出了一种新的环分散算法(RDFL)来提高分布式的FL性能和带宽利用率。此外，GFL引入了星际文件系统(IPFS)和区块链，以进一步提高通信效率和FL安全性。</strong>我们的实验表明，在恶意节点和非独立同分布(非IID)数据集的数据中毒情况下，GFL改进了通信性能和分布式FL性能。</p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>主要贡献：</p><ol><li>本文设计了一种新的数据节点拓扑机制，采用了一致哈希算法。该机制能够显著降低通信压力，提高拓扑稳定性。</li><li>一种新的环形分散联邦学习(RDFL)算法，旨在提高带宽利用率以及分布式联邦学习的性能</li><li>为了提高分散式FL框架的通信性能和安全性，我们引入了IPFS技术来降低系统通信压力，引入了区块链技术来提高FL安全性。</li></ol><h2 id="框架介绍"><a href="#框架介绍" class="headerlink" title="框架介绍"></a>框架介绍</h2><h3 id="1、环形分布式FL拓扑"><a href="#1、环形分布式FL拓扑" class="headerlink" title="1、环形分布式FL拓扑"></a>1、环形分布式FL拓扑</h3><p>一组$n$个数据节点，其中有$m$个为诚实可信任节点，其余$n-m$个为不可信任节点。这$n$个数据表示为${DP_1,DP_2,DP_3,…,DP_n}$。GFL利用一致哈希算法来构建n个数据节点的环形拓扑。</p><p>一致性给哈希值$H<em>{k}=\operatorname{Hash}\left(D P</em>{k}^{i p}\right) \subseteq\left[0,2^{32}-1\right], D P_{k}^{i p}$ 代表了$DP_K$的ip，$k\subseteq[i,n]$</p><p>根据一致性哈希指，数据节点分布在环上，取值范围为$[0,2^{32}-1]$</p><p>不可信数据节点将把本地模型以顺时针方向发送到在环形拓扑上找到的最近的可信数据节点。图1显示了由一致哈希算法构建的环形拓扑。绿色数据节点代表可信数据节点，灰色数据节点代表不可信数据节点。根据顺时针原则，不可信数据节点$DP_2$和$DP_3$向可信数据提供者$DP_4$发送模型。不可信数据节点$DP_5$将模型发送到最近的可信数据节点$DP_k$。</p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420133240589.png" alt></p><p>借助一致哈希算法，不同的不可信数据节点向不同的可信节点发送模型，有效降低了可信节点的通信压力。为了使环上可信节点的分布更加均匀，GFL引入了虚拟可信节点进一步降低通信压力，图2显示了带有虚拟节点的环形拓扑。</p><p><img src="/2021/04/19/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420133432435.png" alt="image-20210420133432435"></p><p>带有红色虚线的绿色节点代表<strong>虚拟节点</strong>。$DP^{v1}_1$是$DP_1$的虚拟节点。如果不可信数据节点发现最近的可信节点是顺时针方向的虚拟节点，则直接将模型发送给该虚拟节点对应的可信节点。</p><p>==为什么要添加这个虚拟节点呢？==</p><h3 id="2、RDFL算法"><a href="#2、RDFL算法" class="headerlink" title="2、RDFL算法"></a>2、RDFL算法</h3><p>基于一致哈希算法构造的环分散拓扑，GFL开始执行RDFL算法。可信节点遵循图3所示的RDFL算法过程。$M_K$表示数据节点$DP_k$的模型。$r$表示执行模型同步的回合数，$m$表示可信节点数。</p><p>在每次迭代中</p><ol><li>每个数据节点加载全局模型用于局部训练，并沿顺时针方向同步其模型</li><li>利用知识蒸馏将可信节点拥有的其他模型的暗知识收敛到局部模型，并在可信节点之间同步局部模型</li><li>每个可信节点执行联邦平均算法，生成新的全局模型并开始下一次迭代。</li></ol><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420152238558.png" alt></p><p><strong>具体每一步的执行</strong></p><h4 id="（1）训练和同步模型"><a href="#（1）训练和同步模型" class="headerlink" title="（1）训练和同步模型"></a>（1）训练和同步模型</h4><p>每个数据节点$DP_k$首先加载上一次迭代生成的全局模型$GM$进行局部训练，得到一个新的局部模型$M_k$，然后不可信节点根据顺时针原理将局部模型发送给最近的可信节点。此外，可信节点同步模型，使得所有可信节点获得剩余可信节点的模型。为了提高可信节点之间的带宽利用率，RDFL算法在一致性哈希算法中引入了<strong>Ring-allreduce</strong>和<strong>顺时针原则</strong>来实现模型同步。</p><p>从图1中可以看出，在同步开始之前，可信节点$DP<em>4$接收来自不可信节点$DP_2$和$DP_3$的模型$M_2$和$M_3$。在第一轮同步之后（$r=1$），$DP_1$    获得了$M_1$和$M_n$，$DP_4$获得了$M_1,M_2,M_3和M_4$,$DP_n$获得了$M_n和M</em>{n-1}$，经过$m-1$轮同步后（$r=m-1$），所有可信节点已经获得了其他所有可信节点的模型</p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420133432435.png" alt></p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210421111504039.png" alt></p><h4 id="（2）知识蒸馏"><a href="#（2）知识蒸馏" class="headerlink" title="（2）知识蒸馏"></a>（2）知识蒸馏</h4><p>由于同步，每个可信节点从剩余的可信数据节点获得模型。然后，每个可信节点在本地进行知识蒸馏。通过知识蒸馏，强大的教师模型中的暗知识可以转移到知识很少的学生模型中。学生模型的损失函数如公式所示</p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420163204451.png" alt></p><ul><li>$L<em>{CE}$表示交叉熵，$D</em>{KL}$表示KL散度，$P$表示softmax之后的模型输出，$z$表示模型logit层的输出，$T$表示蒸馏温度的超参</li><li>知识蒸馏的目的就是最小化$L_{student}$，使得学生模型更好的学习暗知识</li><li>RDFL利用KL散度来衡量模型之间的分布差异。</li></ul><p>在RDFL算法的知识蒸馏步骤中，每个可信节点$DP_k$将本地模型$M_k$作为学生，而$DP_k$拥有的其余模型将被用作教师来学习暗知识。</p><p>为了防止遭到不可信节点的数据中毒，RDFL只允许与模型$M_k$KL差异最小的前30%的模型作为教师模型</p><p>随着FL轮数的增加，教师模型的数量会动态增加，以提高泛化能力，但不超过50%。每个可信节点只保留局部模型，知识蒸馏后丢弃剩余模型。在图3中，受信任的节点$DP_1$在蒸馏后得到本地模型$M_1$，$DP_4$得到$M_4$，$DP_n$得到$M_n$。然后，可信节点利用<strong>Ring-allreduce</strong>和<strong>顺时针原则</strong>来同步可信节点的本地模型。同步后，所有可信节点都有其他可信节点的本地模型。</p><h4 id="（3）联邦平均"><a href="#（3）联邦平均" class="headerlink" title="（3）联邦平均"></a>（3）联邦平均</h4><p>在这一步中，每个可信节点运行 FedAvg获得一个新的全局模型。然后，每个可信节点根据环形拓扑将新的全局模型逆时针发送给不可信节点，并开始下一次迭代。</p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210422174618842.png" alt="image-20210422174618842"></p><h3 id="3、IPFS和区块链"><a href="#3、IPFS和区块链" class="headerlink" title="3、IPFS和区块链"></a>3、IPFS和区块链</h3><p>在传统的分布式FL算法中，数据节点间模型的传递占用大量通信开销，造成严重的通信压力。此外，这些通信正遭受篡改的安全风险，并且无法追踪模型的来源。</p><h4 id="（1）通信压力"><a href="#（1）通信压力" class="headerlink" title="（1）通信压力"></a>（1）通信压力</h4><p>为了减轻沟通压力，GFL引入<strong>IPFS</strong>作为模型存储系统。IPFS由GFL的可信节点组成。IPFS的文件将被分成存储在不同节点上的多个部分，IPFS将生成对应于该文件的IPFS哈希。IPFS哈希是一个46字节的字符串，相应的文件可以通过IPFS哈希从IPFS获得。</p><h4 id="（2）通信安全"><a href="#（2）通信安全" class="headerlink" title="（2）通信安全"></a>（2）通信安全</h4><p>为了提高分散的FL框架的安全性，GFL引入了区块链作为通信系统。</p><p>在GFL，数据节点发送的IPFS哈希以区块链事务的形式传输。每笔交易都通过一致算法进行验证，以降低篡改风险。此外，由于区块链记录了每个交易信息，GFL可以根据交易信息追溯到恶意节点。</p><p>值得注意的是，由于区块链的开放性，区块链的任何节点都可以获得区块链的交易信息。为了避免IPFS散列的泄露，GFL对IPFS散列进行加密，以保护数据节点的隐私。</p><p>==如何进行加密，密钥如何保存==</p><h2 id="框架设计"><a href="#框架设计" class="headerlink" title="框架设计"></a>框架设计</h2><p>本节详细描述了GFL的体系结构和加密机制。</p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420181719745.png" alt></p><h3 id="（1）架构"><a href="#（1）架构" class="headerlink" title="（1）架构"></a>（1）架构</h3><p>GFL由IPFS和区块链组成。就区块链而言，GFL利用以太坊作为区块链的实施。在GFL，区块链由所有数据节点组成，IPFS由可信节点组成。</p><p>智能合约是部署在区块链的协议。在GFL，数据节点通过调用智能合约的函数，将模型的IPFS哈希以事务的形式发送给区块链。区块链首先执行共识机制来验证事务是否被篡改，如果验证通过，事务将被打包成块。</p><h3 id="（2）加密机制"><a href="#（2）加密机制" class="headerlink" title="（2）加密机制"></a>（2）加密机制</h3><p>由于区块链的可见性，区块链的节点可以访问任何块中的交易信息，不可信数据节点中恶意节点的存在可能导致数据隐私泄露。为解决数据隐私泄露问题，GFL利用RSA非对称加密算法和AES对称加密算法对交易信息进行加密。</p><p>根据RDFL算法，数据节点$DP_h,h\subseteq[1,n]$将模型的IPFS哈希发送给它最近的可信节点$DP_k,k\subseteq(h,n]$，如果$DP_h$和$DP_k$是第一次通信，$DP_k$生成一个AES密钥，并且使用$DP_h$的公钥加密它，然后发送给$DP_h$。$DP_h$使用私钥解密得到这个AES密钥。然后IPFS哈希在$DP_h$和$DP_k$之间传输时就用AES密钥来进行加密。</p><p>==这里不多此一举嘛？为什么不直接用非对称加密呢？$DP_h$向$DP_k$发送时就用$DP_k$的公钥，反过来就用$DP_h$的公钥加密，各自收到消息之后用自己的私钥解密就可以了啊。==</p><h2 id="实验和结果"><a href="#实验和结果" class="headerlink" title="实验和结果"></a>实验和结果</h2><p>在这一部分中，我们首先评估RDFL算法的分散FL性能，然后评估GFL的通信耗时和通信数据量。</p><h3 id="1、RDFL-算法分析"><a href="#1、RDFL-算法分析" class="headerlink" title="1、RDFL 算法分析"></a>1、RDFL 算法分析</h3><p>我们通过仿真实验验证了RDFL算法的性能。模拟实验的设置如下:</p><ul><li><strong>数据集</strong>：CIFAR-10、CIFAR-100和MNIST</li></ul><p>在这个实验中，我们模拟了5个(n  =  5)数据节点。验证RDFL在恶意节点数据中毒下的FL性能。MNIST数据集被模拟为恶意数据集。我们将数据集划分为独立的同分布(IID)数据集，并将它们分配给数据节点。此外，为了验证算法在非独立同分布数据集的FL性能，我们利用潜在狄利克雷分配(LDA)和标签划分方法将数据集划分为非独立同分布数据集。当使用标签分区方法时，每个分区仅包括两类CIFAR-10或二十类CIFAR-100数据集。</p><ul><li><p><strong>模型设置</strong>：我们使用一个卷积神经网络(CNN)，它有三个3×3卷积层(第一个有32个通道，第二个有64个通道，第三个有64个通道，每个通道都有2×2最大池和ReLu激活)和两个FC层。</p></li><li><p><strong>训练设置</strong>：在每个数据节点，我们使用SGD算法来训练上面提到的CNN模型。学习率和权重衰减都是0.001。批量为64。在每一轮FL中，数据节点执行5轮本地模型训练。</p></li><li><p><strong>比较设置</strong>：我们假设所有不可信节点都是恶意节点，按照4种不同的比例在5个数据节点中设置恶意数据节点，比较RDFL算法和FedAvg的性能。此外，我们还比较了RDFL算法和FedAvg在无恶意节点的不同非IID数据集下的性能。</p></li><li><p><strong>结果</strong>：</p><p>为了验证RDFL算法在恶意节点数据中毒情况下的分布式FL性能，我们进行了四种节点比率下的RDFL算法和FedAvg。图5显示了训练的过程，表1显示了在不同的节点比率下，RDFL算法比FedAvg具有更好的性能。<img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420184204668.png" alt></p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420184302093.png" alt></p><p>此外，为了验证RDFL算法在非IID数据集下的性能，我们使用潜在狄利克雷分配(LDA)和标签划分方法将数据集划分为5个分区，以比较RDFL算法和FedAvg的性能。图5显示了培训的过程。从表1可以看出，RDFL算法在非IID数据集上具有更好的性能。</p><h3 id="2、通信分析"><a href="#2、通信分析" class="headerlink" title="2、通信分析"></a>2、通信分析</h3><p>通过仿真实验验证了GFL的通信性能。模拟实验的设置如下:</p></li><li><p><strong>实验设置</strong>：我们在IPFS和区块链建立了一个具有3个可信数据节点的网络(内存:16GBCPU:Intel Xeon Gold 5118 2.30GHz)，并利用Lenet-5型号和ResNet-50型号验证GFL的通信性能。</p></li><li><strong>实验结果</strong>：</li></ul><p>我们首先验证了传统分散FL框架的通信性能，然后验证了仅引入时的通信性能。最后验证了IPFS和区块链同时引入IPFS时GFL的通信性能。表2和表3显示，IPFS大大减少了通信时间和通信数据量。此外，由于区块链的共识算法，GFL引入区块链后，通信时间消耗略有增加。总之，GFL比传统的分布式FL框架有更好的通信性能。</p><p><img src="/images/GFL%20A%20Decentralized%20Federated%20Learning%20Framework%20Based%20On%20Blockchain/image-20210420184659761.png" alt></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>在本文中，我们提出了一个基于区块链的分布式FL框架，称为GFL，以解决现有的分布式FL框架的问题。GFL利用一致哈希算法和RDFL算法来提高通信性能、分布式的FL性能和稳定性。此外，GFL引入了IPFS和区块链，以进一步提高通信性能和FL安全性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/image-20210419190004383.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;联合学习是一个快速发展</summary>
      
    
    
    
    <category term="区块链+联邦学习论文阅读笔记" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="区块链+联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>A Blockchain-based Decentralized Federated Learning Framework with Committee Consensus</title>
    <link href="https://yao-chen-ecnu.github.io/2021/04/19/A%20Blockchain-based%20Decentralized%20Federated%20Learning%20Framework%20with%20Committee%20Consensus/"/>
    <id>https://yao-chen-ecnu.github.io/2021/04/19/A%20Blockchain-based%20Decentralized%20Federated%20Learning%20Framework%20with%20Committee%20Consensus/</id>
    <published>2021-04-19T06:57:34.057Z</published>
    <updated>2021-04-19T12:22:38.644Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/image-20210419152521597.png" alt></p><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>联邦学习已经被广泛研究并应用于各种场景。在移动计算场景中，联合学习保护用户不暴露他们的私有数据，同时协作地为各种现实世界的应用程序训练全局模型。然而，由于恶意客户端或中央服务器不断攻击全局模型或用户隐私数据，联邦学习的安全性日益受到质疑。为了解决这些安全问题，我们提出了一个基于区块链的分布式联邦学习框架，即一个<strong>基于区块链的具有委员会共识的联邦学习框架</strong>。该框架将区块链用于全局模型存储和本地模型更新交换。为了实现提出的BFLC，我们还设计了一种创新的委员会共识机制，可以有效减少共识计算量，减少恶意攻击。然后我们讨论了BFLC的可扩展性，包括理论安全性、存储优化和激励。最后，我们使用真实数据集进行了实验，以验证BFLC框架的有效性。</p><h2 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h2><p><strong>传统联邦学习的缺点：</strong></p><p>在FL设置中，服务器执行更新聚合、客户端选择、全局模型维护等中心操作。服务器需要从众多客户端收集更新来完成聚合操作，还需要向这些客户端广播一个新的全局模型，这就对网络带宽提出了很高的要求。此外，基于云的服务器受到云服务提供商稳定性的影响。集中式服务器可以通过偏向某些客户端来扭曲全局模型。此外，一些恶意的中央服务器可以毒害模型，甚至从更新中收集客户端的隐私数据。因此，中央服务器的稳定性、公平性和安全性对FL至关重要。</p><p><strong>本文的主要贡献：</strong></p><ol><li>提出了一个基于区块链的FL框架BFLC，它详细定义了模型存储模式、训练过程和新的委员会共识。</li><li>从技术上讨论了BFLC的可扩展性，包括社区中的节点管理、恶意节点攻击的分析和存储优化。</li><li>通过在真实的FL数据集上的实验证明了BFLC的有效性。我们还通过模拟恶意攻击验证了BFLC的安全性。</li></ol><h2 id="相关工作"><a class="markdownIt-Anchor" href="#相关工作"></a> 相关工作</h2><p>目前区块链应用于联邦学习的三个挑战：</p><ol><li><strong>共识效率</strong>。对于基于区块链的方法来说，为每个块达成共识是一个不可避免的过程。考虑到FL设置中的大量学习节点，广播共识非常耗时。因此，降低共识成本不是小事。相关作品中有一篇[10]选择了一位领导者来执行共识。然而，该标准依赖于许多外部数据。</li><li><strong>模型安全性</strong>。该框架应防止全球模型暴露于未经授权的设备和中毒。系统的安全性很少在基于区块链的FL环境下进行研究。</li><li><strong>框架可扩展性</strong>。当将这些训练框架应用到现实世界的应用中时，我们总是需要添加细节规则来适应不同的场景。因此，框架的可扩展性决定了它们的应用范围。</li></ol><h2 id="本文提出的框架"><a class="markdownIt-Anchor" href="#本文提出的框架"></a> 本文提出的框架</h2><p><img src="/images/image-20210419101937721.png" alt></p><h3 id="a-区块链存储"><a class="markdownIt-Anchor" href="#a-区块链存储"></a> A. 区块链存储</h3><p>为了实现权限控制，BFLC的存储是一个<strong>联盟区块链系统</strong>，只有授权的设备才能访问FL训练内容。在区块链，我们设计了两个不同的块来存储全局模型和局部更新(如图2所示)，它们统称为学习信息。为了简单起见，我们假设一个块中只放置一个学习信息。</p><p><img src="/images/image-20210419103612298.png" alt></p><p>一开始，一个随机初始化的模型被放入#0块，然后第0轮训练开始。节点访问当前模型并执行局部训练，并将验证后的局部梯度放入新的更新块。当连续有足够的更新块时，智能契约触发聚合，下一轮的新模型被生成并放置在链上。我们要注意的是，FL训练只依赖最新的模型块，存储历史块是为了故障回退和块验证。</p><p>假设每轮需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>个更新，共进行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>轮迭代，那么#<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>∗</mo><mi mathvariant="normal">（</mi><mi>k</mi><mo>+</mo><mn>1</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">t*（k+1）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">）</span></span></span></span>块代表第t轮的模型块，#<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>t</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[t*(k+1)+1,(t+1)*(k+1)-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>为第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>轮迭代的更新块</p><p>模型块：块头，迭代轮数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>，和全局模型</p><p>更新块：块头，迭代轮数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>，本地更新模型，上传地址和更新分数</p><h3 id="b-委员会共识机制"><a class="markdownIt-Anchor" href="#b-委员会共识机制"></a> B. 委员会共识机制</h3><p>选举出几个诚实的节点组成一个验证委员会负责模型验证和共识出块，其他节点进行本地训练并将模型上传给共识委员会。然后，委员会验证更新，并给它们打分。只有合格的更新将被打包到区块链。在下一轮开始时，根据上一轮的节点分数选举一个新的委员会。</p><p>委员会如何进行验证：</p><p>委员会成员通过将他们的数据视为一个验证集来验证本地更新，验证的准确性成为分数。这是最小化的方法，不需要委员会的进一步操作，只需要运行学习模型的基本能力。综合各委员会成员的得分后，中位数将成为本次更新的得分。</p><p>BFLC可以实现这些优点:</p><ol><li>高效率:只有几个节点会验证更新，而不是广播到每个节点并达成协议。</li><li>K倍交叉验证:委员不会全面参加当地培训。因此，委员会的本地数据被视为验证集。随着每轮委员会成员的交替，验证集也随之改变。在这种情况下，在FL上实现了k倍交叉验证。</li><li>反恶意:基于验证分数，智能合约将选出相应的表现较好的节点，组成下一轮培训的新委员会。这意味着所选择的本地数据分布是群居的，并且该节点不是恶意的。</li></ol><p><strong><u>委员会共识机制描述不够具体。最初的委员会怎么选举，如何判断委员会成员是诚实的，万一委员会节点中混入恶意节点，委员会节点本地运行模型会不会造成节点的模型泄露，根据怎样的具体标准进行打分，如何保证委员会的打分是可信的？</u></strong></p><h3 id="c-模型训练"><a class="markdownIt-Anchor" href="#c-模型训练"></a> C. 模型训练</h3><p>在FL中，为了安全和隐私，原始数据将保存在本地的节点中，这些节点只将梯度上传到区块链。</p><p>存在两点挑战：</p><ol><li>本地数据分布可能不是独立且同分布的(非IID)—&gt;每轮只需要一定数量的局部更新</li><li>设备不总是可用的（可能存在掉线的情况）-----&gt;节点随时主动获取当前最新的全局模型进行训练，当节点贡献局部梯度更新时，由委员会验证，验证通过则为其发放奖励</li></ol><p>每一轮，当委员会验证足够的本地更新时，聚合过程被激活。委员会将这些经过验证的更新汇总成一个新的全局模型。新的全局模型写入区块链后，委员会将再次选举，下一轮训练开始。</p><h2 id="讨论"><a class="markdownIt-Anchor" href="#讨论"></a> 讨论</h2><h3 id="a-节点管理和奖励机制"><a class="markdownIt-Anchor" href="#a-节点管理和奖励机制"></a> A. 节点管理和奖励机制</h3><h4 id="节点管理"><a class="markdownIt-Anchor" href="#节点管理"></a> 节点管理</h4><p>为了控制权限，指定组成训练社区的初始节点负责节点管理，即作为管理者。在加入训练社区之前，每个设备都必须经过经理的验证。此验证处于黑名单模式:如果设备因不当行为(如提交误导性更新、传播私人模型)被踢出社区，设备将被拒绝。</p><p>根据建议的区块链存储结构，在新节点加入后，可以在链上快速找到最新的全局模型。节点可以立即使用模型完成本地任务，也可以用本地数据更新模型，经共识委员会验证后在链上获得分数。</p><h4 id="奖励机制"><a class="markdownIt-Anchor" href="#奖励机制"></a> 奖励机制</h4><p>社区中的节点总是可以在不提交更新的情况下使用该模型，因此需要有效的激励来鼓励节点向全局模型提供更新。为了解决这个问题，我们提出了一种叫做按贡献分享利润的激励机制。</p><ul><li>许可费:每台设备都要为全局模型的访问许可付费，这些费用由管理者保管。然后，节点可以无限制地访问社区中的最新模型。</li><li>利润分享:每轮汇总后，经理根据提交更新的分数将奖励分配给相应的节点。</li></ul><p>因此，频繁提供更新可以获得更多的回报，不断更新的全局模型将吸引更多的节点参与。这种激励机制具有很高的可扩展性，以适应不同的现实世界应用。</p><h3 id="b-委员会选举"><a class="markdownIt-Anchor" href="#b-委员会选举"></a> B. 委员会选举</h3><p>在每一轮结束时，从经验证的更新提供者中选出一个新的委员会。</p><ul><li>随机选举:从经过验证的节点中随机选择新的委员会成员。从机器学习的角度来看，这种方法提高了模型的泛化能力，减少了过拟合。然而，当恶意节点伪装成正常节点时，对恶意攻击的抵抗力较弱。</li><li>分数选举:认证分数最高的供应商组成新的委员会。由于委员会中缺少部分节点，这可能会加剧样本的不均匀分布。然而，对于恶意节点攻击，这种方法显著增加了攻击成本，并带来了更多的安全性和稳定性。</li><li>多因素优化:这种方法考虑了设备的多种因素(即网络传输速率)和最佳选择的验证分数。但是，这种优化会带来额外的计算开销。因此，应该根据实际情况和相关要求来应用这种方法。</li></ul><h3 id="c-恶意节点"><a class="markdownIt-Anchor" href="#c-恶意节点"></a> C. 恶意节点</h3><p>恶意节点被定义为提交不正确的恶意模型更新的节点。</p><p>我们将所有节点的数量表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，其中委员会成员的数量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>，其余的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>−</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">N-M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>个节点为训练节点。当且仅当超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">m/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord">2</span></span></span></span>个委员会成员合谋时，而已更新才会被聚合。然而在上一轮中，委员会成员时表现最好的M个成员，这就意味着这些恶意委员会成员的更新倍上一轮委员会中超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">m/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord">2</span></span></span></span>个节点接受，这是一个无线循环过程，因此只要第一轮的委员会中有超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">m/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord">2</span></span></span></span>诚实节点，就没有恶意节点可以进入委员会并且损害全局模型。</p><p>考虑另外一个极端情况：恶意节点通过伪装成正常节点合谋赢得委员会席位。当恶意节点占据一半席位时，攻击开始。</p><p>分析:参与节点数量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>中恶意节点占的百分比为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo separator="true">,</mo><mi>q</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q,q\in(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>,委员会成员占的百分比为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p\in(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，攻击目标是抢占委员会中超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∗</mo><mi>P</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">A*P/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mord">2</span></span></span></span>的席位。假设每个节点的性能都是相似的，攻击成功事件就可以描述为：委员会节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∗</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">A*p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>个中，有超过半数来自<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∗</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">A*p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>，设定A为1000</p><p><img src="/images/image-20210419144910794.png" alt></p><p>我们应该注意到，只有当恶意百分比大于50%时，攻击成功的概率才能明显大于0。这个结论类似于区块链电力系统51%的攻击。换句话说，在一个分布式社区中，恶意节点应该拥有51%的计算资源来攻击系统，而代价远远超过好处。此外，历史模型和更新存储在区块链上，因此，在攻击发生后，可以选择回撤。</p><h3 id="d-存储优化"><a class="markdownIt-Anchor" href="#d-存储优化"></a> D. 存储优化</h3><p>在实际应用中，存储开销是决定训练设备硬件要求的一个重要因素。基于上述区块链存储方案(如图2所示)，可以快速找到最新的全局模型。虽然历史模型和更新可以提供恢复功能，但也占用了巨大的存储空间。</p><p>这里我们给出一个简单可行的存储开销降低方案:容量不足的节点可以在本地删除历史块，只保留最新的模型和本轮的更新。这样可以解决一些节点存储空间不足的问题，同时在核心节点上保留了灾难恢复和块验证的能力。但是这种方法的缺点也很明显。区块链的可信度随着节点的删除而降低。在相互不信任的培训社区中，出于安全考虑，每个节点都不能使用该方案。</p><p>因此，可信可靠的第三方存储可能是更好的解决方案。区块链仅维护每个模型或更新文件所在的网络地址和修改操作记录。其他节点与集中式存储交互，以获取最新型号或上传更新。该集中式存储将负责灾难恢复备份和分布式文件存储服务。</p><h2 id="实验"><a class="markdownIt-Anchor" href="#实验"></a> 实验</h2><ul><li><p>数据集：FEMNIST 该数据集包含用于手写字符图像分类任务的80，5263个样本和3550个用户，并且包含62个不同的类别(10个数字，26个小写，26个大写)。</p></li><li><p>模拟了900个设备，其中本地数据集在数量上是不平衡的，并且在分布上不是独立的</p></li><li><p>区块链系统选用FISCO，是一个基于PBFT共识的一个去跨链平台</p></li><li><p>智能合约使用solidity语言进行开发</p></li><li><p>学习模型用Python 3.7.6和Tensorflow 1.14.0编写，在Geforce RTX 2080 ti GPU上执行</p></li></ul><p>我们将BFLC与基础FL [12]框架和独立培训框架作为基线进行比较。每个框架执行经典的图像分类模型AlexNet [14]作为全局模型，并固定一组模型超参数以确保公平性。在实验设置方面，我们将每轮活动节点的比例定义为k%，其中40%将在下一轮BFLC中当选为委员会成员。基础FL的训练节点比例也是k%。同时，独立训练将利用整个数据集。在不同k值的条件下，我们将他们的表现记录在表一中。</p><p><img src="/images/image-20210419151607655.png" alt></p><p>从表一可以看出，随着活动节点比例的增加，BFLC的性能不断接近基本FL框架的效果，与数据集完整的独立训练相比，只有轻微的损失。值得一提的是，BFLC可以通过委员会共识机制显著降低共识的消耗。</p><h4 id="恶意攻击下的实验"><a class="markdownIt-Anchor" href="#恶意攻击下的实验"></a> 恶意攻击下的实验</h4><p>我们假设恶意节点的攻击模式是带有点态高斯随机噪声的随机扰动。</p><p>基本FL不会执行任何防御措施，随机选择的主动节点生成的模型更新会被聚合。CwMed构建一个全局梯度，其中每个条目是具有相同坐标的局部梯度中条目的中间值。BFLC依靠上面提到的委员会共识来抵抗攻击。每次更新都会从委员会获得一个分数(即局部预测精度的中位数)。</p><p>为了增强攻击的有效性，我们假设恶意节点是共谋的，即恶意委员会的成员会对恶意更新给予随机的高分(例如90%̘100%)。活跃节点比例定为10%，下一轮选举20%为委员会。如图4所示，BFLC可以抵抗比比较方法高得多的恶意节点比例。这表明，在委员会机制的帮助下，边境事务局的工作卓有成效。</p><p><img src="/images/image-20210419152048530.png" alt></p><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>基于一个可信的区块链系统，我们提出了BFLC，这是一个利用委员会共识的分散的、联合的学习框架。这样的委员会共识可以有效避免恶意中心服务器或恶意节点的影响。在实验部分，我们采用真实数据集验证了BFLC框架的有效性，该数据集可以获得类似于联邦学习中集中训练的全局模型。我们还讨论了BFLC的可扩展性，它在安全性、数据存储和激励机制方面具有广阔的研究前景。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/image-20210419152521597.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;摘要&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#摘要&quot;&gt;&lt;/a&gt; 摘要&lt;/h2&gt;
&lt;p&gt;联邦学习已经被广泛研究并应</summary>
      
    
    
    
    <category term="区块链+联邦学习论文阅读笔记" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="区块链+联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Biscotti A Blockchain System for Private and Secure Federated Learning</title>
    <link href="https://yao-chen-ecnu.github.io/2021/04/15/Biscotti%20A%20Blockchain%20System%20for%20Private%20and%20Secure%20Federated%20Learning/"/>
    <id>https://yao-chen-ecnu.github.io/2021/04/15/Biscotti%20A%20Blockchain%20System%20for%20Private%20and%20Secure%20Federated%20Learning/</id>
    <published>2021-04-15T04:35:08.489Z</published>
    <updated>2021-04-19T08:35:05.973Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/image-20210419152954709.png" alt></p><h2 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h2><p>联合学习是支持安全多方机器学习(ML)的最新技术:数据保存在所有者的设备上，模型的更新通过安全协议进行聚合。然而，这个过程假设一个可信的集中式基础设施来进行协调，并且客户端必须相信中央服务不使用客户端数据的副产品。除此之外，一组恶意客户端还可能通过执行中毒攻击来损害模型的性能。作为回应，我们提出了Biscotti:一种完全分散的对等(P2P)多方消息传递方法，它使用区块链和加密原语来协调对等客户端之间的隐私保护消息传递过程。我们的评估表明，Biscotti是可扩展的、容错的，并且能够抵御已知的攻击。例如，当系统中存在30%的对手时，Biscotti能够保护单个客户端更新的隐私，并保持全局模型的大规模性能。</p><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>机器学习应用中的一个常见需求是收集大量的训练数据。这些数据经常是分布式的，例如在医院或物联网部署中的设备之间。然而，当在多方环境中训练ML模型时，用户必须与集中式服务共享他们潜在的敏感信息。这种共享对于不愿意信任第三方的用户或公司来说是有问题的。例如，制药公司在药物发现方面相互竞争，很少共享数据。此外，互联网用户越来越意识到他们的数据的价值，并希望保持对其数据的控制。为了避免直接共享敏感数据，联合学习是大规模安全多方ML的一个突出解决方案:客户端通过可信的聚合器来训练共享模型，而不会暴露其底层数据或计算。</p><p><strong>攻击</strong>：</p><ol><li>毒化攻击</li><li>窃取隐私：对手也可以在联合学习中攻击其他客户端的隐私:在信息泄漏攻击中，对手伪装成诚实的数据提供者，并试图通过观察目标的共享模型更新来推断目标客户端的敏感训练数据的属性</li></ol><p>先前的解决办法：集中式的异常检测、差分隐私、安全聚合</p><p>但据我们所知，同时解决这两种威胁的私有分散解决方案尚不存在。</p><p>此外，这些方法不适用于缺乏可信的中央权威的分散环境。因为ML不需要强一致或一致性来收敛，所以传统的强一致协议，如拜占庭容错(BFT)协议对机器学习工作负载的限制过于严格。</p><p><strong>主要的贡献：</strong></p><p>我们的主要贡献是将几种现有技术整合到一个连贯的系统中，在高度分布式P2P环境中提供安全和私有的多方机器学习。特别是，比肖蒂通过多克鲁姆防御防止对等体毒害模型[42]，通过不同的私人噪音提供隐私[22]，[23]，并使用沙米尔秘密进行安全聚合[43]。</p><p>我们发现Biscotti可以在266.7分钟内在60000个图像数据集上训练一个有200个同伴的MNIST  softmax模型，同时可以抵抗高达30%的敌对同伴。此外，我们还证明了Biscotti的设计对于需要了解客户端SGD更新的信息泄漏攻击[13]是有弹性的，而且Biscotti对于之前工作中的中毒攻击[44]也是有弹性的。Biscotti还具有容错能力，可以应对每1.875秒就会发生故障的节点，并提供模型训练，即使节点发生故障也可以收敛。</p><h2 id="挑战与关键技术"><a class="markdownIt-Anchor" href="#挑战与关键技术"></a> 挑战与关键技术</h2><ol><li>女巫攻击：基于VRF和POF的一致性哈希</li><li>毒化攻击：使用Multi-Krum进行验证更新</li><li>信息窃取：差分隐私</li><li>隐私性：安全聚合和密钥共享</li></ol><h2 id="一些假设"><a class="markdownIt-Anchor" href="#一些假设"></a> 一些假设</h2><h3 id="设计假设"><a class="markdownIt-Anchor" href="#设计假设"></a> 设计假设</h3><ol><li>POF是基于POS的</li><li>区块链拓扑</li><li>机器学习：使用SGD</li></ol><h3 id="攻击假设"><a class="markdownIt-Anchor" href="#攻击假设"></a> 攻击假设</h3><ol><li>在女巫攻击中，我们假设对手控制多个参与方，但不超过总体的30%</li><li>将中毒攻击限制为错误标记数据，导致训练过的模型对其进行错误分类，不包括后门攻击和基于梯度上升的攻击</li><li>当对手进行信息泄漏攻击时，我们假设他们的目标是学习受害者的本地数据集的属性。具体地说，我们提供了记录级别的隐私，这可以防止从用户数据集中对单个示例进行反匿名化。由于安全聚合的漏洞，我们不考虑带有边信息的信息泄漏攻击，也不考虑试图学习整个目标类属性的类级隐私攻击。</li></ol><h2 id="biscotti设计"><a class="markdownIt-Anchor" href="#biscotti设计"></a> BISCOTTI设计</h2><h3 id="设计目标"><a class="markdownIt-Anchor" href="#设计目标"></a> 设计目标：</h3><ol><li>收敛到最优全局模型(在联邦学习设置中没有对手的情况下训练的同一模型);</li><li>通过验证对等体模型更新来防止中毒;</li><li>通过防止信息泄露攻击来保持对等体训练数据的私密性</li></ol><h3 id="总体设计"><a class="markdownIt-Anchor" href="#总体设计"></a> 总体设计：</h3><p>每出一个块代表完成一次SGD迭代</p><p><img src="/images/image-20210412141853247.png" alt></p><p>1：每个peer在本地计算SGD更新值，即梯度</p><p>2：每个peer从一个noising peers中获取噪声，这个noising peers是由VRF算法挑选出来的</p><p>3：每个peer为自己的梯度添加上噪声，那么现在得到了masked update</p><p>4：然后这个masked update会被验证委员会(verification committee)进行验证，该验证委员会也是由VRF算法选举出来的，如果peer的masked update可以通过Multi-KRUM算法的验证，那么验证委员会的每一个成员会为该peer的unmasked update签署一个承诺</p><p>5：如果大多数委员会的成员都签署了一个更新</p><p>6：那么这个更新就会通过Shamir secret shares协议分成多份</p><p>7：然后多份更新就会被发送到一个聚合委员会(aggregation committee)中进行聚合，聚会委员会会执行一个安全的协议去聚合unmaked update。</p><p>完成聚合后所有对梯度有贡献的peers以及担任了验证和聚合委员会的都会受到额外的奖励。</p><p>8：聚合后的updates添加到全局的模型中，并存储在一个新的区块中，同时将更新后的模型会广播给所有的peers，并且新产生的区块会被添加到账本上</p><h2 id="训练初始化"><a class="markdownIt-Anchor" href="#训练初始化"></a> 训练初始化</h2><ul><li>创世块由可信任的第三方创立</li><li>包含以下信息，所有<code>peers</code>都可以获取到创世块中的信息：<ol><li>初始模型状态w0和预计T的迭代次数</li><li>用于创建SGD更新承诺的公钥PK(见附录C)</li><li>系统中所有其他对等体的公钥,用于提交和验证签名验证期间</li><li>每个peer的噪声(见图3和附录B)</li><li>初始的权益分配</li><li>当有新的区块被追加时执行的权益更新功能。</li></ol></li></ul><h2 id="区块链设计"><a class="markdownIt-Anchor" href="#区块链设计"></a> 区块链设计</h2><p><img src="/images/image-20210412145250341.png" alt></p><p>为了验证聚合是真实计算的，需要在块中包含单个更新。然而，单独存储它们会泄露个人私人训练数据[13]、[20]的信息。使用polynomial commitments</p><p>多项式承诺进行SGD更新，并将其映射到椭圆曲线上的一个点(详见附录C)。承诺通过隐藏个体更新来提供隐私，但是可以同态组合以验证aggregatorP㼿wiwas对全局模型的更新是诚实计算的。如果提交的更新列表等于总和，则以下等式成立:</p><p><img src="/images/image-20210412145952331.png" alt></p><h2 id="根据权益进行角色选举"><a class="markdownIt-Anchor" href="#根据权益进行角色选举"></a> 根据权益进行角色选举</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/image-20210419152954709.png&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;摘要&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#摘要&quot;&gt;&lt;/a&gt; 摘要&lt;/h2&gt;
&lt;p&gt;联合学习是支持安全多方机器</summary>
      
    
    
    
    <category term="区块链+联邦学习论文阅读笔记" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="区块链+联邦学习" scheme="https://yao-chen-ecnu.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>共识算法</title>
    <link href="https://yao-chen-ecnu.github.io/2021/03/24/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>https://yao-chen-ecnu.github.io/2021/03/24/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/</id>
    <published>2021-03-24T08:40:28.069Z</published>
    <updated>2021-06-22T02:48:19.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="区块链共识算法之Raft-amp-Pbft-amp-Rbft"><a href="#区块链共识算法之Raft-amp-Pbft-amp-Rbft" class="headerlink" title="区块链共识算法之Raft&amp;Pbft&amp;Rbft"></a>区块链共识算法之Raft&amp;Pbft&amp;Rbft</h1><h2 id="什么是共识算法"><a href="#什么是共识算法" class="headerlink" title="什么是共识算法"></a>什么是共识算法</h2><p>区块链技术中，共识算法是其中核心的一个组成部分。</p><p><strong>什么是共识？</strong>从两个层面理解共识：第一个层面是点，即多个节点对某个数据达成一致共识。第二个层面是线，即多个节点对多个数据的顺序达成共识。<strong>其中对数据顺序达成一致共识是很多共识算法要解决的根本问题。</strong></p><p>共识算法根据区块链的分类同样可以分成三大类：公链，联盟链和私链。</p><ul><li>私链：私链的适用环境一般是不考虑集群中存在作恶节点，只考虑因为系统或者网络原因导致的故障节点。如paxo，raft。</li><li>联盟链：联盟链的适用环境除了需要考虑集群中存在故障节点，还需要考虑集群中存在作恶节点。对于联盟链，每个新加入的节点都是需要验证和审核的。如pbft。</li><li>公链：公链不断需要考虑网络中存在故障节点，还需要考虑作恶节点。公链中的节点可以很自由的加入或者退出，不需要严格的验证和审核。</li></ul><p><img src="https://pic1.zhimg.com/v2-1b29af254f0cc338876f232e32415878_r.jpg" alt="preview"></p><h2 id="一、raft和pbft的最大容错节点数"><a href="#一、raft和pbft的最大容错节点数" class="headerlink" title="一、raft和pbft的最大容错节点数"></a>一、raft和pbft的最大容错节点数</h2><p><strong>故障节点</strong>：节点因为系统繁忙、宕机或者网络问题等其他异常情况导致的无响应。</p><p><strong>作恶节点</strong>：除了可以对集群的其他节点的请求无响应之外，还可以故意的发送错误的数据，或者给不同的其他节点发送不同的数据，使整个集群的节点最终无法达成共识。</p><p>raft是针对私链的共识算法，所以raft的容错只支持容错故障节点，不支持容错作恶节点。假设集群总节点数为$n$，故障节点为 $f$ ，根据小数服从多数的原则，集群里正常节点只需要比 $f$ 个节点再多一个节点，即 $f+1$个节点，正确节点的数量就会比故障节点数量多，那么集群就能达成共识。因此 raft 算法支持的最大容错节点数量是$(n-1)/2$。</p><p>对于 pbft 算法，因为 pbft 算法的除了需要支持容错故障节点之外，还需要支持容错作恶节点。假设集群节点数为 $N$，有问题的节点为 $f$。有问题的节点中，可以既是故障节点，也可以是作恶节点，或者只是故障节点或者只是作恶节点。那么会产生以下两种极端情况：</p><ol><li>第一种情况，$f$ 个有问题节点既是故障节点，又是作恶节点，那么根据小数服从多数的原则，集群里正常节点只需要比$f$个节点再多一个节点，即 $f+1$个节点，确节点的数量就会比故障节点数量多，那么集群就能达成共识。也就是说这种情况支持的最大容错节点数量是 $(n-1)/2$。</li><li>第二种情况，故障节点和作恶节点都是不同的节点。那么就会有 $f$个故障节点和$f$个作恶节点，当发现节点是故障节点后，会被集群排除在外，剩下$f$个作恶节点，那么根据小数服从多数的原则，集群里正常节点只需要比$f$个节点再多一个节点，即 $f+1$个节点，正确节点的数量就会比作恶节点数量多，那么集群就能达成共识。所以，所有类型的节点数量加起来就是$f+1$ 个正确节点，$f$个故障节点和$f$个问题节点，即 $3f+1=n$。</li></ol><p>结合上述两种情况，因此 pbft 算法支持的最大容错节点数量是$(n-1)/3$。</p><h2 id="二、raft算法"><a href="#二、raft算法" class="headerlink" title="二、raft算法"></a>二、raft算法</h2><p>raft算法包含三种角色，分别是：跟随者（follower）、候选人（candidate）和领导者（leader）。</p><ol><li>leader: 处理所有客户端交互，日志复制等，一般一次只有一个Leader.</li><li>follower: 类似选民，完全被动</li><li>candidate候选人: 类似Proposer律师，可以被选为一个新的领导者。</li></ol><p>集群中的任意节点在某一时刻只能是这三种状态的其中一种，这三种角色是可以随着时间和条件的变化而相互转换的。</p><p>每个节点上都有一个倒计时器 (Election Timeout)，时间随机在 150ms 到 300ms 之间。有几种情况会重设 Timeout：</p><ol><li>收到选举的请求</li><li>收到 Leader 的 Heartbeat </li></ol><p>raft算法主要又两个过程：第一个是领导者选举，第二个是日志复制，其中日志复制过程分为记录日志和提交数据两个阶段。</p><p>算法流程参考：<a href="https://www.jianshu.com/p/8e4bbe7e276c">https://www.jianshu.com/p/8e4bbe7e276c</a></p><p>Raft 官网：<a href="https://link.jianshu.com?t=https%3A%2F%2Fraft.github.io%2F">https://raft.github.io/</a></p><p>Raft 原理动画 (推荐看看)：<a href="https://link.jianshu.com?t=http%3A%2F%2Fthesecretlivesofdata.com%2Fraft%2F">http://thesecretlivesofdata.com/raft/</a></p><p>Raft 算法解析图片来源：<a href="https://link.jianshu.com?t=http%3A%2F%2Fwww.infoq.com%2Fcn%2Farticles%2Fcoreos-analyse-etcd">http://www.infoq.com/cn/articles/coreos-analyse-etcd</a></p><h2 id="三、pbft-算法"><a href="#三、pbft-算法" class="headerlink" title="三、pbft 算法"></a>三、pbft 算法</h2><p>的提出主要是为了解决拜占庭将军问题。</p><p><img src="https://img-blog.csdnimg.cn/20201220184913267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1lTU18zMzUyMQ==,size_16,color_FFFFFF,t_70" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;区块链共识算法之Raft-amp-Pbft-amp-Rbft&quot;&gt;&lt;a href=&quot;#区块链共识算法之Raft-amp-Pbft-amp-Rbft&quot; class=&quot;headerlink&quot; title=&quot;区块链共识算法之Raft&amp;amp;Pbft&amp;amp;Rbft&quot;&gt;</summary>
      
    
    
    
    <category term="区块链" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="算法" scheme="https://yao-chen-ecnu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分类算法总结</title>
    <link href="https://yao-chen-ecnu.github.io/2021/03/16/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>https://yao-chen-ecnu.github.io/2021/03/16/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2021-03-16T02:06:42.714Z</published>
    <updated>2021-03-22T05:35:38.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分类算法总结"><a class="markdownIt-Anchor" href="#分类算法总结"></a> 分类算法总结</h1><h2 id="k-近邻"><a class="markdownIt-Anchor" href="#k-近邻"></a> K-近邻</h2><p>k-近邻算法采用测量不同特征值之间的距离方法进行分类。</p><h3 id="工作原理"><a class="markdownIt-Anchor" href="#工作原理"></a> 工作原理</h3><p>存在一个样本数据集合，也称作训练样本集，并且样本集中每个数据都存在标签，即我们知道样本集中每一数据与所属分类的对应关系。输入没有标签的新数据后，将新数据的每个特征与样本集中数据对应的特征进行比较，然后算法提取样本集中特征最相似数据（最近邻）的分类标签。最后，选择k个最相似数据中出现次数最多的分类，作为新数据的分类。</p><p>优点：精度高、对异常值不敏感、无数据输入假定。<br>缺点：计算复杂度高、空间复杂度高。<br>适用数据范围：数值型和标称型。</p><h3 id="k-近邻算法的一般流程"><a class="markdownIt-Anchor" href="#k-近邻算法的一般流程"></a> k-近邻算法的一般流程</h3><p>(1) 收集数据：可以使用任何方法。<br>(2) 准备数据：距离计算所需要的数值，最好是结构化的数据格式。<br>(3) 分析数据：可以使用任何方法。<br>(4) 训练算法：此步骤不适用于k-近邻算法。<br>(5) 测试算法：计算错误率。<br>(6) 使用算法：首先需要输入样本数据和结构化的输出结果，然后运行k-近邻算法判定输入数据分别属于哪个分类，最后应用对计算出的分类执行后续的处理。</p><h3 id="实施knn-算法"><a class="markdownIt-Anchor" href="#实施knn-算法"></a> 实施kNN 算法</h3><p>对未知类别属性的数据集中的每个点依次执行以下操作：<br>(1) 计算已知类别数据集中的点与当前点之间的距离（通常需要归一化处理）；<br>(2) 按照距离递增次序排序；<br>(3) 选取与当前点距离最小的k个点；<br>(4) 确定前k个点所在类别的出现频率；<br>(5) 返回前k个点出现频率最高的类别作为当前点的预测分类。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>k-近邻算法是基于实例的学习，使用算法时我们必须有接近实际数据的训练样本数据。k-近邻算法必须保存全部数据集，如果训练数据集的很大，必须使用大量的存储空间。此外，由于必须对数据集中的每个数据计算距离值，实际使用时可能非常耗时。k-近邻算法的另一个缺陷是它无法给出任何数据的基础结构信息，因此也无法知晓平均实例样本和典型实例样本具有什么特征。</p><h2 id="决策树"><a class="markdownIt-Anchor" href="#决策树"></a> 决策树</h2><p><img src="https://img-blog.csdnimg.cn/20190821170409255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"><br>优点：计算复杂度不高，输出结果易于理解，对中间值的缺失不敏感，可以处理不相关特征数据。<br>缺点：可能会产生过度匹配问题。<br>适用数据类型：数值型和标称型。</p><p>决策树的一般流程<br>(1) 收集数据：可以使用任何方法。<br>(2) 准备数据：树构造算法只适用于标称型数据，因此数值型数据必须离散化。<br>(3) 分析数据：可以使用任何方法，构造树完成之后，我们应该检查图形是否符合预期。<br>(4) 训练算法：构造树的数据结构。<br>(5) 测试算法：使用经验树计算错误率。<br>(6) 使用算法：此步骤可以适用于任何监督学习算法，而使用决策树可以更好地理解数据的内在含义。</p><h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3><h4 id="熵"><a class="markdownIt-Anchor" href="#熵"></a> 熵</h4><p>信息：如果待分类的事务可能划分在多个分类之中，则符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的信息定义为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l(x_i)=-log_2p(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是选择该分类的概率。</p><p>熵，是信息的期望。我们需要计算所有类别，所有可能值包含的信息期望值，通过下面的公式得到：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">H=-\sum_{n=1}^{n}{p(x_i)log_2p(x_i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.9185100000000004em;vertical-align:-1.267113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>是分类的数目。</p><p>当熵中的概率由数据估计(特别是最大似然估计)得到时，所对应的熵称为 <strong>经验熵</strong>(empirical entropy)。</p><p>假定定义贷款申请样本数据表中的数据为训练数据集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>，则训练数据集D的经验熵为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|D|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span></span>表示其样本容量，及样本个数。设有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>个类$ C_k，k = 1,2,3,···,K<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span></span></span></span>|C_k|<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">为</mi><mi mathvariant="normal">属</mi><mi mathvariant="normal">于</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">的</mi></mrow><annotation encoding="application/x-tex">为属于类的</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">属</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">的</span></span></span></span>C_k$样本个数，这经验熵公式可以写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow></mrow><annotation encoding="application/x-tex">H(D)=\sum_{k=1}^{K}{\frac{|C_k|}{|D|}log_2\frac{|C_k|}{|D|}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><h4 id="信息增益"><a class="markdownIt-Anchor" href="#信息增益"></a> 信息增益</h4><p>在划分数据集之前之后信息发生的变化称为 <strong>信息增益</strong>，知道如何计算信息增益，就可以计算每个特征值划分数据集获得的 <strong>信息增益</strong>，获得 <strong>信息增益</strong> 最高的特征就是最好的选择。</p><p><strong>条件熵</strong> H(Y|X) 表示在已知随机变量X的条件下随机变量Y的不确定性，随机变量X给定的条件下随机变量Y的 <strong>条件熵</strong>(conditional entropy) H(Y|X)，定义X在给定Y条件下的条件概率分布的熵对X的数学期望：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>p</mi><mi>i</mi></msub><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">H(Y|X)=\sum_{i=1}^{n}{p_iH(Y|X=x_i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></span></p><p>这里，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">p_i=P(X=x_i),i=1,2,...,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span></span></span></span>。同理，当 <strong>条件熵</strong> 中的概率由数据估计(特别是极大似然估计)得到时，所对应的 <strong>条件熵</strong> 成为 <strong>条件经验熵</strong>(empirical conditional entropy)。</p><p><strong>信息增益</strong> 是相对于特征而言的。所以，特征A对训练数据集D的信息增益<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>，定义为集合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi mathvariant="normal">的</mi></mrow><annotation encoding="application/x-tex">D的</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback">的</span></span></span></span>经验熵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>与特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>给定条件下<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>的经验条件熵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>之差，即</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A)= H(D)-H(D|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span></span></p><p>一般地，熵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span>与条件熵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>之差称为 <strong>互信息</strong>(mutual information)。决策树学习中的 <strong>信息增益</strong> 等价于训练数据集中类与特征的 <strong>互信息</strong>。</p><p>设特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个不同的取值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,a_2,...,a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，根据特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>的取值将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>划分为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个子集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>D</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">D_1,D_2,...,D_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|D_i|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本个数。记子集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中属于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本的集合为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub><mi>k</mi></mrow><annotation encoding="application/x-tex">D_ik</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>,即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub><mi>k</mi><mo>=</mo><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_ik=D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本个数。于是经验条件熵的公式可以写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>H</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mrow><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow></mrow></mrow><annotation encoding="application/x-tex">H(D|A)=\sum_{i=1}^{n}{\frac{|D_i|}{|D|}H(D_i)}=-\sum_{i=1}^{n}{\frac{|D_{i}|}{|D_i|}\sum_{k=1}^K{\frac{|D_{ik}|}{|D_i|}log_2\frac{|D_{ik}|}{|D_i|}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></span></p><h3 id="决策树的生成与修剪"><a class="markdownIt-Anchor" href="#决策树的生成与修剪"></a> 决策树的生成与修剪</h3><p>ID3算法的核心是在决策树各个结点上对应 <strong>信息增益</strong> 准则选择特征，递归地构建决策树，ID3相当于用极大似然法进行概率模型的选择。</p><p><strong>具体方法是：</strong><br>从根结点(root node)开始，对结点计算所有可能的特征的信息增益，选择信息增益最大的特征作为结点的特征，由该特征的不同取值建立子节点；<br>再对子结点递归地调用以上方法，构建决策树；<br>直到所有特征的信息增益均很小或没有特征可以选择为止，最后得到一个决策树。</p><p><strong>使用决策树进行分类：</strong></p><p>依靠训练数据构造了决策树之后，可以将它用于实际数据的分类。在执行数据分类时，需要决策树以及用于构造树的标签向量；然后，程序比较测试数据与决策树上的数值，递归执行该过程直到进入叶子结点；最后将测试数据定义为叶子结点所属的类型。</p><h3 id="总结-2"><a class="markdownIt-Anchor" href="#总结-2"></a> 总结</h3><p>决策树分类器就像带有终止块的流程图，终止块表示分类结果。开始处理数据集时，首先需要测量集合中数据的不一致性，也就是熵，然后寻找最优方案划分数据集，直到数据集中的所有数据属于同一分类。ID3算法可以用于划分标称型数据集。构建决策树时，通常采用递归的方法将数据集转化为决策树。一般并不构造新的数据结构，而是使用Python语言内嵌的数据结构字典存储树节点信息。</p><p>使用Matplotlib的注解功能，可以将存储的树结构转化为容易理解的图形。Python语言的pickle模块可用于存储决策树的结构。隐形眼镜的例子表明决策树可能会产生过多的数据集划分，从而产生过度匹配数据集的问题。我们可以通过裁剪决策树，合并相邻的无法产生大量信息增益的叶节点，消除过度匹配问题。还有其他的决策树的构造算法，最流行的是C4.5和CART</p><p><img src="https://img-blog.csdnimg.cn/20190822090836462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70" alt="img"></p><h2 id="朴素贝叶斯方法"><a class="markdownIt-Anchor" href="#朴素贝叶斯方法"></a> 朴素贝叶斯方法</h2><p>朴素贝叶斯法是基于贝叶斯定理与特征条件独立假设的分类方法，是有监督的学习算法。现实生活中朴素贝叶斯算法应用非常广泛，如文本分类，垃圾邮件的分类，信用评估，钓鱼网站检测等等。</p><p>优点：在数据较少的情况下仍然有效，可以处理多类别问题。<br>缺点：对于输入数据的准备方式较为敏感。<br>适用数据类型：标称型数据。</p><h3 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h3><p><strong>朴素</strong>：<strong>整个形式化过程只做最原始、最简单的假设</strong>。</p><p>贝叶斯概率 <strong>引入先验知识和逻辑推理</strong> 来处理不确定命题。（另一种概率解释称为频数概率（frequency probability），它只从数据本身获得结论，并不考虑逻辑推理及先验知识。）</p><p>贝叶斯准则：即如果已知<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x|c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>，要求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(c|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，那么可以使用下面的计算方法：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>c</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">p(c|x)=\frac{p(x|c)p(c)}{p(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>全概率公式：<strong>表示达到某个目的的多种方式各自概率的和</strong></p><p><img src="https://img-blog.csdnimg.cn/20190828102939556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70" alt="img"></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(B)=P(B|A)P(A)+P(B|A&#x27;)P(A&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>对条件概率公式进行变形，可以得到如下形式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A|B)=P(A)\frac{P(B|A)}{P(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>P(A)称为&quot;<strong>先验概率</strong>&quot;（Prior probability），即在B事件发生之前，对A事件概率的一个判断。</li><li>P(A|B)称为&quot;<strong>后验概率</strong>&quot;（Posterior probability），即在B事件发生之后，对A事件概率的重新评估。</li><li>P(B|A)/P(B)称为&quot;<strong>可能性函数</strong>&quot;（Likelyhood），这是一个调整因子，使得预估概率更接近真实概率。</li></ul><p>条件概率可以理解成下面的式子：<strong>后验概率 ＝ 先验概率 ｘ 调整因子</strong></p><p><strong>朴素贝叶斯对条件概率分布做了条件独立性的假设</strong></p><p>假设有n个特征：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><mi>a</mi><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(a|X)=p(X|a)p(a)=p(x_1,x_2,...,x_n|a)p(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></span></p><p>由于每个特征都是独立的，我们可以进一步拆分公式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mi>a</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi>a</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mi mathvariant="normal">∣</mi><mi>a</mi><mo stretchy="false">)</mo><mo>∗</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>∗</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><mi>a</mi><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow><mi>p</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(a|X)=\left \{p(x_1|a)*p(x_2|a)*p(x_3|a)*...*p(x_n|a)\right \}p(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">{</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">}</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></span></p><p>这就是贝叶斯分类器的基本方法：<strong>在统计资料的基础上，依据某些特征，计算各个类别的概率，从而实现分类</strong>。</p><h3 id="朴素贝叶斯实现过程中的问题"><a class="markdownIt-Anchor" href="#朴素贝叶斯实现过程中的问题"></a> 朴素贝叶斯实现过程中的问题</h3><h4 id="零概率"><a class="markdownIt-Anchor" href="#零概率"></a> 零概率</h4><p><strong>拉普拉斯平滑(Laplace Smoothing)</strong> 又被称为 <strong>加1平滑</strong>，是比较常用的平滑方法，它就是为了解决0概率问题。可以将所有词的出现数初始化为1，并将分母初始化为2</p><h4 id="下溢出"><a class="markdownIt-Anchor" href="#下溢出"></a> 下溢出</h4><p>下溢出是由于太多很小的数相乘造成的。当计算乘积：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>N</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(w_0|c_i)p(w_1|c_i)p(w_2|c_i)...p(w_N|c_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 由于大部分因子都非常小，所以程序会下溢出或者得到不正确的答案。一种解决办法是对乘积取 <strong>自然对数</strong>。在代数中有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>n</mi><mi>a</mi><mo>+</mo><mi>l</mi><mi>n</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">ln(a*b)=lna+lnb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mord mathdefault">b</span></span></span></span>，于是通过求对数可以避免下溢出或者浮点数舍入导致的错误。同时，采用 <strong>自然对数</strong> 进行处理不会有任何损失。</p><p><img src="https://img-blog.csdnimg.cn/20190828155714369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><h3 id="总结-3"><a class="markdownIt-Anchor" href="#总结-3"></a> 总结</h3><p>对于分类而言，使用 <strong>概率</strong> 有时要比使用 <strong>硬规则</strong> 更为有效。贝叶斯概率及贝叶斯准则提供了一种利用已知值来估计未知概率的有效方法。可以通过 <strong>特征之间的条件独立性假设</strong>，降低对数据量的需求。独立性假设是指一个词的出现概率并不依赖于文档中的其他词。当然我们也知道这个假设过于简单。这就是之所以称为 <strong>朴素贝叶斯</strong> 的原因。尽管条件独立性假设并不正确，但是朴素贝叶斯仍然是一种有效的分类器。</p><p>利用现代编程语言来实现朴素贝叶斯时需要考虑很多实际因素。<strong>下溢出</strong> 就是其中一个问题，它可以通过对概率取对数来解决。还有其他一些方面的改进，比如说移除停用词，当然也可以花大量时间对切分器进行优化。</p><h2 id="logistic-回归"><a class="markdownIt-Anchor" href="#logistic-回归"></a> Logistic 回归</h2><p>假设现在有一些数据点，用一条直线对这些点进行拟合（该线称为 <strong>最佳拟合直线</strong>），这个拟合过程就称作 <strong>回归</strong>。</p><p><img src="https://img-blog.csdnimg.cn/201908301650325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>利用 <strong>Logistic回归</strong> 进行分类的主要思想是：<strong>根据现有数据对分类边界线建立回归公式，以此进行分类</strong>。这里的“<strong>回归</strong>”一词源于最佳拟合，表示要找到 <strong>最佳拟合参数集</strong>，其背后的数学分析将在下一部分介绍。训练分类器时的做法就是寻找最佳拟合参数，使用的是最优化算法。</p><p>Logistic回归的一般过程<br>(1) 收集数据：采用任意方法收集数据。<br>(2) 准备数据：由于需要进行距离计算，因此要求数据类型为数值型。另外，结构化数据格式则最佳。<br>(3) 分析数据：采用任意方法对数据进行分析。<br>(4) 训练算法：大部分时间将用于训练，训练的目的是为了找到最佳的分类回归系数。<br>(5) 测试算法：一旦训练步骤完成，分类将会很快。<br>(6) 使用算法：首先，我们需要输入一些数据，并将其转换成对应的结构化数值；接着，基于训练好的回归系数就可以对这些数值进行简单的回归计算，判定它们属于哪个类别；在这之后，我们就可以在输出的类别上做一些其他分析工作。</p><p>优点：计算代价不高，易于理解和实现。<br>缺点：容易欠拟合，分类精度可能不高。<br>适用数据类型：数值型和标称型数据。</p><p>Logistic回归的因变量可以是二分类的，也可以是多分类的，但是实际中最为常用的就是二分类的Logistic回归。它利用的是Sigmoid函数阈值在[0,1]这个特性。Logistic回归进行分类的主要思想是：根据现有数据对分类边界线建立回归公式，以此进行分类。其实，Logistic本质上是一个基于条件概率的判别模型(Discriminative Model)。</p><h3 id="sigmoid-函数"><a class="markdownIt-Anchor" href="#sigmoid-函数"></a> Sigmoid 函数</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mrow><mo fence="true">(</mo><mi>z</mi><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\sigma \left ( z \right ) =\frac{1}{1+e^{-z}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.697331em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><img src="https://img-blog.csdnimg.cn/20190831192452786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>因此，为了实现Logistic回归分类器，我们可以在每个特征上都乘以一个回归系数，然后把所有的结果值相加，将这个总和代入Sigmoid函数中，进而得到一个范围在0~1之间的数值。任何大于0.5的数据被分入1类，小于0.5即被归入0类。所以，Logistic回归也可以被看成是一种概率估计。</p><h3 id="梯度上升算法"><a class="markdownIt-Anchor" href="#梯度上升算法"></a> 梯度上升算法</h3><p>Sigmoid函数的输入记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>，由下面公式得出：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>w</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">z=w_0x_0+w_1x_1+w_2x_2+...+w_nx_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>如果采用向量的写法，上述公式可以写成：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">z=w^Tx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>,它表示将这两个数值向量对应元素相乘然后全部加起来即得到z值。其中的向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>是分类器的输入数据，向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>也就是我们要找到的最佳参数（系数），从而使得分类器尽可能地精确。为了寻找该最佳参数，需要用到最优化理论的一些知识。本文使用梯度上升算法进行求解。</p><p>梯度上升法基于的思想是：要找到某函数的最大值，最好的方法是沿着该函数的梯度方向探寻。如果梯度记为∇，则函数f(x,y)的梯度由下式表示：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>▽</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\bigtriangledown f(x,y)=\binom{\frac{\partial f(x,y)}{\partial x} }{\frac{\partial f(x,y)}{\partial y}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">▽</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1261079999999994em;vertical-align:-1.303108em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8229999999999997em;"><span style="top:-2.1879999999999997em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.8229999999999995em;"><span class="pstrut" style="height:3.01em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.303108em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>函数f (x,y)必须要在待计算的点上有定义并且可微。</p><p><img src="https://img-blog.csdnimg.cn/20190831194253733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center%E3%80%91" alt="img"></p><p>上图中的梯度上升算法沿梯度方向移动了一步。可以看到，梯度算子总是指向函数值增长最快的方向。这里所说的是移动方向，而未提到移动量的大小。该量值称为步长，记做$\alpha $。用向量来表示的话，梯度上升算法的迭代公式如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>:</mo><mo>=</mo><mi>w</mi><mo>+</mo><mi>α</mi><msub><mo>▽</mo><mi>w</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w:=w+\alpha \bigtriangledown _wf(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></span></p><p>该公式将一直被迭代执行，直至达到某个停止条件为止，比如迭代次数达到某个指定值或算法达到某个可以允许的误差范围。</p><p>梯度下降算法<br>它与这里的梯度上升算法是一样的，只是公式中的加法需要变成减法。因此，对应的公式可以写成:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>:</mo><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><msub><mo>▽</mo><mi>w</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w:=w-\alpha \bigtriangledown _wf(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">▽</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></span></p><p>梯度上升算法用来求函数的最大值，而梯度下降算法用来求函数的最小值。</p><h3 id="总结-4"><a class="markdownIt-Anchor" href="#总结-4"></a> 总结</h3><p>Logistic回归的目的是寻找一个非线性函数Sigmoid的最佳拟合参数，求解过程可以由最优化算法来完成。在最优化算法中，最常用的就是 <strong>梯度上升算法</strong>，而 <strong>梯度上升算法</strong> 又可以简化为 <strong>随机梯度上升算法</strong>。</p><p>随机梯度上升算法与梯度上升算法的效果相当，但占用更少的计算资源。此外，随机梯度上升是一个在线算法，它可以在新数据到来时就完成参数更新，而不需要重新读取整个数据集来进行批处理运算。</p><ul><li>当数据集较小时，使用梯度上升算法</li><li>当数据集较大时，使用改进的随机梯度上升算法</li></ul><p>对应到Sklearn中，我们就可以根据数据情况选择优化算法，比如：</p><ul><li>数据较小的时候，我们使用liblinear</li><li>数据较大时，我们使用sag和saga</li></ul><h2 id="支持向量机"><a class="markdownIt-Anchor" href="#支持向量机"></a> 支持向量机</h2><p>支持向量机</p><ul><li>优点：泛化错误率低，计算开销不大，结果易解释。</li><li>缺点：对参数调节和核函数的选择敏感，原始分类器不加修改仅适用于处理二类问题。</li><li>适用数据类型：数值型和标称型数据。</li></ul><p>核心思想：基于最大间隔分隔数据</p><h3 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念：</h3><ul><li><p><strong>线性可分</strong>：可以很容易就在数据中给出一条直线将两组数据点分开。</p></li><li><p><strong>分隔超平面</strong>：将数据集分割开来的直线。</p></li><li><p><strong>间隔</strong>：离分隔超平面最近的点，到分隔面的距离。</p></li><li><p><strong>支持向量</strong>：离分隔超平面最近的那些点。</p></li></ul><h3 id="寻找最大间隔"><a class="markdownIt-Anchor" href="#寻找最大间隔"></a> 寻找最大间隔</h3><p><img src="https://img-blog.csdnimg.cn/20190818111547828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70" alt="img"></p><p>推导公式为：$\left | W^TA+b \right | /\left | \left | W \right |  \right | $</p><p>最大化间隔的目标就是找出分类器定义中的w和b。为此，我们必须找到具有最小间隔的数据点，而这些数据点也就是前面提到的支持向量。一旦找到具有最小间隔的数据点，我们就需要对该间隔最大化。这就可以写作：</p><p><img src="https://img-blog.csdnimg.cn/20190818112010908.png" alt="img"></p><p>直接求解上述问题相当困难，所以我们将它转换成为另一种更容易求解的形式。</p><p><img src="https://img-blog.csdnimg.cn/20190818112501742.png" alt="img"></p><p>约束条件为：</p><p><img src="https://img-blog.csdnimg.cn/20190818112523989.png" alt="img"></p><h3 id="svm的一般流程"><a class="markdownIt-Anchor" href="#svm的一般流程"></a> SVM的一般流程</h3><p>(1) 收集数据：可以使用任意方法。<br>(2) 准备数据：需要数值型数据。<br>(3) 分析数据：有助于可视化分隔超平面。<br>(4) 训练算法：SVM的大部分时间都源自训练，该过程主要实现两个参数的调优。<br>(5) 测试算法：十分简单的计算过程就可以实现。<br>(6) 使用算法：几乎所有分类问题都可以使用SVM，值得一提的是，SVM本身是一个二类分类器，对多类问题应用SVM需要对代码做一些修改。</p><p>使用SMO算法来实现SVM</p><h3 id="在复杂数据上应用核函数"><a class="markdownIt-Anchor" href="#在复杂数据上应用核函数"></a> 在复杂数据上应用核函数</h3><p>核函数的目的主要是为了解决非线性分类问题，通过核技巧将低维的非线性特征转化为高维的线性特征，从而可以通过线性模型来解决非线性的分类问题。</p><p><img src="https://img-blog.csdnimg.cn/20190818164427486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70" alt="img"></p><p>在图中，数据点处于一个圆中，人类的大脑能够意识到这一点。然而，对于分类器而言，它只能识别分类器的结果是大于0还是小于0。如果只在x和y轴构成的坐标系中插入直线进行分类的话，我们并不会得到理想的结果。但是或许可以对圆中的数据进行某种形式的转换，从而得到某些新的变量来表示数据。在这种表示情况下，我们就更容易得到大于0或者小于0的测试结果。在通常情况下，这种映射是通过 <strong>核函数</strong> 来实现的，会将低维特征空间映射到高维空间。</p><p>我们可以把核函数想象成一个 <strong>包装器</strong>（wrapper）或者是 <strong>接口</strong>（interface），它能把数据从某个很难处理的形式转换成为另一个较容易处理的形式。如果上述特征空间映射的说法听起来很让人迷糊的话，那么可以将它想象成为另外一种距离计算的方法。距离计算的方法有很多种，核函数一样具有多种类型。经过空间转换之后，我们可以在高维空间中解决线性问题，这也就等价于在低维空间中解决非线性问题。</p><h3 id="总结-5"><a class="markdownIt-Anchor" href="#总结-5"></a> 总结</h3><p>支持向量机是一种分类器。之所以称为“机”是因为它会产生一个二值决策结果，即它是一种决策“机”。支持向量机的泛化错误率较低，也就是说它具有良好的学习能力，且学到的结果具有很好的推广性。这些优点使得支持向量机十分流行，有些人认为它是监督学习中最好的定式算法。</p><p>支持向量机试图通过求解一个二次优化问题来最大化分类间隔。在过去，训练支持向量机常采用非常复杂并且低效的二次规划求解方法。John Platt引入了SMO算法，此算法可以通过每次只优化2个alpha值来加快SVM的训练速度。</p><p>核方法或者说核技巧会将数据（有时是非线性数据）从一个低维空间映射到一个高维空间，可以将一个在低维空间中的非线性问题转换成高维空间下的线性问题来求解。核方法不止在SVM中适用，还可以用于其他算法中。而其中的径向基函数是一个常用的度量两个向量距离的核函数。支持向量机是一个二类分类器。当用其解决多类问题时，则需要额外的方法对其进行扩展。SVM的效果也对优化参数和所用核函数中的参数敏感。</p><h2 id="adaboost-元算法"><a class="markdownIt-Anchor" href="#adaboost-元算法"></a> AdaBoost 元算法</h2><h3 id="基于数据集多重抽样的分类器-集成方法"><a class="markdownIt-Anchor" href="#基于数据集多重抽样的分类器-集成方法"></a> 基于数据集多重抽样的分类器 - 集成方法</h3><p><strong>集成方法（ensemble method）</strong> 通过组合多个学习器来完成学习任务，有点“三个臭皮匠顶个诸葛亮”的意味。基分类器一般采用的是 <strong>弱可学习（weakly learnable）</strong> 分类器，通过 <strong>集成方法</strong>，组合成一个 <strong>强可学习（strongly learnable）</strong> 分类器。<strong>弱可学习</strong> 是指学习的正确率仅略优于随机猜测的多项式学习算法；<strong>强可学习</strong> 指正确率较高的多项式学习算法。<strong>集成学习</strong> 的泛化能力一般比单一的基分类器要好，这是因为大部分基分类器都分类错误的概率远低于单一基分类器的。</p><p><strong>集成方法</strong> 主要包括 <strong>Bagging</strong> 和 <strong>Boosting</strong> 两种方法，<strong>Bagging</strong> 和 <strong>Boosting</strong> 都是将已有的分类或回归算法通过一定方式组合起来，形成一个性能更加强大的分类器，更准确的说这是一种分类算法的组装方法，即将 <strong>弱分类器</strong> 组装成 <strong>强分类器</strong> 的方法。</p><h3 id="bagging"><a class="markdownIt-Anchor" href="#bagging"></a> <strong>bagging</strong></h3><p><strong>自举汇聚法（bootstrap aggregating）</strong>，也称为bagging方法，是在从原始数据集选择S次后得到S个新数据集的一种技术。新数据集和原数据集的大小相等。每个数据集都是通过在原始数据集中随机选择一个样本来进行替换而得到的。这里的替换就意味着可以多次地选择同一样本。这一性质就允许新数据集中可以有重复的值，而原始数据集的某些值在新集合中则不再出现。在S个数据集建好之后，将某个学习算法分别作用于每个数据集就得到了S个分类器。当要对新数据进行分类时，就可以应用这S个分类器进行分类。与此同时，<strong>选择分类器投票结果中最多的类别作为最后的分类结果</strong>。当然，还有一些更先进的bagging方法，比如 <strong>随机森林（random forest）</strong>。</p><p>Bagging<br>1.通过降低基分类器的方差，改善了泛化误差。<br>2.性能依赖于基分类器的稳定性，如果基分类器不稳定，bagging有助于降低训练数据的随机波动导致的误差；如果稳定，则集成分类器的误差主要由基分类器的偏倚引起。<br>3.由于每个样本被选中的概率相同，因此bagging并不侧重于训练数据集中的任何特定实例。</p><p><img src="https://img-blog.csdnimg.cn/20190902101852545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="boosting"><a class="markdownIt-Anchor" href="#boosting"></a> <strong>boosting</strong></h3><p>boosting是一种与bagging很类似的技术。不论是在boosting还是bagging当中，所使用的多个分类器的类型都是一致的。但是在前者当中，不同的分类器是通过串行训练而获得的，每个新分类器都根据已训练出的分类器的性能来进行训练。</p><p>boosting是通过集中关注被已有分类器错分的那些数据来获得新的分类器。由于boosting分类的结果是基于所有分类器的加权求和结果的，因此boosting与bagging不太一样。<strong>bagging中的分类器权重是相等的，而boosting中的分类器权重并不相等，每个权重代表的是其对应分类器在上一轮迭代中的成功度</strong>。</p><p><img src="https://img-blog.csdnimg.cn/20190902102053709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><h3 id="二者的区别"><a class="markdownIt-Anchor" href="#二者的区别"></a> 二者的区别</h3><ul><li>样本选择上：<ul><li>Bagging：训练集是在原始集中有放回选取的，从原始集中选出的各轮训练集之间是独立的。</li><li>Boosting：每一轮的训练集不变，只是训练集中每个样例在分类器中的权重发生变化。而权值是根据上一轮的分类结果进行调整。</li></ul></li><li>样例权重：<ul><li>Bagging：使用均匀取样，每个样例的权重相等。</li><li>Boosting：根据错误率不断调整样例的权值，错误率越大则权重越大。</li></ul></li><li>预测函数：<ul><li>Bagging：所有预测函数的权重相等。</li><li>Boosting：每个弱分类器都有相应的权重，对于分类误差小的分类器会有更大的权重。</li></ul></li><li>并行计算：<ul><li>Bagging：各个预测函数可以并行生成。</li><li>Boosting：各个预测函数只能顺序生成，因为后一个模型参数需要前一轮模型的结果。</li></ul></li></ul><h3 id="adaboost提升分类器性能利器"><a class="markdownIt-Anchor" href="#adaboost提升分类器性能利器"></a> AdaBoost—提升分类器性能利器</h3><p>AdaBoost<br>优点：泛化错误率低，易编码，可以应用在大部分分类器上，无参数调整。<br>缺点：对离群点敏感。<br>适用数据类型：数值型和标称型数据。</p><p>AdaBoost的一般流程<br>(1) 收集数据：可以使用任意方法。<br>(2) 准备数据：依赖于所使用的弱分类器类型，本章使用的是单层决策树，这种分类器可以处理任何数据类型。当然也可以使用任意分类器作为弱分类器，第2章到第6章中的任一分类器都可以充当弱分类器。作为弱分类器，简单分类器的效果更好。<br>(3) 分析数据：可以使用任意方法。<br>(4) 训练算法：AdaBoost的大部分时间都用在训练上，分类器将多次在同一数据集上训练弱分类器。<br>(5) 测试算法：计算分类的错误率。<br>(6) 使用算法：同SVM一样，AdaBoost预测两个类别中的一个。如果想把它应用到多个类别的场合，那么就要像多类SVM中的做法一样对AdaBoost进行修改。</p><p>AdaBoost 是 <strong>adaptive boosting（自适应boosting）</strong> 的缩写，其运行过程如下：训练数据中的每个样本，并赋予其一个权重，这些权重构成了向量D。一开始，这些权重都初始化成相等值。首先在训练数据上训练出一个弱分类器并计算该分类器的错误率，然后在同一数据集上再次训练弱分类器。在分类器的第二次训练当中，将会重新调整每个样本的权重，其中 <strong>第一次分对的样本的权重将会降低，而第一次分错的样本的权重将会提高</strong>。为了从所有弱分类器中得到最终的分类结果，AdaBoost为每个分类器都分配了一个权重值alpha，这些alpha值是基于每个弱分类器的错误率进行计算的。其中，错误率ε的定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">未</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">目</mi></mrow><mrow><mi mathvariant="normal">所</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">目</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\varepsilon =\frac{未正确分类的样本数目}{所有样本数目} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ε</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">目</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">未</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">确</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">目</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>而alpha的计算公式如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>ε</mi></mrow><mi>ε</mi></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha =\frac{1}{2}ln(\frac{(1-\varepsilon }{\varepsilon } ) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">ε</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>AdaBoost算法的流程如图所示。</p><p><img src="https://img-blog.csdnimg.cn/20190902110144406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>计算出alpha值之后，可以对权重向量D进行更新，以使得那些正确分类的样本的权重降低而错分样本的权重升高。D的计算方法如下:</p><p><img src="https://img-blog.csdnimg.cn/20190902110336764.png" alt="img"></p><p>在计算出D之后，AdaBoost又开始进入下一轮迭代。AdaBoost算法会不断地重复训练和调整权重的过程，直到训练错误率为0或者弱分类器的数目达到用户的指定值为止。</p><p>AdaBoost算法总结如下：</p><p><img src="https://img-blog.csdnimg.cn/20190902110408486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><h2 id="分类器性能评估"><a class="markdownIt-Anchor" href="#分类器性能评估"></a> 分类器性能评估</h2><p>在大多数情况下不同类别的分类代价并不相等，这就是<strong>非均衡分类问题</strong>。我们将会考察一种新的分类器性能度量方法，而不再是简单的通过错误率进行评价，并通过图像技术来对在上述非均衡问题下不同分类器的性能进行可视化处理。然后，考察这两种分类器的变换算法，它们能够将不同决策的代价考虑在内。</p><h3 id="分类性能度量指标正确率-召回率及roc-曲线"><a class="markdownIt-Anchor" href="#分类性能度量指标正确率-召回率及roc-曲线"></a> 分类性能度量指标：正确率、召回率及ROC 曲线</h3><p>到现在为止，都是基于错误率来衡量分类器任务的成功程度的。<strong>错误率指的是在所有测试样例中错分的样例比例</strong>。实际上，这样的度量错误掩盖了样例如何被分错的事实。在机器学习中，有一个普遍适用的称为 <strong>混淆矩阵（confusion matrix）</strong> 的工具，它可以帮助人们更好地了解分类中的错误。有这样一个关于在房子周围可能发现的动物类型的预测，这个预测的三类问题的混淆矩阵如表所示。</p><p><img src="https://img-blog.csdnimg.cn/20190902161041197.png#pic_center" alt="img"></p><p>利用混淆矩阵就可以更好地理解分类中的错误了。如果矩阵中的非对角元素均为0，就会得到一个完美的分类器。</p><p>接下来，我们考虑另外一个混淆矩阵，这次的矩阵只针对一个简单的二类问题。在下表中，给出了该混淆矩阵。在这个二类问题中，如果将一个正例判为正例，那么就可以认为产生了一个 <strong>真正例（True Positive，TP，也称真阳）</strong>；如果对一个反例正确地判为反例，则认为产生了一个 <strong>真反例（True Negative，TN，也称真阴）</strong>。相应地，另外两种情况则分别称为 <strong>伪反例（False Negative，FN，也称假阴）</strong> 和 <strong>伪正例（False Positive，FP，也称假阳）</strong>。这4种情况如下表所示。</p><p><img src="https://img-blog.csdnimg.cn/20190902161116563.png#pic_center" alt="img"></p><p>在分类中，当某个类别的重要性高于其他类别时，我们就可以利用上述定义来定义出多个比错误率更好的新指标。第一个指标是正确率（Precision），它等于TP/(TP+FP)，给出的是预测为正例的样本中的真正正例的比例。第二个指标是召回率（Recall），它等于TP/(TP+FN)，给出的是预测为正例的真实正例占所有真实正例的比例。在召回率很大的分类器中，真正判错的正例的数目并不多。</p><p>我们可以很容易构造一个高正确率或高召回率的分类器，但是很难同时保证两者成立。如果将任何样本都判为正例，那么召回率达到百分之百而此时正确率很低。构建一个同时使正确率和召回率最大的分类器是具有挑战性的。</p><p>另一个用于度量分类中的非均衡性的工具是 <strong>ROC曲线（ROC curve）</strong>，ROC代表 <strong>接收者操作特征（receiver operating characteristic）</strong>，它最早在二战期间由电气工程师构建雷达系统时使用过，如下图。</p><p><img src="https://img-blog.csdnimg.cn/20190902161151507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70#pic_center" alt="img"></p><p>在ROC曲线中，给出了两条线，一条虚线一条实线。图中的横轴是伪正例的比例（假阳率=FP/(FP+TN)），而纵轴是真正例的比例（真阳率=TP/(TP+FN)）。ROC曲线给出的是当阈值变化时假阳率和真阳率的变化情况。左下角的点所对应的是将所有样例判为反例的情况，而右上角的点对应的则是将所有样例判为正例的情况。虚线给出的是随机猜测的结果曲线。</p><p>ROC曲线不但可以用于比较分类器，还可以基于 <strong>成本效益（cost-versus-benefit）</strong> 分析来做出决策。由于在不同的阈值下，不同的分类器的表现情况可能各不相同，因此以某种方式将它们组合起来或许会更有意义。如果只是简单地观察分类器的错误率，那么我们就难以得到这种更深入的洞察效果了。</p><p>在理想的情况下，最佳的分类器应该尽可能地处于左上角，这就意味着分类器在假阳率很低的同时获得了很高的真阳率。例如在垃圾邮件的过滤中，这就相当于过滤了所有的垃圾邮件，但没有将任何合法邮件误识为垃圾邮件而放入垃圾邮件的文件夹中。</p><p>对不同的ROC曲线进行比较的一个指标是 <strong>曲线下的面积（Area Unser the Curve，AUC）</strong>。AUC给出的是分类器的平均性能值，当然它并不能完全代替对整条曲线的观察。一个完美分类器的AUC为1.0，而随机猜测的AUC则为0.5。</p><h3 id="基于代价函数的分类器决策控制"><a class="markdownIt-Anchor" href="#基于代价函数的分类器决策控制"></a> 基于代价函数的分类器决策控制</h3><p>除了调节分类器的阈值之外，我们还有一些其他可以用于处理非均衡分类代价的方法，其中的一种称为 <strong>代价敏感的学习（cost-sensitive learning）</strong>。考虑表7-4中的代价矩阵，第一张表给出的是到目前为止分类器的代价矩阵（代价不是0就是1）。我们可以基于该代价矩阵计算其总代价：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>P</mi><mo>∗</mo><mn>0</mn><mo>+</mo><mi>F</mi><mi>N</mi><mo>∗</mo><mn>1</mn><mo>+</mo><mi>F</mi><mi>P</mi><mo>∗</mo><mn>1</mn><mo>+</mo><mi>T</mi><mi>N</mi><mo>∗</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">TP*0+FN*1+FP*1+TN*0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p>接下来我们考虑下面的第二张表，基于该代价矩阵的分类代价的计算公式为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>P</mi><mo>∗</mo><mo stretchy="false">(</mo><mo>−</mo><mn>5</mn><mo stretchy="false">)</mo><mo>+</mo><mi>F</mi><mi>N</mi><mo>∗</mo><mn>1</mn><mo>+</mo><mi>F</mi><mi>P</mi><mo>∗</mo><mn>50</mn><mo>+</mo><mi>T</mi><mi>N</mi><mo>∗</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">TP*(-5)+FN*1+FP*50+TN*0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。采用第二张表作为代价矩阵时，两种分类错误的代价是不一样的。类似地，这两种正确分类所得到的收益也不一样。如果在构建分类器时，知道了这些代价值，那么就可以选择付出最小代价的分类器。</p><p>在分类算法中，我们有很多方法可以用来引入代价信息。在AdaBoost中，可以基于代价函数来调整错误权重向量D。在朴素贝叶斯中，可以选择具有最小期望代价而不是最大概率的类别作为最后的结果。在SVM中，可以在代价函数中对于不同的类别选择不同的参数C。上述做法就会给较小类更多的权重，即在训练时，小类当中只允许更少的错误。</p><p><img src="https://img-blog.csdnimg.cn/20190902163317624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RlRnVpcm5ldmVy,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="处理非均衡问题的数据抽样方法"><a class="markdownIt-Anchor" href="#处理非均衡问题的数据抽样方法"></a> 处理非均衡问题的数据抽样方法</h3><p>另外一种针对非均衡问题调节分类器的方法，就是对分类器的训练数据进行改造。这可以通过**欠抽样（undersampling）<strong>或者</strong>过抽样（oversampling）**来实现。过抽样意味着复制样例，而欠抽样意味着删除样例。不管采用哪种方式，数据都会从原始形式改造为新形式。抽样过程则可以通过随机方式或者某个预定方式来实现。</p><p>通常也会存在某个罕见的类别需要我们来识别，比如在信用卡欺诈当中。如前所述，正例类别属于罕见类别。我们希望对于这种罕见类别能尽可能保留更多的信息，因此，我们应该保留正例类别中的所有样例，而对反例类别进行欠抽样或者样例删除处理。这种方法的一个缺点就在于要确定哪些样例需要进行剔除。但是，在选择剔除的样例中可能携带了剩余样例中并不包含的有价值信息。</p><p>上述问题的一种解决办法，就是选择那些离决策边界较远的样例进行删除。假定我们有一个数据集，其中有50例信用卡欺诈交易和5000例合法交易。如果我们想要对合法交易样例进行欠抽样处理，使得这两类数据比较均衡的话，那么我们就需要去掉4950个样例，而这些样例中可能包含很多有价值的信息。这看上去有些极端，因此有一种替代的策略就是使用反例类别的欠抽样和正例类别的过抽样相混合的方法。</p><p>要对正例类别进行过抽样，我们可以复制已有样例或者加入与已有样例相似的点。一种方法是加入已有数据点的插值点，但是这种做法可能会导致<strong>过拟合</strong>的问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分类算法总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#分类算法总结&quot;&gt;&lt;/a&gt; 分类算法总结&lt;/h1&gt;
&lt;h2 id=&quot;k-近邻&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#k-近邻&quot;&gt;&lt;/a&gt; K-</summary>
      
    
    
    
    <category term="机器学习" scheme="https://yao-chen-ecnu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="https://yao-chen-ecnu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>BlueBerry投屏</title>
    <link href="https://yao-chen-ecnu.github.io/2021/03/16/BlueBerry%E6%8A%95%E5%B1%8F/"/>
    <id>https://yao-chen-ecnu.github.io/2021/03/16/BlueBerry%E6%8A%95%E5%B1%8F/</id>
    <published>2021-03-16T02:06:42.711Z</published>
    <updated>2021-03-22T05:36:24.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="blueberry投屏"><a class="markdownIt-Anchor" href="#blueberry投屏"></a> BlueBerry投屏</h1><p><img src="/images/image-20201218130158933.png" alt></p><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ol><li><p>安装Windows接收端，解压安装包</p></li><li><p>如果电脑没用过平板投屏，先安装压缩包中的Bonjour64<img src="/images/image-20201218130311800.png" alt="image-20201218130311800"></p></li><li><p>打开blueberry，即双击打开压缩包中<img src="/images/image-20201218130408964.png" alt="image-20201218130408964">，可以在右下角任务栏中看到blueberry的图标<img src="/images/image-20201218130509063.png" alt="image-20201218130509063"></p></li><li><p>保证电脑和平板在同一局域网下，即连接同一个wifi</p></li><li><p>在ipad右上角触摸下拉唤醒控制中心，打开隔空投送并设置为所有人</p><p><img src="/images/image-20201218131331650.png" alt="image-20201218131331650"></p></li><li><p>打开屏幕镜像，选择blueberry</p><p><img src="/images/image-20201218132001948.png" alt="image-20201218132001948"></p></li><li><p>单击右下角菜单栏blueberry图标可以设置投屏形式</p><p><img src="/images/image-20201218132119593.png" alt="image-20201218132119593"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;blueberry投屏&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#blueberry投屏&quot;&gt;&lt;/a&gt; BlueBerry投屏&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/image-20201218130158933.png</summary>
      
    
    
    
    <category term="工具使用" scheme="https://yao-chen-ecnu.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="投屏" scheme="https://yao-chen-ecnu.github.io/tags/%E6%8A%95%E5%B1%8F/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的使用LaTex打公式</title>
    <link href="https://yao-chen-ecnu.github.io/2021/03/16/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8LaTex%E6%89%93%E5%85%AC%E5%BC%8F/"/>
    <id>https://yao-chen-ecnu.github.io/2021/03/16/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8LaTex%E6%89%93%E5%85%AC%E5%BC%8F/</id>
    <published>2021-03-16T02:06:42.707Z</published>
    <updated>2021-03-22T05:33:47.183Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何优雅的使用latex打公式"><a class="markdownIt-Anchor" href="#如何优雅的使用latex打公式"></a> <strong>如何优雅的使用LaTex打公式</strong></h1><p>推荐一个公式编辑网站：<a href="https://www.latexlive.com/">https://www.latexlive.com/</a></p><p><img src="/images/image-20201212135303692.png" alt></p><p>网站支持公式的快捷编辑、图片识别公式并快速生成LaTex代码，公式可移植性强</p><p>输入区域</p><ul><li>快捷工具：一些常用的符号、字母、公式形式（分数、根式、极限、积分）等</li><li>公式模板：提供一些常用的公式形式，代数、几何、积分、矩阵以及物理、化学等常用类别</li><li><strong>图片识别</strong>：使用win自带截图，截好图之后，直接在提示区域内复制后就可识别并生成公式</li></ul><p>输入区域的下方生成的是LaTex代码：可以直接复制使用到markdown文本中</p><p>输出区域是即时可见的公式，可以下载成图片形式或复制MathML形式的代码</p><p><strong>在word中插入公式的方法</strong></p><ol><li>提前安装好MathType</li><li>按‘alt’和‘+’快捷键，即可进入公式输入框，可以使用latex语法写公式</li><li>选择<img src="/images/image-20201212140354810.png" alt> 直接到公式输入框中粘贴</li><li><img src="/images/image-20201212140455554.png" alt></li><li>选择OK即可完成公式输入</li></ol><p><strong>在Typroa中插入公式的方法</strong></p><p>打开Typora选择数学模块的三种方式</p><ul><li>点击“段落”—&gt;“公式块”</li><li>快捷键Ctrl+Shift+m</li><li>“$$”+回车</li></ul><p>直接键入Tex代码</p><p>以上说的是行间公式的形式，默认是生成居中的代码块</p><p><strong>生成行间公式的方法</strong></p><p>在typora中设置内联公式：“文件”—“偏好设置”—“markdown”—“markdown扩展语法”—勾选”内联公式“</p><p><img src="/images/image-20201212141250775.png" alt></p><p>在行内直接键入<img src="/images/image-20201212141355714.png" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何优雅的使用latex打公式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何优雅的使用latex打公式&quot;&gt;&lt;/a&gt; &lt;strong&gt;如何优雅的使用LaTex打公式&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;推荐一个公式编辑网站：&lt;a hr</summary>
      
    
    
    
    <category term="工具使用" scheme="https://yao-chen-ecnu.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="公式" scheme="https://yao-chen-ecnu.github.io/tags/%E5%85%AC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>从僵尸游戏学Solidity</title>
    <link href="https://yao-chen-ecnu.github.io/2021/03/15/%E4%BB%8E%E5%83%B5%E5%B0%B8%E6%B8%B8%E6%88%8F%E5%AD%A6Solidity%EF%BC%88%E7%AC%94%E8%AE%B0%EF%BC%89/"/>
    <id>https://yao-chen-ecnu.github.io/2021/03/15/%E4%BB%8E%E5%83%B5%E5%B0%B8%E6%B8%B8%E6%88%8F%E5%AD%A6Solidity%EF%BC%88%E7%AC%94%E8%AE%B0%EF%BC%89/</id>
    <published>2021-03-15T12:45:57.437Z</published>
    <updated>2021-03-22T05:36:01.500Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h1><p>学习地址：<a href="https://cryptozombies.io/zh/course">https://cryptozombies.io/zh/course</a></p><p><strong>智能协议的永固性</strong><br>（即以太坊上的 DApp 跟普通的应用程序的区别）<br>在你把智能协议传上以太坊之后，它就变得不可更改, 这种永固性意味着你的代码永远不能被调整或更新。你编译的程序会一直，永久的，不可更改的，存在以太坊上。这就是 Solidity 代码的安全性如此重要的一个原因。如果你的智能协议有任何漏洞，即使你发现了也无法补救。你只能让你的用户们放弃这个智能协议，然后转移到一个新的修复后的合约上。<br>但这恰好也是智能合约的一大优势。代码说明一切。如果你去读智能合约的代码，并验证它，你会发现，一旦函数被定义下来，每一次的运行，程序都会严格遵照函数中原有的代码逻辑一丝不苟地执行，完全不用担心函数被人篡改而得到意外的结果。</p><p><strong>Gas - 驱动以太坊DApps的能源</strong><br>在 Solidity 中，你的用户想要每次执行你的 DApp 都需要支付一定的 gas，gas 可以用以太币购买，因此，用户每次跑 DApp 都得花费以太币。</p><p>一个 DApp 收取多少 gas 取决于功能逻辑的复杂程度。每个操作背后，都在计算完成这个操作所需要的计算资源，（比如，存储数据就比做个加法运算贵得多）， 一次操作所需要花费的 gas 等于这个操作背后的所有运算花销的总和。<br><em>省 gas 的招数：结构封装 （Struct packing）</em><br>除了基本版的 uint 外，还有其他变种 uint：uint8，uint16，uint32等。<br>通常情况下我们不会考虑使用 uint 变种，因为无论如何定义 uint的大小，Solidity 为它保留256位的存储空间。例如，使用 uint8 而不是uint（uint256）不会为你节省任何 gas。</p><p>除非，把 uint 绑定到 struct 里面。<br>如果一个 struct 中有多个 uint，则尽可能使用较小的 uint, Solidity 会将这些 uint 打包在一起，从而占用较少的存储空间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">struct NormalStruct &#123;</span><br><span class="line">  uint a;</span><br><span class="line">  uint b;</span><br><span class="line">  uint c;</span><br><span class="line">&#125;</span><br><span class="line">struct MiniMe &#123;</span><br><span class="line">  uint32 a;</span><br><span class="line">  uint32 b;</span><br><span class="line">  uint c;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 因为使用了结构打包，&#96;mini&#96; 比 &#96;normal&#96; 占用的空间更少</span><br><span class="line">NormalStruct normal &#x3D; NormalStruct(10, 20, 30);</span><br><span class="line">MiniMe mini &#x3D; MiniMe(10, 20, 30); </span><br></pre></td></tr></table></figure><p><em>“view” 函数不花 “gas”</em><br>这是因为 view 函数不会真正改变区块链上的任何数据 - 它们只是读取。因此用 view 标记一个函数，意味着告诉 web3.js，运行这个函数只需要查询你的本地以太坊节点，而不需要在区块链上创建一个事务（事务需要运行在每个节点上，因此花费 gas）。<br>注意：<em>如果一个 view 函数在另一个函数的内部被调用，而调用函数与 view 函数的不属于同一个合约，也会产生调用成本。这是因为如果主调函数在以太坊创建了一个事务，它仍然需要逐个节点去验证。所以标记为 view 的函数只有在外部调用时才是免费的。</em></p><p><strong>使用 SafeMath预防溢出</strong><br>为了防止这些情况，OpenZeppelin 建立了一个叫做 SafeMath 的 <em>库</em>(library)，默认情况下可以防止这些问题。<br>一个_库_ 是 Solidity 中一种特殊的合约。其中一个有用的功能是给原始数据类型增加一些方法。<br>比如，使用 SafeMath 库的时候，我们将使用 using SafeMath for uint256 这样的语法。 SafeMath 库有四个方法 — add， sub， mul， 以及 div。现在我们可以这样来让 uint256 调用这些方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">using SafeMath for uint256;</span><br><span class="line"></span><br><span class="line">uint256 a &#x3D; 5;</span><br><span class="line">uint256 b &#x3D; a.add(3); &#x2F;&#x2F; 5 + 3 &#x3D; 8</span><br><span class="line">uint256 c &#x3D; a.mul(2); &#x2F;&#x2F; 5 * 2 &#x3D; 10</span><br></pre></td></tr></table></figure><h1 id="sodility"><a class="markdownIt-Anchor" href="#sodility"></a> Sodility</h1><h2 id="合约"><a class="markdownIt-Anchor" href="#合约"></a> 合约</h2><p>一份合约就是以太应币应用的基本模块，所有的变量和函数都属于一份合约, 它是所有应用的起点.</p><p><strong>版本指令</strong>：所有的 Solidity 源码都必须冠以*“version pragma”* — 标明 Solidity 编译器的版本. 以避免将来新的编译器可能破坏你的代码。<em>（etc. pragma solidity ^0.4.19;)</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.19;</span><br><span class="line">contract ZombieFactory &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>OpenZeppelin库的Ownable 合约</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * @title Ownable</span><br><span class="line"> * @dev The Ownable contract has an owner address, and provides basic authorization control</span><br><span class="line"> * functions, this simplifies the implementation of &quot;user permissions&quot;.</span><br><span class="line"> *&#x2F;</span><br><span class="line">contract Ownable &#123;</span><br><span class="line">  address public owner;</span><br><span class="line">  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);</span><br><span class="line"></span><br><span class="line">  &#x2F;**</span><br><span class="line">   * @dev The Ownable constructor sets the original &#96;owner&#96; of the contract to the sender</span><br><span class="line">   * account.</span><br><span class="line">   *&#x2F;</span><br><span class="line">  function Ownable() public &#123;</span><br><span class="line">    owner &#x3D; msg.sender;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;**</span><br><span class="line">   * @dev Throws if called by any account other than the owner.</span><br><span class="line">   *&#x2F;</span><br><span class="line">  modifier onlyOwner() &#123;</span><br><span class="line">    require(msg.sender &#x3D;&#x3D; owner);</span><br><span class="line">    _;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;**</span><br><span class="line">   * @dev Allows the current owner to transfer control of the contract to a newOwner.</span><br><span class="line">   * @param newOwner The address to transfer ownership to.</span><br><span class="line">   *&#x2F;</span><br><span class="line">  function transferOwnership(address newOwner) public onlyOwner &#123;</span><br><span class="line">    require(newOwner !&#x3D; address(0));</span><br><span class="line">    OwnershipTransferred(owner, newOwner);</span><br><span class="line">    owner &#x3D; newOwner;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、构造函数：function Ownable()是一个 _ constructor_ (构造函数)，构造函数不是必须的，它与合约同名，构造函数一生中唯一的一次执行，就是在合约最初被创建的时候。<br>2、函数修饰符：modifier onlyOwner()。 修饰符跟函数很类似，不过是用来修饰其他已有函数用的， 在其他语句执行前，为它检查下先验条件。 在这个例子中，我们就可以写个修饰符 onlyOwner 检查下调用者，确保只有合约的主人才能运行本函数。<br>3、indexed 关键字：</p><h2 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h2><p><strong>状态变量</strong><br>状态变量是被<em>永久</em>地保存在合约中。也就是说它们被写入以太币区块链中. 想象成写入一个数据库。</p><p><strong>无符号整数</strong><br>uint 其值不能是负数，对于有符号的整数存在名为 int 的数据类型。<em>注: Solidity中， uint 实际上是 uint256代名词， 一个256位的无符号整数。你也可以定义位数少的uints — uint8， uint16， uint32</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uint dnaDigits &#x3D; 16;</span><br><span class="line">uint dnaModulus &#x3D; 10 ** dnaDigits;</span><br></pre></td></tr></table></figure><p><strong>结构体</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">struct Person &#123;</span><br><span class="line">  uint age;</span><br><span class="line">  string name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>数组</strong><br>Solidity 支持两种数组: <em>静态 数组和动态 数组</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 固定长度为2的静态数组:</span><br><span class="line">uint[2] fixedArray;</span><br><span class="line">&#x2F;&#x2F; 固定长度为5的string类型的静态数组:</span><br><span class="line">string[5] stringArray;</span><br><span class="line">&#x2F;&#x2F; 动态数组，长度不固定，可以动态添加元素:</span><br><span class="line">uint[] dynamicArray;</span><br></pre></td></tr></table></figure><p>也可以建立一个结构体类型的数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Person[] people; &#x2F;&#x2F; 这是动态数组，我们可以不断添加元素</span><br><span class="line">&#x2F;&#x2F; 创建一个新的Person:</span><br><span class="line">Person satoshi &#x3D; Person(172, &quot;Satoshi&quot;);</span><br><span class="line">&#x2F;&#x2F; 将新创建的satoshi添加进people数组:</span><br><span class="line">people.push(satoshi);</span><br><span class="line">&#x2F;&#x2F;也可以将两步合并</span><br><span class="line">people.push(Person(16, &quot;Vitalik&quot;));</span><br><span class="line">&#x2F;&#x2F;array.push() 在数组的尾部加入新元素，所以元素在数组中的顺序就是我们添加的顺序</span><br></pre></td></tr></table></figure><p>注：<br>状态变量被永久保存在区块链中。所以在你的合约中创建动态数组来保存成结构的数据是非常有意义的。</p><p><strong>公共数组</strong><br>定义 <em>public</em> 数组, Solidity 会自动创建 <em>getter</em> 方法. 语法如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Zombie[] public zombies;</span><br></pre></td></tr></table></figure><p>其它的合约可以从这个数组读取数据（但不能写入数据），所以这在合约中是一个有用的保存公共数据的模式。</p><p><strong>映射（Mapping）和地址（Address）</strong><br><em>Addresses（地址）</em><br>以太坊区块链由 _ account _ (账户)组成，一个帐户的余额是 <em>以太</em> （在以太坊区块链上使用的币种），你可以和其他帐户之间支付和接受以太币，就像银行帐户可以电汇资金到其他银行帐户一样。<br>在 Solidity 中，有一些全局变量可以被所有函数调用。 其中一个就是 <em>msg.sender</em>，它指的是当前调用者（或智能合约）的 address。<br><em>Mapping（映射）</em><br>映射本质上是存储和查找数据所用的键-值对。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mapping (uint &#x3D;&gt; address) public zombieToOwner;</span><br><span class="line">mapping (address &#x3D;&gt; uint) ownerZombieCount;</span><br></pre></td></tr></table></figure><p><strong>Storage与Memory</strong><br>在 Solidity 中，有两个地方可以存储变量 —— storage 或 memory。<br><em>Storage</em> 变量是指永久存储在区块链中的变量。<br><em>Memory</em>变量则是临时的，当外部函数对某合约调用完成时，内存型变量即被移除。 你可以把它想象成存储在你电脑的硬盘或是RAM中数据的关系。<br>默认情况下 Solidity 会自动处理它们。 状态变量（在函数之外声明的变量）默认为“存储”形式，并永久写入区块链；而在函数内部声明的变量是“内存”型的，它们函数调用结束后消失。<br>然而也有一些情况下，你需要手动声明存储类型，主要用于处理函数内的 _ 结构体 _ 和 _ 数组 _ 时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Sandwich[] sandwiches;</span><br><span class="line">function eatSandwich(uint _index) public &#123;</span><br><span class="line">  &#x2F;&#x2F; Sandwich mySandwich &#x3D; sandwiches[_index];</span><br><span class="line">  &#x2F;&#x2F; ^ 看上去很直接，不过 Solidity 将会给出警告</span><br><span class="line">  &#x2F;&#x2F; 告诉你应该明确在这里定义 &#96;storage&#96; 或者 &#96;memory&#96;。</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 所以你应该明确定义 &#96;storage&#96;:</span><br><span class="line">  Sandwich storage mySandwich &#x3D; sandwiches[_index];</span><br><span class="line">  &#x2F;&#x2F; ...这样 &#96;mySandwich&#96; 是指向 &#96;sandwiches[_index]&#96;的指针</span><br><span class="line">  &#x2F;&#x2F; 在存储里，另外...</span><br><span class="line">  mySandwich.status &#x3D; &quot;Eaten!&quot;;</span><br><span class="line">  &#x2F;&#x2F; ...这将永久把 &#96;sandwiches[_index]&#96; 变为区块链上的存储</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 如果你只想要一个副本，可以使用&#96;memory&#96;:</span><br><span class="line">  Sandwich memory anotherSandwich &#x3D; sandwiches[_index + 1];</span><br><span class="line">  &#x2F;&#x2F; ...这样 &#96;anotherSandwich&#96; 就仅仅是一个内存里的副本了</span><br><span class="line">  &#x2F;&#x2F; 另外</span><br><span class="line">  anotherSandwich.status &#x3D; &quot;Eaten!&quot;;</span><br><span class="line">  &#x2F;&#x2F; ...将仅仅修改临时变量，对 &#96;sandwiches[_index + 1]&#96; 没有任何影响</span><br><span class="line">  &#x2F;&#x2F; 不过你可以这样做:</span><br><span class="line">  sandwiches[_index + 1] &#x3D; anotherSandwich;</span><br><span class="line">  &#x2F;&#x2F; ...如果你想把副本的改动保存回区块链存储</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Keccak256 和 类型转换</strong><br>Ethereum 内部有一个散列函数keccak256，它用了SHA3版本。一个散列函数基本上就是把一个字符串转换为一个256位的16进制数字。字符串的一个微小变化会引起散列数据极大变化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uint rand &#x3D; uint(keccak256(_str));</span><br></pre></td></tr></table></figure><p><strong>时间单位</strong><br>变量 now 将返回当前的unix时间戳（自1970年1月1日以来经过的秒数）。<br>Solidity 还包含秒(seconds)，分钟(minutes)，小时(hours)，天(days)，周(weeks) 和 年(years) 等时间单位。它们都会转换成对应的秒数放入 uint 中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">uint lastUpdated;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将‘上次更新时间’ 设置为 ‘现在’</span><br><span class="line">function updateTimestamp() public &#123;</span><br><span class="line">  lastUpdated &#x3D; now;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 如果到上次&#96;updateTimestamp&#96; 超过5分钟，返回 &#39;true&#39;</span><br><span class="line">&#x2F;&#x2F; 不到5分钟返回 &#39;false&#39;</span><br><span class="line">function fiveMinutesHavePassed() public view returns (bool) &#123;</span><br><span class="line">  return (now &gt;&#x3D; (lastUpdated + 5 minutes));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><p>在 Solidity 中函数定义的句法如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function createZombie(string _name, uint _dna) &#123;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>注： <em>习惯上函数里的变量都是以(_)开头 (但不是硬性规定) 以区别全局变量。</em></p><p><mark>require</mark>使得函数在执行过程中，当不满足某些条件时抛出错误，并停止执行。在调用一个函数之前，用 require 验证前置条件是非常有必要的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require(ownerZombieCount[msg.sender] &#x3D;&#x3D; 0);</span><br></pre></td></tr></table></figure><p><strong>公有/私有函数</strong><br>Solidity 定义的函数的属性默认为<em>公共</em>。 这就意味着任何一方 (或其它合约) 都可以调用你合约里的函数。<br>将自己的函数定义为<em>私有</em>是一个好的编程习惯，只有当你需要外部世界调用它时才将它设置为公共。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function _createZombie(string _name, uint _dna) private &#123;</span><br><span class="line">        zombies.push(Zombie(_name, _dna));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这意味着只有我们合约中的其它函数才能够调用这个函数,和函数的参数类似，私有函数的名字用(_)起始。</p><p><strong>函数的修饰符</strong><br>1、<em>可见性修饰符</em>:：决定函数何时和被谁调用：private 意味着它只能被合约内部调用； internal 就像 private 但是也能被继承的合约调用； external 只能从合约外部调用；最后 public 可以在任何地方调用，不管是内部还是外部。<br>2、<em>状态修饰符</em>：决定函数如何和区块链交互: view 告诉我们运行这个函数不会更改和保存任何数据； pure 告诉我们这个函数不但不会往区块链写数据，它甚至不从区块链读取数据。这两种在被从合约外部调用的时候都不花费任何gas（但是它们在被内部其他函数调用的时候将会耗费gas）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;view</span><br><span class="line">function sayHello() public view returns (string) </span><br><span class="line">&#x2F;&#x2F;pure</span><br><span class="line">function _multiply(uint a, uint b) private pure returns (uint) &#123;</span><br><span class="line">  return a * b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、<em>自定义的 modifier</em>，我们可以自定义其对函数的约束逻辑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 存储用户年龄的映射</span><br><span class="line">mapping (uint &#x3D;&gt; uint) public age;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 限定用户年龄的修饰符</span><br><span class="line">modifier olderThan(uint _age, uint _userId) &#123;</span><br><span class="line">  require(age[_userId] &gt;&#x3D; _age);</span><br><span class="line">  _;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 必须年满16周岁才允许开车 (至少在美国是这样的).</span><br><span class="line">&#x2F;&#x2F; 我们可以用如下参数调用&#96;olderThan&#96; 修饰符:</span><br><span class="line">function driveCar(uint _userId) public olderThan(16, _userId) &#123;</span><br><span class="line">  &#x2F;&#x2F; 其余的程序逻辑</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、payable 修饰符<br>payable方法是让 Solidity 和以太坊变得如此酷的一部分 —— 它们是一种可以接收以太的特殊函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">contract OnlineStore &#123;</span><br><span class="line">  function buySomething() external payable &#123;</span><br><span class="line">    &#x2F;&#x2F; 检查以确定0.001以太发送出去来运行函数:</span><br><span class="line">    require(msg.value &#x3D;&#x3D; 0.001 ether);</span><br><span class="line">    &#x2F;&#x2F; 如果为真，一些用来向函数调用者发送数字内容的逻辑</span><br><span class="line">    transferThing(msg.sender);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，msg.value 是一种可以查看向合约发送了多少以太的方法，另外 ether 是一个內建单元。</p><p>这里发生的事是，一些人会从 web3.js 调用这个函数 (从DApp的前端)， 像这样 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 假设 &#96;OnlineStore&#96; 在以太坊上指向你的合约:</span><br><span class="line">OnlineStore.buySomething().send(from: web3.eth.defaultAccount, value: web3.utils.toWei(0.001))</span><br></pre></td></tr></table></figure><p><em>提现</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">contract GetPaid is Ownable &#123;</span><br><span class="line">  function withdraw() external onlyOwner &#123;</span><br><span class="line">    owner.transfer(this.balance);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 transfer 函数向一个地址发送以太， 然后 this.balance 将返回当前合约存储了多少以太。</p><p><strong>返回值</strong><br><em>单个返回值</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function _generateRandomDna(string _str) private returns (uint) &#123;</span><br><span class="line">        &#x2F;&#x2F; 这里开始</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><em>多个返回值</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function multipleReturns() internal returns(uint a, uint b, uint c) &#123;</span><br><span class="line">  return (1, 2, 3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function processMultipleReturns() external &#123;</span><br><span class="line">  uint a;</span><br><span class="line">  uint b;</span><br><span class="line">  uint c;</span><br><span class="line">  &#x2F;&#x2F; 这样来做批量赋值:</span><br><span class="line">  (a, b, c) &#x3D; multipleReturns();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或者如果我们只想返回其中一个变量:</span><br><span class="line">function getLastReturnValue() external &#123;</span><br><span class="line">  uint c;</span><br><span class="line">  &#x2F;&#x2F; 可以对其他字段留空:</span><br><span class="line">  (,,c) &#x3D; multipleReturns();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>继承（Inheritance）和引入（Import）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import &quot;.&#x2F;zombiefactory.sol&quot;;</span><br><span class="line">contract ZombieFeeding is ZombieFactory &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以实现多继承</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">contract ZombieOwnership is ZombieAttack, ERC721 &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>For 循环</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function getEvens() pure external returns(uint[]) &#123;</span><br><span class="line">  uint[] memory evens &#x3D; new uint[](5);</span><br><span class="line">  &#x2F;&#x2F; 在新数组中记录序列号</span><br><span class="line">  uint counter &#x3D; 0;</span><br><span class="line">  &#x2F;&#x2F; 在循环从1迭代到10：</span><br><span class="line">  for (uint i &#x3D; 1; i &lt;&#x3D; 10; i++) &#123;</span><br><span class="line">    &#x2F;&#x2F; 如果 &#96;i&#96; 是偶数...</span><br><span class="line">    if (i % 2 &#x3D;&#x3D; 0) &#123;</span><br><span class="line">      &#x2F;&#x2F; 把它加入偶数数组</span><br><span class="line">      evens[counter] &#x3D; i;</span><br><span class="line">      &#x2F;&#x2F;索引加一， 指向下一个空的‘even’</span><br><span class="line">      counter++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return evens;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件"><a class="markdownIt-Anchor" href="#事件"></a> 事件</h2><p><em>事件</em>是合约和区块链通讯的一种机制。前端应用“监听”某些事件，并做出反应。</p><h2 id="与其他合约的交互"><a class="markdownIt-Anchor" href="#与其他合约的交互"></a> 与其他合约的交互</h2><p>如果我们的合约需要和区块链上的其他的合约会话，则需先定义一个 interface (接口)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">contract KittyInterface &#123;</span><br><span class="line">  function getKitty(uint256 _id) external view returns (</span><br><span class="line">    bool isGestating,</span><br><span class="line">    bool isReady,</span><br><span class="line">    uint256 cooldownIndex,</span><br><span class="line">    uint256 nextActionAt,</span><br><span class="line">    uint256 siringWithId,</span><br><span class="line">    uint256 birthTime,</span><br><span class="line">    uint256 matronId,</span><br><span class="line">    uint256 sireId,</span><br><span class="line">    uint256 generation,</span><br><span class="line">    uint256 genes</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个过程虽然看起来像在定义一个合约，但其实内里不同：<br>首先，我们只声明了要与之交互的函数 ，在其中我们没有使用到任何其他的函数或状态变量。<br>其次，我们并没有使用大括号（{ 和 }）定义函数体，我们单单用分号（;）结束了函数声明。这使它看起来像一个合约框架。<br>编译器就是靠这些特征认出它是一个接口的。<br>在我们的 app 代码中使用这个接口，合约就知道其他合约的函数是怎样的，应该如何调用，以及可期待什么类型的返回值。<br>只要将合约的可见性设置为public(公共)或external(外部)，它们就可以与以太坊区块链上的任何其他合约进行交互。</p><h2 id="以太坊上的代币"><a class="markdownIt-Anchor" href="#以太坊上的代币"></a> 以太坊上的代币</h2><p>一个 <em>代币</em> 在以太坊基本上就是一个遵循一些共同规则的智能合约——即它实现了所有其他代币合约共享的一组标准函数，例如 transfer(address _to, uint256 _value) 和 balanceOf(address _owner).<br>在智能合约内部，通常有一个映射， mapping(address =&gt; uint256) balances，用于追踪每个地址还有多少余额。所以基本上一个代币只是一个追踪谁拥有多少该代币的合约，和一些可以让那些用户将他们的代币转移到其他地址的函数。<br>代币标准：ERC20、ERC721（加密收藏品）<br><em>ERC271</em>代币是不能互换的，因为每个代币都被认为是唯一且不可分割的。 你只能以整个单位交易它们，并且每个单位都有唯一的 ID。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">contract ERC721 &#123;</span><br><span class="line">  event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);</span><br><span class="line">  event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);</span><br><span class="line">  </span><br><span class="line">  function balanceOf(address _owner) public view returns (uint256 _balance);</span><br><span class="line">  function ownerOf(uint256 _tokenId) public view returns (address _owner);</span><br><span class="line">  function transfer(address _to, uint256 _tokenId) public;</span><br><span class="line">  function approve(address _to, uint256 _tokenId) public;</span><br><span class="line">  function takeOwnership(uint256 _tokenId) public;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ERC721: 转移标准</strong><br>ERC721 规范有两种不同的方法来转移代币：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function transfer(address _to, uint256 _tokenId) public;</span><br><span class="line"></span><br><span class="line">function approve(address _to, uint256 _tokenId) public;</span><br><span class="line">function takeOwnership(uint256 _tokenId) public;</span><br></pre></td></tr></table></figure><p>1、第一种方法是代币的拥有者调用transfer 方法，传入他想转移到的 address 和他想转移的代币的 _tokenId。<br>2、第二种方法是代币拥有者首先调用 approve，然后传入与以上相同的参数。接着，该合约会存储谁被允许提取代币，通常存储到一个 mapping (uint256 =&gt; address) 里。然后，当有人调用 takeOwnership 时，合约会检查 msg.sender 是否得到拥有者的批准来提取代币，如果是，则将代币转移给他。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function _transfer(address _from, address _to, uint256 _tokenId) private &#123;</span><br><span class="line">    ownerZombieCount[_to]++;</span><br><span class="line">    ownerZombieCount[_from]--;</span><br><span class="line">    zombieToOwner[_tokenId] &#x3D; _to;</span><br><span class="line">    Transfer(_from, _to, _tokenId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  function transfer(address _to, uint256 _tokenId) public onlyOwnerOf(_tokenId) &#123;</span><br><span class="line">    _transfer(msg.sender, _to, _tokenId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  function approve(address _to, uint256 _tokenId) public onlyOwnerOf(_tokenId) &#123;</span><br><span class="line">    zombieApprovals[_tokenId] &#x3D; _to;</span><br><span class="line">    Approval(msg.sender, _to, _tokenId);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  function takeOwnership(uint256 _tokenId) public &#123;</span><br><span class="line">    require(zombieApprovals[_tokenId] &#x3D;&#x3D; msg.sender);</span><br><span class="line">    address owner &#x3D; ownerOf(_tokenId);</span><br><span class="line">    _transfer(owner, msg.sender, _tokenId);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="应用前端和-web3js"><a class="markdownIt-Anchor" href="#应用前端和-web3js"></a> 应用前端和 Web3.js</h1><p><strong>什么是 Web3.js?</strong><br>以太坊网络是由节点组成的，每一个节点都包含了区块链的一份拷贝。当你想要调用一份智能合约的一个方法，你需要从其中一个节点中查找并告诉它:智能合约的地址、你想调用的方法，以及你想传入那个方法的参数。以太坊节点只能识别一种叫做 JSON-RPC 的语言。这种语言直接读起来并不好懂。<br>幸运的是 Web3.js 把这些令人讨厌的查询语句都隐藏起来了， 所以你只需要与方便易懂的 JavaScript 界面进行交互即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CryptoZombies.methods.createRandomZombie(&quot;Vitalik Nakamoto 🤔&quot;)</span><br><span class="line">  .send(&#123; from: &quot;0xb60e8dd61c5d32be8058bb8eb970870f07233155&quot;, gas: &quot;3000000&quot; &#125;)</span><br></pre></td></tr></table></figure><p><strong>添加Web3.js工具</strong><br>可以从 github 直接下载压缩后的 .js 文件 然后包含到项目文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language&#x3D;&quot;javascript&quot; type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;web3.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>Web3 Provider</strong><br>以太坊是由共享同一份数据的相同拷贝的 <em>节点</em> 构成的。 在 Web3.js 里设置 Web3 的 Provider（提供者） 告诉我们的代码应该和 哪个节点 交互来处理我们的读写。这就好像在传统的 Web 应用程序中为你的 API 调用设置远程 Web 服务器的网址。</p><p><strong>Infura</strong><br>Infura 是一个服务，它维护了很多以太坊节点并提供了一个缓存层来实现高速读取。你可以用他们的 API 来免费访问这个服务。 用 Infura 作为节点提供者，你可以不用自己运营节点就能很可靠地向以太坊发送、接收信息。<br>你可以通过这样把 Infura 作为你的 Web3 节点提供者：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var web3 &#x3D; new Web3(new Web3.providers.WebsocketProvider(&quot;wss:&#x2F;&#x2F;mainnet.infura.io&#x2F;ws&quot;));</span><br></pre></td></tr></table></figure><p><strong>Metamask</strong><br>Metamask 是 Chrome 和 Firefox 的浏览器扩展， 它能让用户安全地维护他们的以太坊账户和私钥， 并用他们的账户和使用 Web3.js 的网站互动。Metamask 默认使用 Infura 的服务器做为 web3 提供者。<br><em>使用 Metamask 的 web3 提供者</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">window.addEventListener(&#39;load&#39;, function() &#123;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 检查web3是否已经注入到(Mist&#x2F;MetaMask)</span><br><span class="line">  if (typeof web3 !&#x3D;&#x3D; &#39;undefined&#39;) &#123;</span><br><span class="line">    &#x2F;&#x2F; 使用 Mist&#x2F;MetaMask 的提供者</span><br><span class="line">    web3js &#x3D; new Web3(web3.currentProvider);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    &#x2F;&#x2F; 处理用户没安装的情况， 比如显示一个消息</span><br><span class="line">    &#x2F;&#x2F; 告诉他们要安装 MetaMask 来使用我们的应用</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 现在你可以启动你的应用并自由访问 Web3.js:</span><br><span class="line">  startApp()</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>与合约对话</strong><br>Web3.js 需要两个东西来和你的合约对话: 它的<em>地址</em>和它的 <em>ABI</em>。<br><em>地址</em>：在你部署智能合约以后，它将获得一个以太坊上的永久地址。<br><em>ABI</em>当你编译你的合约向以太坊部署时(我们将在第七课详述)， Solidity 编译器会给你 ABI。将编译了的ABI 并放在名为cryptozombies_abi.js文件中，保存在一个名为 cryptoZombiesABI 的变量中。将cryptozombies_abi.js 包含进我们的项目，我们就能通过那个变量访问 CryptoZombies ABI 。<br><em>实例化 Web3.js</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 实例化 myContract</span><br><span class="line">var myContract &#x3D; new web3js.eth.Contract(myABI, myContractAddress);</span><br></pre></td></tr></table></figure><p><strong>调用和合约函数</strong><br>Web3.js 有两个方法来调用我们合约的函数: call and send.<br><em>Call</em><br>call 用来调用 view 和 pure 函数。它只运行在本地节点，不会在区块链上创建事务。（view 和 pure 函数是只读的并不会改变区块链的状态。它们也不会消耗任何gas。用户也不会被要求用MetaMask对事务签名。）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function getZombieDetails(id) &#123;</span><br><span class="line">  return cryptoZombies.methods.zombies(id).call()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用函数并做一些其他事情</span><br><span class="line">getZombieDetails(15)</span><br><span class="line">.then(function(result) &#123;</span><br><span class="line">  console.log(&quot;Zombie 15: &quot; + JSON.stringify(result));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>cryptoZombies.methods.zombies(id).call() 将和 Web3 提供者节点通信，告诉它返回从我们的合约中的 Zombie[] public zombies，id为传入参数的僵尸信息。<br>注意这是 异步的，就像从外部服务器中调用API。所以 Web3 在这里返回了一个 Promises. (如果你对 JavaScript的 Promises 不了解，最好先去学习一下这方面知识再继续)。<br>一旦那个 promise 被 resolve, (意味着我们从 Web3 提供者那里获得了响应)，我们的例子代码将执行 then 语句中的代码，在控制台打出 result。</p><p><em>获得 MetaMask中的用户账户</em><br>MetaMask 允许用户在扩展中管理多个账户。<br>我们可以通过这样来获取 web3 变量中激活的当前账户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var userAccount &#x3D; web3.eth.accounts[0]</span><br></pre></td></tr></table></figure><p>因为用户可以随时在 MetaMask 中切换账户，我们的应用需要监控这个变量，一旦改变就要相应更新界面。例如，若用户的首页展示它们的僵尸大军，当他们在 MetaMask 中切换了账号，我们就需要更新页面来展示新选择的账户的僵尸大军。</p><p>我们可以通过 setInterval 方法来做:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var accountInterval &#x3D; setInterval(function() &#123;</span><br><span class="line">          &#x2F;&#x2F; Check if account has changed</span><br><span class="line">          if (web3.eth.accounts[0] !&#x3D;&#x3D; userAccount) &#123;</span><br><span class="line">            userAccount &#x3D; web3.eth.accounts[0];</span><br><span class="line">            &#x2F;&#x2F; Call a function to update the UI with the new account</span><br><span class="line">            getZombiesByOwner(userAccount)</span><br><span class="line">            .then(displayZombies);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;, 100);</span><br></pre></td></tr></table></figure><p>这段代码做的是，每100毫秒检查一次 userAccount 是否还等于 web3.eth.accounts[0] (比如：用户是否还激活了那个账户)。若不等，则将 当前激活用户赋值给 userAccount，然后调用一个函数来更新界面。</p><p><em>Send</em><br>send 将创建一个事务并改变区块链上的数据。你需要用 send 来调用任何非 view 或者 pure 的函数。（send 一个事务将要求用户支付gas，并会要求弹出对话框请求用户使用 Metamask 对事务签名。在我们使用 Metamask 作为我们的 web3 提供者的时候，所有这一切都会在我们调用 send() 的时候自动发生。而我们自己无需在代码中操心这一切。）</p><p>相对 call 函数，send 函数有如下主要区别:<br>1、send 一个事务需要一个 from 地址来表明谁在调用这个函数（也就是你 Solidity 代码里的 msg.sender )。 我们需要这是我们 DApp 的用户，这样一来 MetaMask 才会弹出提示让他们对事务签名。<br>2、send 一个事务将花费 gas<br>3、在用户 send 一个事务到该事务对区块链产生实际影响之间有一个不可忽略的延迟。这是因为我们必须等待事务被包含进一个区块里，以太坊上一个区块的时间平均下来是15秒左右。如果当前在以太坊上有大量挂起事务或者用户发送了过低的 gas 价格，我们的事务可能需要等待数个区块才能被包含进去，往往可能花费数分钟。</p><p>所以在我们的代码中我们需要编写逻辑来处理这部分异步特性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function createRandomZombie(name) &#123;</span><br><span class="line">  &#x2F;&#x2F; 这将需要一段时间，所以在界面中告诉用户这一点</span><br><span class="line">  &#x2F;&#x2F; 事务被发送出去了</span><br><span class="line">  $(&quot;#txStatus&quot;).text(&quot;正在区块链上创建僵尸，这将需要一会儿...&quot;);</span><br><span class="line">  &#x2F;&#x2F; 把事务发送到我们的合约:</span><br><span class="line">  return cryptoZombies.methods.createRandomZombie(name)</span><br><span class="line">  .send(&#123; from: userAccount &#125;)</span><br><span class="line">  .on(&quot;receipt&quot;, function(receipt) &#123;</span><br><span class="line">    $(&quot;#txStatus&quot;).text(&quot;成功生成了 &quot; + name + &quot;!&quot;);</span><br><span class="line">    &#x2F;&#x2F; 事务被区块链接受了，重新渲染界面</span><br><span class="line">    getZombiesByOwner(userAccount).then(displayZombies);</span><br><span class="line">  &#125;)</span><br><span class="line">  .on(&quot;error&quot;, function(error) &#123;</span><br><span class="line">    &#x2F;&#x2F; 告诉用户合约失败了</span><br><span class="line">    $(&quot;#txStatus&quot;).text(error);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Web3.js 中需要特殊对待的函数 — payable 函数。</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function levelUp(zombieId) &#123;</span><br><span class="line">        $(&quot;#txStatus&quot;).text(&quot;Leveling up your zombie...&quot;);</span><br><span class="line">        return cryptoZombies.methods.levelUp(zombieId)</span><br><span class="line">        .send(&#123; from: userAccount, value: web3.utils.toWei(&quot;0.001&quot;, &quot;ether&quot;) &#125;)</span><br><span class="line">        .on(&quot;receipt&quot;, function(receipt) &#123;</span><br><span class="line">          $(&quot;#txStatus&quot;).text(&quot;Power overwhelming! Zombie successfully leveled up&quot;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .on(&quot;error&quot;, function(error) &#123;</span><br><span class="line">          $(&quot;#txStatus&quot;).text(error);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><em>订阅合约事件</em><br>在 Web3.js里， 你可以订阅 一个事件，这样你的 Web3 提供者可以在每次事件发生后触发你的一些代码逻辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cryptoZombies.events.NewZombie()</span><br><span class="line">.on(&quot;data&quot;, function(event) &#123;</span><br><span class="line">  let zombie &#x3D; event.returnValues;</span><br><span class="line">  console.log(&quot;一个新僵尸诞生了！&quot;, zombie.zombieId, zombie.name, zombie.dna);</span><br><span class="line">&#125;).on(&#39;error&#39;, console.error);</span><br></pre></td></tr></table></figure><p>注意这段代码将在 任何 僵尸生成的时候激发一个警告信息——而不仅仅是当前用用户的僵尸。如果我们只想对当前用户发出提醒呢？<br><em>使用indexed</em><br>为了筛选仅和当前用户相关的事件，我们的 Solidity 合约将必须使用 indexed 关键字，就像我们在 ERC721 实现中的Transfer 事件中那样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);</span><br></pre></td></tr></table></figure><p>在这种情况下， 因为_from 和 _to 都是 indexed，这就意味着我们可以在前端事件监听中过滤事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cryptoZombies.events.Transfer(&#123; filter: &#123; _to: userAccount &#125; &#125;)</span><br><span class="line">.on(&quot;data&quot;, function(event) &#123;</span><br><span class="line">  let data &#x3D; event.returnValues;</span><br><span class="line">  &#x2F;&#x2F; 当前用户更新了一个僵尸！更新界面来显示</span><br><span class="line">&#125;).on(&#39;error&#39;, console.error);</span><br></pre></td></tr></table></figure><p><em>查询过去的事件</em><br>我们甚至可以用 getPastEvents 查询过去的事件，并用过滤器 fromBlock 和 toBlock 给 Solidity 一个事件日志的时间范围(“block” 在这里代表以太坊区块编号）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cryptoZombies.getPastEvents(&quot;NewZombie&quot;, &#123; fromBlock: 0, toBlock: &#39;latest&#39; &#125;)</span><br><span class="line">.then(function(events) &#123;</span><br><span class="line">  &#x2F;&#x2F; events 是可以用来遍历的 &#96;event&#96; 对象 </span><br><span class="line">  &#x2F;&#x2F; 这段代码将返回给我们从开始以来创建的僵尸列表</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写在前面&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#写在前面&quot;&gt;&lt;/a&gt; 写在前面&lt;/h1&gt;
&lt;p&gt;学习地址：&lt;a href=&quot;https://cryptozombies.io/zh/course&quot;&gt;https://cryptozo</summary>
      
    
    
    
    <category term="区块链" scheme="https://yao-chen-ecnu.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="Solidity" scheme="https://yao-chen-ecnu.github.io/tags/Solidity/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yao-chen-ecnu.github.io/2021/03/15/hello-world/"/>
    <id>https://yao-chen-ecnu.github.io/2021/03/15/hello-world/</id>
    <published>2021-03-15T06:57:56.253Z</published>
    <updated>2021-03-15T06:57:56.253Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
